

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Dec 25 20:12:09 2024

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0004                     fsr             equ	4
    59     0004                     fsr0            equ	4
    60     0000                     indf            equ	0
    61     0000                     indf0           equ	0
    62     0002                     pc              equ	2
    63     0002                     pcl             equ	2
    64     000A                     pclath          equ	10
    65     0003                     status          equ	3
    66     0000                     INDF            equ	0	;# 
    67     0001                     TMR0            equ	1	;# 
    68     0002                     PCL             equ	2	;# 
    69     0003                     STATUS          equ	3	;# 
    70     0004                     FSR             equ	4	;# 
    71     0005                     PORTA           equ	5	;# 
    72     0006                     PORTB           equ	6	;# 
    73     0007                     PORTC           equ	7	;# 
    74     0008                     PORTD           equ	8	;# 
    75     0009                     PORTE           equ	9	;# 
    76     000A                     PCLATH          equ	10	;# 
    77     000B                     INTCON          equ	11	;# 
    78     000C                     PIR1            equ	12	;# 
    79     000D                     PIR2            equ	13	;# 
    80     000E                     TMR1            equ	14	;# 
    81     000E                     TMR1L           equ	14	;# 
    82     000F                     TMR1H           equ	15	;# 
    83     0010                     T1CON           equ	16	;# 
    84     0011                     TMR2            equ	17	;# 
    85     0012                     T2CON           equ	18	;# 
    86     0013                     SSPBUF          equ	19	;# 
    87     0014                     SSPCON          equ	20	;# 
    88     0015                     CCPR1           equ	21	;# 
    89     0015                     CCPR1L          equ	21	;# 
    90     0016                     CCPR1H          equ	22	;# 
    91     0017                     CCP1CON         equ	23	;# 
    92     0018                     RCSTA           equ	24	;# 
    93     0019                     TXREG           equ	25	;# 
    94     001A                     RCREG           equ	26	;# 
    95     001B                     CCPR2           equ	27	;# 
    96     001B                     CCPR2L          equ	27	;# 
    97     001C                     CCPR2H          equ	28	;# 
    98     001D                     CCP2CON         equ	29	;# 
    99     001E                     ADRESH          equ	30	;# 
   100     001F                     ADCON0          equ	31	;# 
   101     0081                     OPTION_REG      equ	129	;# 
   102     0085                     TRISA           equ	133	;# 
   103     0086                     TRISB           equ	134	;# 
   104     0087                     TRISC           equ	135	;# 
   105     0088                     TRISD           equ	136	;# 
   106     0089                     TRISE           equ	137	;# 
   107     008C                     PIE1            equ	140	;# 
   108     008D                     PIE2            equ	141	;# 
   109     008E                     PCON            equ	142	;# 
   110     0091                     SSPCON2         equ	145	;# 
   111     0092                     PR2             equ	146	;# 
   112     0093                     SSPADD          equ	147	;# 
   113     0094                     SSPSTAT         equ	148	;# 
   114     0098                     TXSTA           equ	152	;# 
   115     0099                     SPBRG           equ	153	;# 
   116     009C                     CMCON           equ	156	;# 
   117     009D                     CVRCON          equ	157	;# 
   118     009E                     ADRESL          equ	158	;# 
   119     009F                     ADCON1          equ	159	;# 
   120     010C                     EEDATA          equ	268	;# 
   121     010D                     EEADR           equ	269	;# 
   122     010E                     EEDATH          equ	270	;# 
   123     010F                     EEADRH          equ	271	;# 
   124     018C                     EECON1          equ	396	;# 
   125     018D                     EECON2          equ	397	;# 
   126     0000                     INDF            equ	0	;# 
   127     0001                     TMR0            equ	1	;# 
   128     0002                     PCL             equ	2	;# 
   129     0003                     STATUS          equ	3	;# 
   130     0004                     FSR             equ	4	;# 
   131     0005                     PORTA           equ	5	;# 
   132     0006                     PORTB           equ	6	;# 
   133     0007                     PORTC           equ	7	;# 
   134     0008                     PORTD           equ	8	;# 
   135     0009                     PORTE           equ	9	;# 
   136     000A                     PCLATH          equ	10	;# 
   137     000B                     INTCON          equ	11	;# 
   138     000C                     PIR1            equ	12	;# 
   139     000D                     PIR2            equ	13	;# 
   140     000E                     TMR1            equ	14	;# 
   141     000E                     TMR1L           equ	14	;# 
   142     000F                     TMR1H           equ	15	;# 
   143     0010                     T1CON           equ	16	;# 
   144     0011                     TMR2            equ	17	;# 
   145     0012                     T2CON           equ	18	;# 
   146     0013                     SSPBUF          equ	19	;# 
   147     0014                     SSPCON          equ	20	;# 
   148     0015                     CCPR1           equ	21	;# 
   149     0015                     CCPR1L          equ	21	;# 
   150     0016                     CCPR1H          equ	22	;# 
   151     0017                     CCP1CON         equ	23	;# 
   152     0018                     RCSTA           equ	24	;# 
   153     0019                     TXREG           equ	25	;# 
   154     001A                     RCREG           equ	26	;# 
   155     001B                     CCPR2           equ	27	;# 
   156     001B                     CCPR2L          equ	27	;# 
   157     001C                     CCPR2H          equ	28	;# 
   158     001D                     CCP2CON         equ	29	;# 
   159     001E                     ADRESH          equ	30	;# 
   160     001F                     ADCON0          equ	31	;# 
   161     0081                     OPTION_REG      equ	129	;# 
   162     0085                     TRISA           equ	133	;# 
   163     0086                     TRISB           equ	134	;# 
   164     0087                     TRISC           equ	135	;# 
   165     0088                     TRISD           equ	136	;# 
   166     0089                     TRISE           equ	137	;# 
   167     008C                     PIE1            equ	140	;# 
   168     008D                     PIE2            equ	141	;# 
   169     008E                     PCON            equ	142	;# 
   170     0091                     SSPCON2         equ	145	;# 
   171     0092                     PR2             equ	146	;# 
   172     0093                     SSPADD          equ	147	;# 
   173     0094                     SSPSTAT         equ	148	;# 
   174     0098                     TXSTA           equ	152	;# 
   175     0099                     SPBRG           equ	153	;# 
   176     009C                     CMCON           equ	156	;# 
   177     009D                     CVRCON          equ	157	;# 
   178     009E                     ADRESL          equ	158	;# 
   179     009F                     ADCON1          equ	159	;# 
   180     010C                     EEDATA          equ	268	;# 
   181     010D                     EEADR           equ	269	;# 
   182     010E                     EEDATH          equ	270	;# 
   183     010F                     EEADRH          equ	271	;# 
   184     018C                     EECON1          equ	396	;# 
   185     018D                     EECON2          equ	397	;# 
   186     0000                     INDF            equ	0	;# 
   187     0001                     TMR0            equ	1	;# 
   188     0002                     PCL             equ	2	;# 
   189     0003                     STATUS          equ	3	;# 
   190     0004                     FSR             equ	4	;# 
   191     0005                     PORTA           equ	5	;# 
   192     0006                     PORTB           equ	6	;# 
   193     0007                     PORTC           equ	7	;# 
   194     0008                     PORTD           equ	8	;# 
   195     0009                     PORTE           equ	9	;# 
   196     000A                     PCLATH          equ	10	;# 
   197     000B                     INTCON          equ	11	;# 
   198     000C                     PIR1            equ	12	;# 
   199     000D                     PIR2            equ	13	;# 
   200     000E                     TMR1            equ	14	;# 
   201     000E                     TMR1L           equ	14	;# 
   202     000F                     TMR1H           equ	15	;# 
   203     0010                     T1CON           equ	16	;# 
   204     0011                     TMR2            equ	17	;# 
   205     0012                     T2CON           equ	18	;# 
   206     0013                     SSPBUF          equ	19	;# 
   207     0014                     SSPCON          equ	20	;# 
   208     0015                     CCPR1           equ	21	;# 
   209     0015                     CCPR1L          equ	21	;# 
   210     0016                     CCPR1H          equ	22	;# 
   211     0017                     CCP1CON         equ	23	;# 
   212     0018                     RCSTA           equ	24	;# 
   213     0019                     TXREG           equ	25	;# 
   214     001A                     RCREG           equ	26	;# 
   215     001B                     CCPR2           equ	27	;# 
   216     001B                     CCPR2L          equ	27	;# 
   217     001C                     CCPR2H          equ	28	;# 
   218     001D                     CCP2CON         equ	29	;# 
   219     001E                     ADRESH          equ	30	;# 
   220     001F                     ADCON0          equ	31	;# 
   221     0081                     OPTION_REG      equ	129	;# 
   222     0085                     TRISA           equ	133	;# 
   223     0086                     TRISB           equ	134	;# 
   224     0087                     TRISC           equ	135	;# 
   225     0088                     TRISD           equ	136	;# 
   226     0089                     TRISE           equ	137	;# 
   227     008C                     PIE1            equ	140	;# 
   228     008D                     PIE2            equ	141	;# 
   229     008E                     PCON            equ	142	;# 
   230     0091                     SSPCON2         equ	145	;# 
   231     0092                     PR2             equ	146	;# 
   232     0093                     SSPADD          equ	147	;# 
   233     0094                     SSPSTAT         equ	148	;# 
   234     0098                     TXSTA           equ	152	;# 
   235     0099                     SPBRG           equ	153	;# 
   236     009C                     CMCON           equ	156	;# 
   237     009D                     CVRCON          equ	157	;# 
   238     009E                     ADRESL          equ	158	;# 
   239     009F                     ADCON1          equ	159	;# 
   240     010C                     EEDATA          equ	268	;# 
   241     010D                     EEADR           equ	269	;# 
   242     010E                     EEDATH          equ	270	;# 
   243     010F                     EEADRH          equ	271	;# 
   244     018C                     EECON1          equ	396	;# 
   245     018D                     EECON2          equ	397	;# 
   246     0000                     INDF            equ	0	;# 
   247     0001                     TMR0            equ	1	;# 
   248     0002                     PCL             equ	2	;# 
   249     0003                     STATUS          equ	3	;# 
   250     0004                     FSR             equ	4	;# 
   251     0005                     PORTA           equ	5	;# 
   252     0006                     PORTB           equ	6	;# 
   253     0007                     PORTC           equ	7	;# 
   254     0008                     PORTD           equ	8	;# 
   255     0009                     PORTE           equ	9	;# 
   256     000A                     PCLATH          equ	10	;# 
   257     000B                     INTCON          equ	11	;# 
   258     000C                     PIR1            equ	12	;# 
   259     000D                     PIR2            equ	13	;# 
   260     000E                     TMR1            equ	14	;# 
   261     000E                     TMR1L           equ	14	;# 
   262     000F                     TMR1H           equ	15	;# 
   263     0010                     T1CON           equ	16	;# 
   264     0011                     TMR2            equ	17	;# 
   265     0012                     T2CON           equ	18	;# 
   266     0013                     SSPBUF          equ	19	;# 
   267     0014                     SSPCON          equ	20	;# 
   268     0015                     CCPR1           equ	21	;# 
   269     0015                     CCPR1L          equ	21	;# 
   270     0016                     CCPR1H          equ	22	;# 
   271     0017                     CCP1CON         equ	23	;# 
   272     0018                     RCSTA           equ	24	;# 
   273     0019                     TXREG           equ	25	;# 
   274     001A                     RCREG           equ	26	;# 
   275     001B                     CCPR2           equ	27	;# 
   276     001B                     CCPR2L          equ	27	;# 
   277     001C                     CCPR2H          equ	28	;# 
   278     001D                     CCP2CON         equ	29	;# 
   279     001E                     ADRESH          equ	30	;# 
   280     001F                     ADCON0          equ	31	;# 
   281     0081                     OPTION_REG      equ	129	;# 
   282     0085                     TRISA           equ	133	;# 
   283     0086                     TRISB           equ	134	;# 
   284     0087                     TRISC           equ	135	;# 
   285     0088                     TRISD           equ	136	;# 
   286     0089                     TRISE           equ	137	;# 
   287     008C                     PIE1            equ	140	;# 
   288     008D                     PIE2            equ	141	;# 
   289     008E                     PCON            equ	142	;# 
   290     0091                     SSPCON2         equ	145	;# 
   291     0092                     PR2             equ	146	;# 
   292     0093                     SSPADD          equ	147	;# 
   293     0094                     SSPSTAT         equ	148	;# 
   294     0098                     TXSTA           equ	152	;# 
   295     0099                     SPBRG           equ	153	;# 
   296     009C                     CMCON           equ	156	;# 
   297     009D                     CVRCON          equ	157	;# 
   298     009E                     ADRESL          equ	158	;# 
   299     009F                     ADCON1          equ	159	;# 
   300     010C                     EEDATA          equ	268	;# 
   301     010D                     EEADR           equ	269	;# 
   302     010E                     EEDATH          equ	270	;# 
   303     010F                     EEADRH          equ	271	;# 
   304     018C                     EECON1          equ	396	;# 
   305     018D                     EECON2          equ	397	;# 
   306                           
   307                           	psect	idataCOMMON
   308     05D7                     __pidataCOMMON:
   309                           
   310                           ;initializer for read_digital_keypad@once
   311     05D7  3401               	retlw	1
   312                           
   313                           	psect	idataBANK0
   314     05FF                     __pidataBANK0:
   315                           
   316                           ;initializer for main@digit
   317     05FF  343F               	retlw	63
   318     0600  3406               	retlw	6
   319     0601  345B               	retlw	91
   320     0602  344F               	retlw	79
   321     0603  3466               	retlw	102
   322     0604  346D               	retlw	109
   323     0605  347D               	retlw	125
   324     0606  3407               	retlw	7
   325     0607  347F               	retlw	127
   326     0608  346F               	retlw	111
   327                           
   328                           ;initializer for main@F990
   329     0609  343F               	retlw	63
   330     060A  343F               	retlw	63
   331     060B  343F               	retlw	63
   332     060C  343F               	retlw	63
   333     0006                     _PORTB          set	6
   334     0008                     _PORTD          set	8
   335     0005                     _PORTA          set	5
   336     0086                     _TRISB          set	134
   337     0085                     _TRISA          set	133
   338     0088                     _TRISD          set	136
   339                           
   340                           	psect	cinit
   341     07E4                     start_initialization:	
   342                           ; #config settings
   343                           
   344     07E4                     __initialization:
   345                           
   346                           ; Initialize objects allocated to BANK0
   347     07E4  1383               	bcf	3,7	;select IRP bank0
   348     07E5  302E               	movlw	low (__pdataBANK0+14)
   349     07E6  00FD               	movwf	btemp+-1
   350     07E7  3005               	movlw	high __pidataBANK0
   351     07E8  00FE               	movwf	btemp
   352     07E9  30FF               	movlw	low __pidataBANK0
   353     07EA  00FF               	movwf	btemp+1
   354     07EB  3020               	movlw	low __pdataBANK0
   355     07EC  0084               	movwf	4
   356     07ED  120A  118A  2611  120A  118A  	fcall	init_ram0
   357                           
   358                           ; Initialize objects allocated to COMMON
   359     07F2  120A  118A  25D7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   360     07F7  00FC               	movwf	__pdataCOMMON& (0+127)
   361                           
   362                           ; Clear objects allocated to BANK0
   363     07F8  01B4               	clrf	__pbssBANK0& (0+127)
   364     07F9  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   365     07FA  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   366     07FB  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   367     07FC                     end_of_initialization:	
   368                           ;End of C runtime variable initialization code
   369                           
   370     07FC                     __end_of__initialization:
   371     07FC  0183               	clrf	3
   372     07FD  120A  118A  2EED   	ljmp	_main	;jump to C main() function
   373                           
   374                           	psect	dataCOMMON
   375     007C                     __pdataCOMMON:
   376     007C                     read_digital_keypad@once:
   377     007C                     	ds	1
   378                           
   379                           	psect	bssBANK0
   380     0034                     __pbssBANK0:
   381     0034                     main@key_pressed_time:
   382     0034                     	ds	2
   383     0036                     main@count:
   384     0036                     	ds	2
   385                           
   386                           	psect	dataBANK0
   387     0020                     __pdataBANK0:
   388     0020                     main@digit:
   389     0020                     	ds	10
   390     002A                     main@F990:
   391     002A                     	ds	4
   392                           
   393                           	psect	inittext
   394     060D                     init_fetch0:	
   395                           ;	Called with low address in FSR and high address in W
   396                           
   397     060D  087E               	movf	btemp,w
   398     060E  008A               	movwf	10
   399     060F  087F               	movf	btemp+1,w
   400     0610  0082               	movwf	2
   401     0611                     init_ram0:	
   402                           ;Called with:
   403                           ;	high address of idata address in btemp 
   404                           ;	low address of idata address in btemp+1 
   405                           ;	low address of data in FSR
   406                           ;	high address + 1 of data in btemp-1
   407                           
   408     0611  120A  118A  260D  120A  118A  	fcall	init_fetch0
   409     0616  0080               	movwf	0
   410     0617  0A84               	incf	4,f
   411     0618  0804               	movf	4,w
   412     0619  067D               	xorwf	btemp+-1,w
   413     061A  1903               	btfsc	3,2
   414     061B  3400               	retlw	0
   415     061C  0AFF               	incf	btemp+1,f
   416     061D  1903               	btfsc	3,2
   417     061E  0AFE               	incf	btemp,f
   418     061F  2E11               	goto	init_ram0
   419                           
   420                           	psect	cstackCOMMON
   421     0070                     __pcstackCOMMON:
   422     0070                     ?_init_ssd:
   423     0070                     ?_init_digital_keypad:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?_display:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_key_press:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_init_config:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?___lwdiv:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     display@data:	
   442                           ; 2 bytes @ 0x0
   443                           
   444     0070                     ___lwdiv@divisor:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ??_init_ssd:	
   448                           ; 2 bytes @ 0x0
   449                           
   450     0070                     ??_init_digital_keypad:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ??_key_press:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ??_init_config:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           ; 1 bytes @ 0x0
   461     0070                     	ds	1
   462     0071                     ??_display:
   463                           
   464                           ; 1 bytes @ 0x1
   465     0071                     	ds	1
   466     0072                     ___lwdiv@dividend:
   467                           
   468                           ; 2 bytes @ 0x2
   469     0072                     	ds	2
   470     0074                     ___lwdiv@quotient:
   471     0074                     ??___lwdiv:	
   472                           ; 2 bytes @ 0x4
   473                           
   474                           
   475                           ; 1 bytes @ 0x4
   476     0074                     	ds	1
   477     0075                     display@wait:
   478                           
   479                           ; 4 bytes @ 0x5
   480     0075                     	ds	1
   481     0076                     ___lwdiv@counter:
   482                           
   483                           ; 1 bytes @ 0x6
   484     0076                     	ds	1
   485     0077                     ?___lwmod:
   486     0077                     ___lwmod@divisor:	
   487                           ; 2 bytes @ 0x7
   488                           
   489                           
   490                           ; 2 bytes @ 0x7
   491     0077                     	ds	2
   492     0079                     display@digit:
   493     0079                     ___lwmod@dividend:	
   494                           ; 1 bytes @ 0x9
   495                           
   496                           
   497                           ; 2 bytes @ 0x9
   498     0079                     	ds	2
   499     007B                     ___lwmod@counter:
   500     007B                     ??___lwmod:	
   501                           ; 1 bytes @ 0xB
   502                           
   503                           
   504                           ; 1 bytes @ 0xB
   505     007B                     	ds	1
   506     007C                     ??_main:
   507                           
   508                           	psect	cstackBANK0
   509     002E                     __pcstackBANK0:	
   510                           ; 1 bytes @ 0xC
   511                           
   512     002E                     main@ssd:
   513                           
   514                           ; 4 bytes @ 0x0
   515     002E                     	ds	4
   516     0032                     main@reset:
   517                           
   518                           ; 1 bytes @ 0x4
   519     0032                     	ds	1
   520     0033                     main@key:
   521                           
   522                           ; 1 bytes @ 0x5
   523     0033                     	ds	1
   524                           
   525                           	psect	maintext
   526     06ED                     __pmaintext:	
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 25 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  ssd             4    0[BANK0 ] unsigned char [4]
   537 ;;  key             1    5[BANK0 ] unsigned char 
   538 ;;  reset           1    4[BANK0 ] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : B00/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       6       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       6       0       0       0
   552 ;;Total ram usage:        6 bytes
   553 ;; Hardware stack levels required when called: 2
   554 ;; This function calls:
   555 ;;		___lwdiv
   556 ;;		___lwmod
   557 ;;		_display
   558 ;;		_init_config
   559 ;;		_key_press
   560 ;; This function is called by:
   561 ;;		Startup code after reset
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565     06ED                     _main:	
   566                           ;psect for function _main
   567                           
   568     06ED                     l867:	
   569                           ;incstack = 0
   570                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   571                           
   572                           
   573                           ;main.c: 27: ;main.c: 28:         if ((!key) && (reset == 1)) {
   574     06ED  1283               	bcf	3,5	;RP0=0, select bank0
   575     06EE  1303               	bcf	3,6	;RP1=0, select bank0
   576     06EF  082D               	movf	main@F990+3,w
   577     06F0  00B1               	movwf	main@ssd+3
   578     06F1  082C               	movf	main@F990+2,w
   579     06F2  00B0               	movwf	main@ssd+2
   580     06F3  082B               	movf	main@F990+1,w
   581     06F4  00AF               	movwf	main@ssd+1
   582     06F5  082A               	movf	main@F990,w
   583     06F6  00AE               	movwf	main@ssd
   584     06F7                     l869:
   585                           
   586                           ;main.c: 29:             key_pressed_time = 0;;main.c: 30:             reset = 0;;main.c
      +                          : 31:         }
   587     06F7  120A  118A  25E8  120A  118A  	fcall	_init_config
   588     06FC                     l871:
   589                           
   590                           ;main.c: 33:         if ((!key) && (key_pressed_time > 0 && key_pressed_time < 100)) {
   591     06FC  302E               	movlw	(low (main@ssd| 0))& (0+255)
   592     06FD  00F0               	movwf	display@data
   593     06FE  120A  118A  269A  120A  118A  	fcall	_display
   594     0703                     l873:
   595                           
   596                           ;main.c: 36:         }
   597     0703  120A  118A  25DE  120A  118A  	fcall	_key_press
   598     0708  1283               	bcf	3,5	;RP0=0, select bank0
   599     0709  1303               	bcf	3,6	;RP1=0, select bank0
   600     070A  00B3               	movwf	main@key
   601     070B                     l875:
   602                           
   603                           ;main.c: 38:         ssd [3] = digit [count % 10];
   604     070B  0333               	decf	main@key,w
   605     070C  1D03               	btfss	3,2
   606     070D  2F0F               	goto	u501
   607     070E  2F10               	goto	u500
   608     070F                     u501:
   609     070F  2F16               	goto	l879
   610     0710                     u500:
   611     0710                     l877:
   612                           
   613                           ;main.c: 39:         ssd [2] = digit [(count / 10) % 10];;main.c: 40:         ssd [1] = 
      +                          digit [(count / 100) % 10];
   614     0710  3001               	movlw	1
   615     0711  07B4               	addwf	main@key_pressed_time,f
   616     0712  1803               	skipnc
   617     0713  0AB5               	incf	main@key_pressed_time+1,f
   618     0714  3000               	movlw	0
   619     0715  07B5               	addwf	main@key_pressed_time+1,f
   620     0716                     l879:
   621                           
   622                           ;main.c: 42: 
   623     0716  0333               	decf	main@key,w
   624     0717  1D03               	btfss	3,2
   625     0718  2F1A               	goto	u511
   626     0719  2F1B               	goto	u510
   627     071A                     u511:
   628     071A  2F28               	goto	l887
   629     071B                     u510:
   630     071B                     l881:
   631     071B  3000               	movlw	0
   632     071C  0235               	subwf	main@key_pressed_time+1,w
   633     071D  3065               	movlw	101
   634     071E  1903               	skipnz
   635     071F  0234               	subwf	main@key_pressed_time,w
   636     0720  1C03               	skipc
   637     0721  2F23               	goto	u521
   638     0722  2F24               	goto	u520
   639     0723                     u521:
   640     0723  2F28               	goto	l887
   641     0724                     u520:
   642     0724                     l883:
   643                           
   644                           ;main.c: 43:         display(ssd);;main.c: 44: 
   645     0724  01B6               	clrf	main@count
   646     0725  01B7               	clrf	main@count+1
   647     0726                     l885:
   648                           
   649                           ;main.c: 45:         if (count == 9999)
   650     0726  3001               	movlw	1
   651     0727  00B2               	movwf	main@reset
   652     0728                     l887:
   653                           
   654                           ;main.c: 48: }
   655     0728  0833               	movf	main@key,w
   656     0729  1D03               	btfss	3,2
   657     072A  2F2C               	goto	u531
   658     072B  2F2D               	goto	u530
   659     072C                     u531:
   660     072C  2F35               	goto	l893
   661     072D                     u530:
   662     072D                     l889:
   663     072D  0332               	decf	main@reset,w
   664     072E  1D03               	btfss	3,2
   665     072F  2F31               	goto	u541
   666     0730  2F32               	goto	u540
   667     0731                     u541:
   668     0731  2F35               	goto	l893
   669     0732                     u540:
   670     0732                     l891:
   671     0732  01B4               	clrf	main@key_pressed_time
   672     0733  01B5               	clrf	main@key_pressed_time+1
   673     0734  01B2               	clrf	main@reset
   674     0735                     l893:
   675     0735  0833               	movf	main@key,w
   676     0736  1D03               	btfss	3,2
   677     0737  2F39               	goto	u551
   678     0738  2F3A               	goto	u550
   679     0739                     u551:
   680     0739  2F51               	goto	l903
   681     073A                     u550:
   682     073A                     l895:
   683     073A  0834               	movf	main@key_pressed_time,w
   684     073B  0435               	iorwf	main@key_pressed_time+1,w
   685     073C  1903               	btfsc	3,2
   686     073D  2F3F               	goto	u561
   687     073E  2F40               	goto	u560
   688     073F                     u561:
   689     073F  2F51               	goto	l903
   690     0740                     u560:
   691     0740                     l897:
   692     0740  3000               	movlw	0
   693     0741  0235               	subwf	main@key_pressed_time+1,w
   694     0742  3064               	movlw	100
   695     0743  1903               	skipnz
   696     0744  0234               	subwf	main@key_pressed_time,w
   697     0745  1803               	skipnc
   698     0746  2F48               	goto	u571
   699     0747  2F49               	goto	u570
   700     0748                     u571:
   701     0748  2F51               	goto	l903
   702     0749                     u570:
   703     0749                     l899:
   704     0749  3001               	movlw	1
   705     074A  07B6               	addwf	main@count,f
   706     074B  1803               	skipnc
   707     074C  0AB7               	incf	main@count+1,f
   708     074D  3000               	movlw	0
   709     074E  07B7               	addwf	main@count+1,f
   710     074F                     l901:
   711     074F  01B4               	clrf	main@key_pressed_time
   712     0750  01B5               	clrf	main@key_pressed_time+1
   713     0751                     l903:
   714     0751  300A               	movlw	10
   715     0752  00F7               	movwf	___lwmod@divisor
   716     0753  3000               	movlw	0
   717     0754  00F8               	movwf	___lwmod@divisor+1
   718     0755  0837               	movf	main@count+1,w
   719     0756  00FA               	movwf	___lwmod@dividend+1
   720     0757  0836               	movf	main@count,w
   721     0758  00F9               	movwf	___lwmod@dividend
   722     0759  120A  118A  2620  120A  118A  	fcall	___lwmod
   723     075E  0877               	movf	?___lwmod,w
   724     075F  3E20               	addlw	(low (main@digit| 0))& (0+255)
   725     0760  0084               	movwf	4
   726     0761  1383               	bcf	3,7	;select IRP bank0
   727     0762  0800               	movf	0,w
   728     0763  1283               	bcf	3,5	;RP0=0, select bank0
   729     0764  1303               	bcf	3,6	;RP1=0, select bank0
   730     0765  00B1               	movwf	main@ssd+3
   731     0766                     l905:
   732     0766  300A               	movlw	10
   733     0767  00F7               	movwf	___lwmod@divisor
   734     0768  3000               	movlw	0
   735     0769  00F8               	movwf	___lwmod@divisor+1
   736     076A  300A               	movlw	10
   737     076B  00F0               	movwf	___lwdiv@divisor
   738     076C  3000               	movlw	0
   739     076D  00F1               	movwf	___lwdiv@divisor+1
   740     076E  0837               	movf	main@count+1,w
   741     076F  00F3               	movwf	___lwdiv@dividend+1
   742     0770  0836               	movf	main@count,w
   743     0771  00F2               	movwf	___lwdiv@dividend
   744     0772  120A  118A  2658  120A  118A  	fcall	___lwdiv
   745     0777  0871               	movf	?___lwdiv+1,w
   746     0778  00FA               	movwf	___lwmod@dividend+1
   747     0779  0870               	movf	?___lwdiv,w
   748     077A  00F9               	movwf	___lwmod@dividend
   749     077B  120A  118A  2620  120A  118A  	fcall	___lwmod
   750     0780  0877               	movf	?___lwmod,w
   751     0781  3E20               	addlw	(low (main@digit| 0))& (0+255)
   752     0782  0084               	movwf	4
   753     0783  1383               	bcf	3,7	;select IRP bank0
   754     0784  0800               	movf	0,w
   755     0785  1283               	bcf	3,5	;RP0=0, select bank0
   756     0786  1303               	bcf	3,6	;RP1=0, select bank0
   757     0787  00B0               	movwf	main@ssd+2
   758     0788                     l907:
   759     0788  300A               	movlw	10
   760     0789  00F7               	movwf	___lwmod@divisor
   761     078A  3000               	movlw	0
   762     078B  00F8               	movwf	___lwmod@divisor+1
   763     078C  3064               	movlw	100
   764     078D  00F0               	movwf	___lwdiv@divisor
   765     078E  3000               	movlw	0
   766     078F  00F1               	movwf	___lwdiv@divisor+1
   767     0790  0837               	movf	main@count+1,w
   768     0791  00F3               	movwf	___lwdiv@dividend+1
   769     0792  0836               	movf	main@count,w
   770     0793  00F2               	movwf	___lwdiv@dividend
   771     0794  120A  118A  2658  120A  118A  	fcall	___lwdiv
   772     0799  0871               	movf	?___lwdiv+1,w
   773     079A  00FA               	movwf	___lwmod@dividend+1
   774     079B  0870               	movf	?___lwdiv,w
   775     079C  00F9               	movwf	___lwmod@dividend
   776     079D  120A  118A  2620  120A  118A  	fcall	___lwmod
   777     07A2  0877               	movf	?___lwmod,w
   778     07A3  3E20               	addlw	(low (main@digit| 0))& (0+255)
   779     07A4  0084               	movwf	4
   780     07A5  1383               	bcf	3,7	;select IRP bank0
   781     07A6  0800               	movf	0,w
   782     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   783     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   784     07A9  00AF               	movwf	main@ssd+1
   785     07AA                     l909:
   786     07AA  300A               	movlw	10
   787     07AB  00F7               	movwf	___lwmod@divisor
   788     07AC  3000               	movlw	0
   789     07AD  00F8               	movwf	___lwmod@divisor+1
   790     07AE  30E8               	movlw	232
   791     07AF  00F0               	movwf	___lwdiv@divisor
   792     07B0  3003               	movlw	3
   793     07B1  00F1               	movwf	___lwdiv@divisor+1
   794     07B2  0837               	movf	main@count+1,w
   795     07B3  00F3               	movwf	___lwdiv@dividend+1
   796     07B4  0836               	movf	main@count,w
   797     07B5  00F2               	movwf	___lwdiv@dividend
   798     07B6  120A  118A  2658  120A  118A  	fcall	___lwdiv
   799     07BB  0871               	movf	?___lwdiv+1,w
   800     07BC  00FA               	movwf	___lwmod@dividend+1
   801     07BD  0870               	movf	?___lwdiv,w
   802     07BE  00F9               	movwf	___lwmod@dividend
   803     07BF  120A  118A  2620  120A  118A  	fcall	___lwmod
   804     07C4  0877               	movf	?___lwmod,w
   805     07C5  3E20               	addlw	(low (main@digit| 0))& (0+255)
   806     07C6  0084               	movwf	4
   807     07C7  1383               	bcf	3,7	;select IRP bank0
   808     07C8  0800               	movf	0,w
   809     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   810     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   811     07CB  00AE               	movwf	main@ssd
   812     07CC                     l911:
   813     07CC  302E               	movlw	(low (main@ssd| 0))& (0+255)
   814     07CD  00F0               	movwf	display@data
   815     07CE  120A  118A  269A  120A  118A  	fcall	_display
   816     07D3                     l913:
   817     07D3  300F               	movlw	15
   818     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   819     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   820     07D6  0636               	xorwf	main@count,w
   821     07D7  3027               	movlw	39
   822     07D8  1903               	skipnz
   823     07D9  0637               	xorwf	main@count+1,w
   824     07DA  1D03               	btfss	3,2
   825     07DB  2FDD               	goto	u581
   826     07DC  2FDE               	goto	u580
   827     07DD                     u581:
   828     07DD  2F03               	goto	l873
   829     07DE                     u580:
   830     07DE                     l915:
   831     07DE  01B6               	clrf	main@count
   832     07DF  01B7               	clrf	main@count+1
   833     07E0  2F03               	goto	l873
   834     07E1  120A  118A  2800   	ljmp	start
   835     07E4                     __end_of_main:
   836                           
   837                           	psect	text1
   838     05DE                     __ptext1:	
   839 ;; *************** function _key_press *****************
   840 ;; Defined at:
   841 ;;		line 39 in file "digital_keypad.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      unsigned char 
   848 ;; Registers used:
   849 ;;		wreg
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868     05DE                     _key_press:	
   869                           ;psect for function _key_press
   870                           
   871     05DE                     l807:	
   872                           ;incstack = 0
   873                           ; Regs used in _key_press: [wreg]
   874                           
   875                           
   876                           ;digital_keypad.c: 41:  if ((PORTB & 0x01) == 0)
   877     05DE  1283               	bcf	3,5	;RP0=0, select bank0
   878     05DF  1303               	bcf	3,6	;RP1=0, select bank0
   879     05E0  1806               	btfsc	6,0	;volatile
   880     05E1  2DE3               	goto	u361
   881     05E2  2DE4               	goto	u360
   882     05E3                     u361:
   883     05E3  2DE6               	goto	l815
   884     05E4                     u360:
   885     05E4                     l809:
   886                           
   887                           ;digital_keypad.c: 42:   return 1;
   888     05E4  3001               	movlw	1
   889     05E5  2DE7               	goto	l72
   890     05E6                     l815:
   891                           
   892                           ;digital_keypad.c: 44:   return 0;
   893     05E6  3000               	movlw	0
   894     05E7                     l72:
   895     05E7  0008               	return
   896     05E8                     __end_of_key_press:
   897                           
   898                           	psect	text2
   899     05E8                     __ptext2:	
   900 ;; *************** function _init_config *****************
   901 ;; Defined at:
   902 ;;		line 20 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0
   919 ;;      Totals:         0       0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 1
   923 ;; This function calls:
   924 ;;		_init_digital_keypad
   925 ;;		_init_ssd
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931     05E8                     _init_config:	
   932                           ;psect for function _init_config
   933                           
   934     05E8                     l787:	
   935                           ;incstack = 0
   936                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   937                           
   938                           
   939                           ;main.c: 21:         }
   940     05E8  120A  118A  25F3  120A  118A  	fcall	_init_ssd
   941                           
   942                           ;main.c: 22:         if ((key == 1) && (key_pressed_time > 100))
   943     05ED  120A  118A  25D8  120A  118A  	fcall	_init_digital_keypad
   944     05F2                     l11:
   945     05F2  0008               	return
   946     05F3                     __end_of_init_config:
   947                           
   948                           	psect	text3
   949     05F3                     __ptext3:	
   950 ;; *************** function _init_ssd *****************
   951 ;; Defined at:
   952 ;;		line 9 in file "ssd.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_init_config
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979     05F3                     _init_ssd:	
   980                           ;psect for function _init_ssd
   981                           
   982     05F3                     l779:	
   983                           ;incstack = 0
   984                           ; Regs used in _init_ssd: [wreg+status,2]
   985                           
   986                           
   987                           ;ssd.c: 11:     TRISD = 0x00;
   988     05F3  1683               	bsf	3,5	;RP0=1, select bank1
   989     05F4  1303               	bcf	3,6	;RP1=0, select bank1
   990     05F5  0188               	clrf	8	;volatile
   991     05F6                     l781:
   992                           
   993                           ;ssd.c: 14:     TRISA = TRISA & 0xC3;
   994     05F6  0805               	movf	5,w	;volatile
   995     05F7  39C3               	andlw	195
   996     05F8  0085               	movwf	5	;volatile
   997     05F9                     l783:
   998                           
   999                           ;ssd.c: 16:     PORTA = PORTA & 0x03;
  1000     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1001     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1002     05FB  0805               	movf	5,w	;volatile
  1003     05FC  3903               	andlw	3
  1004     05FD  0085               	movwf	5	;volatile
  1005     05FE                     l43:
  1006     05FE  0008               	return
  1007     05FF                     __end_of_init_ssd:
  1008                           
  1009                           	psect	text4
  1010     05D8                     __ptext4:	
  1011 ;; *************** function _init_digital_keypad *****************
  1012 ;; Defined at:
  1013 ;;		line 9 in file "digital_keypad.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0
  1030 ;;      Totals:         0       0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_init_config
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040     05D8                     _init_digital_keypad:	
  1041                           ;psect for function _init_digital_keypad
  1042                           
  1043     05D8                     l785:	
  1044                           ;incstack = 0
  1045                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1046                           
  1047                           
  1048                           ;digital_keypad.c: 12:     TRISB = TRISB | 0x3F;
  1049     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  1050     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  1051     05DA  0806               	movf	6,w	;volatile
  1052     05DB  383F               	iorlw	63
  1053     05DC  0086               	movwf	6	;volatile
  1054     05DD                     l58:
  1055     05DD  0008               	return
  1056     05DE                     __end_of_init_digital_keypad:
  1057                           
  1058                           	psect	text5
  1059     069A                     __ptext5:	
  1060 ;; *************** function _display *****************
  1061 ;; Defined at:
  1062 ;;		line 23 in file "ssd.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  data            1    0[COMMON] PTR unsigned char 
  1065 ;;		 -> main@ssd(4), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  wait            4    5[COMMON] unsigned long 
  1068 ;;  digit           1    9[COMMON] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         1       0       0       0       0
  1079 ;;      Locals:         5       0       0       0       0
  1080 ;;      Temps:          4       0       0       0       0
  1081 ;;      Totals:        10       0       0       0       0
  1082 ;;Total ram usage:       10 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091     069A                     _display:	
  1092                           ;psect for function _display
  1093                           
  1094     069A                     l789:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1097                           
  1098                           
  1099                           ;ssd.c: 24:     unsigned char digit;;ssd.c: 26:     for (digit = 0; digit < 4; digit++) 
      +                          {
  1100     069A  01F9               	clrf	display@digit
  1101     069B                     l795:
  1102                           
  1103                           ;ssd.c: 27:         PORTD = data[digit];
  1104     069B  0879               	movf	display@digit,w
  1105     069C  0770               	addwf	display@data,w
  1106     069D  00F1               	movwf	??_display
  1107     069E  0871               	movf	??_display,w
  1108     069F  0084               	movwf	4
  1109     06A0  1383               	bcf	3,7	;select IRP bank0
  1110     06A1  0800               	movf	0,w
  1111     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1112     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1113     06A4  0088               	movwf	8	;volatile
  1114     06A5                     l797:
  1115                           
  1116                           ;ssd.c: 28:         PORTA = (PORTA & 0x03) | (0x04 << digit);
  1117     06A5  3004               	movlw	4
  1118     06A6  00F1               	movwf	??_display
  1119     06A7  0A79               	incf	display@digit,w
  1120     06A8  2EAB               	goto	u324
  1121     06A9                     u325:
  1122     06A9  1003               	clrc
  1123     06AA  0DF1               	rlf	??_display,f
  1124     06AB                     u324:
  1125     06AB  3EFF               	addlw	-1
  1126     06AC  1D03               	skipz
  1127     06AD  2EA9               	goto	u325
  1128     06AE  0805               	movf	5,w	;volatile
  1129     06AF  3903               	andlw	3
  1130     06B0  0471               	iorwf	??_display,w
  1131     06B1  0085               	movwf	5	;volatile
  1132     06B2                     l799:
  1133                           
  1134                           ;ssd.c: 30:         for (unsigned long int wait = 400; wait--;);
  1135     06B2  3000               	movlw	0
  1136     06B3  00F8               	movwf	display@wait+3
  1137     06B4  3000               	movlw	0
  1138     06B5  00F7               	movwf	display@wait+2
  1139     06B6  3001               	movlw	1
  1140     06B7  00F6               	movwf	display@wait+1
  1141     06B8  3090               	movlw	144
  1142     06B9  00F5               	movwf	display@wait
  1143     06BA                     l801:
  1144     06BA  3001               	movlw	1
  1145     06BB  00F1               	movwf	??_display
  1146     06BC  3000               	movlw	0
  1147     06BD  00F2               	movwf	??_display+1
  1148     06BE  3000               	movlw	0
  1149     06BF  00F3               	movwf	??_display+2
  1150     06C0  3000               	movlw	0
  1151     06C1  00F4               	movwf	??_display+3
  1152     06C2  0871               	movf	??_display,w
  1153     06C3  02F5               	subwf	display@wait,f
  1154     06C4  0872               	movf	??_display+1,w
  1155     06C5  1C03               	skipc
  1156     06C6  0F72               	incfsz	??_display+1,w
  1157     06C7  2EC9               	goto	u335
  1158     06C8  2ECA               	goto	u336
  1159     06C9                     u335:
  1160     06C9  02F6               	subwf	display@wait+1,f
  1161     06CA                     u336:
  1162     06CA  0873               	movf	??_display+2,w
  1163     06CB  1C03               	skipc
  1164     06CC  0F73               	incfsz	??_display+2,w
  1165     06CD  2ECF               	goto	u337
  1166     06CE  2ED0               	goto	u338
  1167     06CF                     u337:
  1168     06CF  02F7               	subwf	display@wait+2,f
  1169     06D0                     u338:
  1170     06D0  0874               	movf	??_display+3,w
  1171     06D1  1C03               	skipc
  1172     06D2  0F74               	incfsz	??_display+3,w
  1173     06D3  2ED5               	goto	u339
  1174     06D4  2ED6               	goto	u330
  1175     06D5                     u339:
  1176     06D5  02F8               	subwf	display@wait+3,f
  1177     06D6                     u330:
  1178     06D6  0A75               	incf	display@wait,w
  1179     06D7  1D03               	skipz
  1180     06D8  2EE3               	goto	u341
  1181     06D9  0A76               	incf	display@wait+1,w
  1182     06DA  1D03               	skipz
  1183     06DB  2EE3               	goto	u341
  1184     06DC  0A77               	incf	display@wait+2,w
  1185     06DD  1D03               	skipz
  1186     06DE  2EE3               	goto	u341
  1187     06DF  0A78               	incf	display@wait+3,w
  1188     06E0  1D03               	btfss	3,2
  1189     06E1  2EE3               	goto	u341
  1190     06E2  2EE4               	goto	u340
  1191     06E3                     u341:
  1192     06E3  2EBA               	goto	l801
  1193     06E4                     u340:
  1194     06E4                     l803:
  1195                           
  1196                           ;ssd.c: 31:     }
  1197     06E4  3001               	movlw	1
  1198     06E5  07F9               	addwf	display@digit,f
  1199     06E6                     l805:
  1200     06E6  3004               	movlw	4
  1201     06E7  0279               	subwf	display@digit,w
  1202     06E8  1C03               	skipc
  1203     06E9  2EEB               	goto	u351
  1204     06EA  2EEC               	goto	u350
  1205     06EB                     u351:
  1206     06EB  2E9B               	goto	l795
  1207     06EC                     u350:
  1208     06EC                     l51:
  1209     06EC  0008               	return
  1210     06ED                     __end_of_display:
  1211                           
  1212                           	psect	text6
  1213     0620                     __ptext6:	
  1214 ;; *************** function ___lwmod *****************
  1215 ;; Defined at:
  1216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  divisor         2    7[COMMON] unsigned int 
  1219 ;;  dividend        2    9[COMMON] unsigned int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  counter         1   11[COMMON] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    7[COMMON] unsigned int 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         4       0       0       0       0
  1232 ;;      Locals:         1       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0
  1234 ;;      Totals:         5       0       0       0       0
  1235 ;;Total ram usage:        5 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244     0620                     ___lwmod:	
  1245                           ;psect for function ___lwmod
  1246                           
  1247     0620                     l845:	
  1248                           ;incstack = 0
  1249                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1250                           
  1251     0620  0877               	movf	___lwmod@divisor,w
  1252     0621  0478               	iorwf	___lwmod@divisor+1,w
  1253     0622  1903               	btfsc	3,2
  1254     0623  2E25               	goto	u441
  1255     0624  2E26               	goto	u440
  1256     0625                     u441:
  1257     0625  2E53               	goto	l863
  1258     0626                     u440:
  1259     0626                     l847:
  1260     0626  3001               	movlw	1
  1261     0627  00FB               	movwf	___lwmod@counter
  1262     0628  2E32               	goto	l853
  1263     0629                     l849:
  1264     0629  3001               	movlw	1
  1265     062A                     u455:
  1266     062A  1003               	clrc
  1267     062B  0DF7               	rlf	___lwmod@divisor,f
  1268     062C  0DF8               	rlf	___lwmod@divisor+1,f
  1269     062D  3EFF               	addlw	-1
  1270     062E  1D03               	skipz
  1271     062F  2E2A               	goto	u455
  1272     0630                     l851:
  1273     0630  3001               	movlw	1
  1274     0631  07FB               	addwf	___lwmod@counter,f
  1275     0632                     l853:
  1276     0632  1FF8               	btfss	___lwmod@divisor+1,7
  1277     0633  2E35               	goto	u461
  1278     0634  2E36               	goto	u460
  1279     0635                     u461:
  1280     0635  2E29               	goto	l849
  1281     0636                     u460:
  1282     0636                     l855:
  1283     0636  0878               	movf	___lwmod@divisor+1,w
  1284     0637  027A               	subwf	___lwmod@dividend+1,w
  1285     0638  1D03               	skipz
  1286     0639  2E3C               	goto	u475
  1287     063A  0877               	movf	___lwmod@divisor,w
  1288     063B  0279               	subwf	___lwmod@dividend,w
  1289     063C                     u475:
  1290     063C  1C03               	skipc
  1291     063D  2E3F               	goto	u471
  1292     063E  2E40               	goto	u470
  1293     063F                     u471:
  1294     063F  2E46               	goto	l859
  1295     0640                     u470:
  1296     0640                     l857:
  1297     0640  0877               	movf	___lwmod@divisor,w
  1298     0641  02F9               	subwf	___lwmod@dividend,f
  1299     0642  0878               	movf	___lwmod@divisor+1,w
  1300     0643  1C03               	skipc
  1301     0644  03FA               	decf	___lwmod@dividend+1,f
  1302     0645  02FA               	subwf	___lwmod@dividend+1,f
  1303     0646                     l859:
  1304     0646  3001               	movlw	1
  1305     0647                     u485:
  1306     0647  1003               	clrc
  1307     0648  0CF8               	rrf	___lwmod@divisor+1,f
  1308     0649  0CF7               	rrf	___lwmod@divisor,f
  1309     064A  3EFF               	addlw	-1
  1310     064B  1D03               	skipz
  1311     064C  2E47               	goto	u485
  1312     064D                     l861:
  1313     064D  3001               	movlw	1
  1314     064E  02FB               	subwf	___lwmod@counter,f
  1315     064F  1D03               	btfss	3,2
  1316     0650  2E52               	goto	u491
  1317     0651  2E53               	goto	u490
  1318     0652                     u491:
  1319     0652  2E36               	goto	l855
  1320     0653                     u490:
  1321     0653                     l863:
  1322     0653  087A               	movf	___lwmod@dividend+1,w
  1323     0654  00F8               	movwf	?___lwmod+1
  1324     0655  0879               	movf	___lwmod@dividend,w
  1325     0656  00F7               	movwf	?___lwmod
  1326     0657                     l449:
  1327     0657  0008               	return
  1328     0658                     __end_of___lwmod:
  1329                           
  1330                           	psect	text7
  1331     0658                     __ptext7:	
  1332 ;; *************** function ___lwdiv *****************
  1333 ;; Defined at:
  1334 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  divisor         2    0[COMMON] unsigned int 
  1337 ;;  dividend        2    2[COMMON] unsigned int 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  quotient        2    4[COMMON] unsigned int 
  1340 ;;  counter         1    6[COMMON] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2    0[COMMON] unsigned int 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         4       0       0       0       0
  1351 ;;      Locals:         3       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         7       0       0       0       0
  1354 ;;Total ram usage:        7 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363     0658                     ___lwdiv:	
  1364                           ;psect for function ___lwdiv
  1365                           
  1366     0658                     l819:	
  1367                           ;incstack = 0
  1368                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1369                           
  1370     0658  01F4               	clrf	___lwdiv@quotient
  1371     0659  01F5               	clrf	___lwdiv@quotient+1
  1372     065A                     l821:
  1373     065A  0870               	movf	___lwdiv@divisor,w
  1374     065B  0471               	iorwf	___lwdiv@divisor+1,w
  1375     065C  1903               	btfsc	3,2
  1376     065D  2E5F               	goto	u371
  1377     065E  2E60               	goto	u370
  1378     065F                     u371:
  1379     065F  2E95               	goto	l841
  1380     0660                     u370:
  1381     0660                     l823:
  1382     0660  3001               	movlw	1
  1383     0661  00F6               	movwf	___lwdiv@counter
  1384     0662  2E6C               	goto	l829
  1385     0663                     l825:
  1386     0663  3001               	movlw	1
  1387     0664                     u385:
  1388     0664  1003               	clrc
  1389     0665  0DF0               	rlf	___lwdiv@divisor,f
  1390     0666  0DF1               	rlf	___lwdiv@divisor+1,f
  1391     0667  3EFF               	addlw	-1
  1392     0668  1D03               	skipz
  1393     0669  2E64               	goto	u385
  1394     066A                     l827:
  1395     066A  3001               	movlw	1
  1396     066B  07F6               	addwf	___lwdiv@counter,f
  1397     066C                     l829:
  1398     066C  1FF1               	btfss	___lwdiv@divisor+1,7
  1399     066D  2E6F               	goto	u391
  1400     066E  2E70               	goto	u390
  1401     066F                     u391:
  1402     066F  2E63               	goto	l825
  1403     0670                     u390:
  1404     0670                     l831:
  1405     0670  3001               	movlw	1
  1406     0671                     u405:
  1407     0671  1003               	clrc
  1408     0672  0DF4               	rlf	___lwdiv@quotient,f
  1409     0673  0DF5               	rlf	___lwdiv@quotient+1,f
  1410     0674  3EFF               	addlw	-1
  1411     0675  1D03               	skipz
  1412     0676  2E71               	goto	u405
  1413     0677  0871               	movf	___lwdiv@divisor+1,w
  1414     0678  0273               	subwf	___lwdiv@dividend+1,w
  1415     0679  1D03               	skipz
  1416     067A  2E7D               	goto	u415
  1417     067B  0870               	movf	___lwdiv@divisor,w
  1418     067C  0272               	subwf	___lwdiv@dividend,w
  1419     067D                     u415:
  1420     067D  1C03               	skipc
  1421     067E  2E80               	goto	u411
  1422     067F  2E81               	goto	u410
  1423     0680                     u411:
  1424     0680  2E88               	goto	l837
  1425     0681                     u410:
  1426     0681                     l833:
  1427     0681  0870               	movf	___lwdiv@divisor,w
  1428     0682  02F2               	subwf	___lwdiv@dividend,f
  1429     0683  0871               	movf	___lwdiv@divisor+1,w
  1430     0684  1C03               	skipc
  1431     0685  03F3               	decf	___lwdiv@dividend+1,f
  1432     0686  02F3               	subwf	___lwdiv@dividend+1,f
  1433     0687                     l835:
  1434     0687  1474               	bsf	___lwdiv@quotient,0
  1435     0688                     l837:
  1436     0688  3001               	movlw	1
  1437     0689                     u425:
  1438     0689  1003               	clrc
  1439     068A  0CF1               	rrf	___lwdiv@divisor+1,f
  1440     068B  0CF0               	rrf	___lwdiv@divisor,f
  1441     068C  3EFF               	addlw	-1
  1442     068D  1D03               	skipz
  1443     068E  2E89               	goto	u425
  1444     068F                     l839:
  1445     068F  3001               	movlw	1
  1446     0690  02F6               	subwf	___lwdiv@counter,f
  1447     0691  1D03               	btfss	3,2
  1448     0692  2E94               	goto	u431
  1449     0693  2E95               	goto	u430
  1450     0694                     u431:
  1451     0694  2E70               	goto	l831
  1452     0695                     u430:
  1453     0695                     l841:
  1454     0695  0875               	movf	___lwdiv@quotient+1,w
  1455     0696  00F1               	movwf	?___lwdiv+1
  1456     0697  0874               	movf	___lwdiv@quotient,w
  1457     0698  00F0               	movwf	?___lwdiv
  1458     0699                     l439:
  1459     0699  0008               	return
  1460     069A                     __end_of___lwdiv:
  1461     0002                     ___latbits      equ	2
  1462     007E                     btemp           set	126	;btemp
  1463     007E                     wtemp0          set	126
  1464                           
  1465                           	psect	config
  1466                           
  1467                           ;Config register CONFIG @ 0x2007
  1468                           ;	Oscillator Selection bits
  1469                           ;	FOSC = 0x3, unprogrammed default
  1470                           ;	Watchdog Timer Enable bit
  1471                           ;	WDTE = OFF, WDT disabled
  1472                           ;	Power-up Timer Enable bit
  1473                           ;	PWRTE = 0x1, unprogrammed default
  1474                           ;	Brown-out Reset Enable bit
  1475                           ;	BOREN = 0x1, unprogrammed default
  1476                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1477                           ;	LVP = 0x1, unprogrammed default
  1478                           ;	Data EEPROM Memory Code Protection bit
  1479                           ;	CPD = 0x1, unprogrammed default
  1480                           ;	Flash Program Memory Write Enable bits
  1481                           ;	WRT = 0x3, unprogrammed default
  1482                           ;	In-Circuit Debugger Mode bit
  1483                           ;	DEBUG = 0x1, unprogrammed default
  1484                           ;	Flash Program Memory Code Protection bit
  1485                           ;	CP = 0x1, unprogrammed default
  1486     2007                     	org	8199
  1487     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      6      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     704
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
                            _display
                        _init_config
                          _key_press
 ---------------------------------------------------------------------------------
 (1) _key_press                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10     9      1     137
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     167
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _display
   _init_config
     _init_digital_keypad
     _init_ssd
   _key_press

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      6      24     30.0%
BITBANK0            80      0       0      0.0%
COMMON              14     12      13     92.9%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      37      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Dec 25 20:12:09 2024

                          pc 0002                           l11 05F2                           l51 06EC  
                         l43 05FE                           l72 05E7                           l58 05DD  
                         fsr 0004                          l439 0699                          l449 0657  
                        l801 06BA                          l803 06E4                          l821 065A  
                        l805 06E6                          l901 074F                          l831 0670  
                        l823 0660                          l815 05E6                          l807 05DE  
                        l911 07CC                          l903 0751                          l833 0681  
                        l825 0663                          l841 0695                          l809 05E4  
                        l913 07D3                          l905 0766                          l835 0687  
                        l827 066A                          l819 0658                          l851 0630  
                        l915 07DE                          l907 0788                          l837 0688  
                        l829 066C                          l861 064D                          l853 0632  
                        l845 0620                          l781 05F6                          l909 07AA  
                        l839 068F                          l855 0636                          l847 0626  
                        l863 0653                          l783 05F9                          l871 06FC  
                        l857 0640                          l849 0629                          l785 05D8  
                        l881 071B                          l873 0703                          l859 0646  
                        l795 069B                          l779 05F3                          l787 05E8  
                        l891 0732                          l883 0724                          l875 070B  
                        l867 06ED                          l797 06A5                          l789 069A  
                        l893 0735                          l885 0726                          l877 0710  
                        l869 06F7                          l799 06B2                          l895 073A  
                        l887 0728                          l879 0716                          l897 0740  
                        l889 072D                          l899 0749                          u410 0681  
                        u330 06D6                          u411 0680                          u340 06E4  
                        u324 06AB                          u500 0710                          u405 0671  
                        u341 06E3                          u325 06A9                          u501 070F  
                        u430 0695                          u350 06EC                          u510 071B  
                        u431 0694                          u415 067D                          u351 06EB  
                        u335 06C9                          u511 071A                          u440 0626  
                        u336 06CA                          u360 05E4                          u520 0724  
                        u425 0689                          u441 0625                          u337 06CF  
                        u361 05E3                          u521 0723                          u370 0660  
                        u338 06D0                          u530 072D                          u371 065F  
                        u339 06D5                          u531 072C                          u460 0636  
                        u540 0732                          u461 0635                          u541 0731  
                        u390 0670                          u470 0640                          u550 073A  
                        u391 066F                          u471 063F                          u455 062A  
                        u551 0739                          u560 0740                          u385 0664  
                        u561 073F                          u490 0653                          u570 0749  
                        u491 0652                          u475 063C                          u571 0748  
                        u580 07DE                          u485 0647                          u581 07DD  
                        fsr0 0004                          indf 0000                  display@data 0070  
                display@wait 0075                         _main 06ED                         btemp 007E  
                       start 0000                        ?_main 0070              __end_of___lwdiv 069A  
            __end_of___lwmod 0658                 ?_init_config 0070                        _PORTA 0005  
                      _PORTB 0006                        _PORTD 0008                        _TRISA 0085  
                      _TRISB 0086                        _TRISD 0088                 display@digit 0079  
            __end_of_display 06ED                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 07E4                 __end_of_main 07E4  
                     ??_main 007C  __end_of_init_digital_keypad 05DE                    ??___lwdiv 0074  
                  ??___lwmod 007B             __end_of_init_ssd 05FF                    ??_display 0071  
               __pdataCOMMON 007C      __end_of__initialization 07FC               __pcstackCOMMON 0070  
               __pidataBANK0 05FF                   __pbssBANK0 0034                   __pmaintext 06ED  
                  ?_init_ssd 0070                      ___lwdiv 0658                      ___lwmod 0620  
                    __ptext1 05DE                      __ptext2 05E8                      __ptext3 05F3  
                    __ptext4 05D8                      __ptext5 069A                      __ptext6 0620  
                    __ptext7 0658                      _display 069A         main@key_pressed_time 0034  
          __end_of_key_press 05E8                      main@key 0033                      main@ssd 002E  
       end_of_initialization 07FC                   ??_init_ssd 0070                __pidataCOMMON 05D7  
        start_initialization 07E4                   init_fetch0 060D                  __pdataBANK0 0020  
              ??_init_config 0070                    ___latbits 0002                __pcstackBANK0 002E  
           ___lwdiv@dividend 0072                     ?___lwdiv 0070                     ?___lwmod 0077  
                   ?_display 0070             ___lwdiv@quotient 0074          __end_of_init_config 05F3  
                  _key_press 05DE                    main@digit 0020                    main@count 0036  
                  main@reset 0032                   ?_key_press 0070          _init_digital_keypad 05D8  
       ?_init_digital_keypad 0070                  _init_config 05E8              ___lwdiv@divisor 0070  
            ___lwdiv@counter 0076                     _init_ssd 05F3      read_digital_keypad@once 007C  
                   main@F990 002A        ??_init_digital_keypad 0070                     init_ram0 0611  
                ??_key_press 0070             ___lwmod@dividend 0079              ___lwmod@divisor 0077  
            ___lwmod@counter 007B  
