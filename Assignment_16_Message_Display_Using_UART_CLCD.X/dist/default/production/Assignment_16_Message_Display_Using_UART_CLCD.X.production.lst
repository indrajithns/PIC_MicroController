

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Dec 25 20:20:41 2024

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0004                     fsr             equ	4
    59     0004                     fsr0            equ	4
    60     0000                     indf            equ	0
    61     0000                     indf0           equ	0
    62     0002                     pc              equ	2
    63     0002                     pcl             equ	2
    64     000A                     pclath          equ	10
    65     0003                     status          equ	3
    66     0000                     INDF            equ	0	;# 
    67     0001                     TMR0            equ	1	;# 
    68     0002                     PCL             equ	2	;# 
    69     0003                     STATUS          equ	3	;# 
    70     0004                     FSR             equ	4	;# 
    71     0005                     PORTA           equ	5	;# 
    72     0006                     PORTB           equ	6	;# 
    73     0007                     PORTC           equ	7	;# 
    74     0008                     PORTD           equ	8	;# 
    75     0009                     PORTE           equ	9	;# 
    76     000A                     PCLATH          equ	10	;# 
    77     000B                     INTCON          equ	11	;# 
    78     000C                     PIR1            equ	12	;# 
    79     000D                     PIR2            equ	13	;# 
    80     000E                     TMR1            equ	14	;# 
    81     000E                     TMR1L           equ	14	;# 
    82     000F                     TMR1H           equ	15	;# 
    83     0010                     T1CON           equ	16	;# 
    84     0011                     TMR2            equ	17	;# 
    85     0012                     T2CON           equ	18	;# 
    86     0013                     SSPBUF          equ	19	;# 
    87     0014                     SSPCON          equ	20	;# 
    88     0015                     CCPR1           equ	21	;# 
    89     0015                     CCPR1L          equ	21	;# 
    90     0016                     CCPR1H          equ	22	;# 
    91     0017                     CCP1CON         equ	23	;# 
    92     0018                     RCSTA           equ	24	;# 
    93     0019                     TXREG           equ	25	;# 
    94     001A                     RCREG           equ	26	;# 
    95     001B                     CCPR2           equ	27	;# 
    96     001B                     CCPR2L          equ	27	;# 
    97     001C                     CCPR2H          equ	28	;# 
    98     001D                     CCP2CON         equ	29	;# 
    99     001E                     ADRESH          equ	30	;# 
   100     001F                     ADCON0          equ	31	;# 
   101     0081                     OPTION_REG      equ	129	;# 
   102     0085                     TRISA           equ	133	;# 
   103     0086                     TRISB           equ	134	;# 
   104     0087                     TRISC           equ	135	;# 
   105     0088                     TRISD           equ	136	;# 
   106     0089                     TRISE           equ	137	;# 
   107     008C                     PIE1            equ	140	;# 
   108     008D                     PIE2            equ	141	;# 
   109     008E                     PCON            equ	142	;# 
   110     0091                     SSPCON2         equ	145	;# 
   111     0092                     PR2             equ	146	;# 
   112     0093                     SSPADD          equ	147	;# 
   113     0094                     SSPSTAT         equ	148	;# 
   114     0098                     TXSTA           equ	152	;# 
   115     0099                     SPBRG           equ	153	;# 
   116     009C                     CMCON           equ	156	;# 
   117     009D                     CVRCON          equ	157	;# 
   118     009E                     ADRESL          equ	158	;# 
   119     009F                     ADCON1          equ	159	;# 
   120     010C                     EEDATA          equ	268	;# 
   121     010D                     EEADR           equ	269	;# 
   122     010E                     EEDATH          equ	270	;# 
   123     010F                     EEADRH          equ	271	;# 
   124     018C                     EECON1          equ	396	;# 
   125     018D                     EECON2          equ	397	;# 
   126     0000                     INDF            equ	0	;# 
   127     0001                     TMR0            equ	1	;# 
   128     0002                     PCL             equ	2	;# 
   129     0003                     STATUS          equ	3	;# 
   130     0004                     FSR             equ	4	;# 
   131     0005                     PORTA           equ	5	;# 
   132     0006                     PORTB           equ	6	;# 
   133     0007                     PORTC           equ	7	;# 
   134     0008                     PORTD           equ	8	;# 
   135     0009                     PORTE           equ	9	;# 
   136     000A                     PCLATH          equ	10	;# 
   137     000B                     INTCON          equ	11	;# 
   138     000C                     PIR1            equ	12	;# 
   139     000D                     PIR2            equ	13	;# 
   140     000E                     TMR1            equ	14	;# 
   141     000E                     TMR1L           equ	14	;# 
   142     000F                     TMR1H           equ	15	;# 
   143     0010                     T1CON           equ	16	;# 
   144     0011                     TMR2            equ	17	;# 
   145     0012                     T2CON           equ	18	;# 
   146     0013                     SSPBUF          equ	19	;# 
   147     0014                     SSPCON          equ	20	;# 
   148     0015                     CCPR1           equ	21	;# 
   149     0015                     CCPR1L          equ	21	;# 
   150     0016                     CCPR1H          equ	22	;# 
   151     0017                     CCP1CON         equ	23	;# 
   152     0018                     RCSTA           equ	24	;# 
   153     0019                     TXREG           equ	25	;# 
   154     001A                     RCREG           equ	26	;# 
   155     001B                     CCPR2           equ	27	;# 
   156     001B                     CCPR2L          equ	27	;# 
   157     001C                     CCPR2H          equ	28	;# 
   158     001D                     CCP2CON         equ	29	;# 
   159     001E                     ADRESH          equ	30	;# 
   160     001F                     ADCON0          equ	31	;# 
   161     0081                     OPTION_REG      equ	129	;# 
   162     0085                     TRISA           equ	133	;# 
   163     0086                     TRISB           equ	134	;# 
   164     0087                     TRISC           equ	135	;# 
   165     0088                     TRISD           equ	136	;# 
   166     0089                     TRISE           equ	137	;# 
   167     008C                     PIE1            equ	140	;# 
   168     008D                     PIE2            equ	141	;# 
   169     008E                     PCON            equ	142	;# 
   170     0091                     SSPCON2         equ	145	;# 
   171     0092                     PR2             equ	146	;# 
   172     0093                     SSPADD          equ	147	;# 
   173     0094                     SSPSTAT         equ	148	;# 
   174     0098                     TXSTA           equ	152	;# 
   175     0099                     SPBRG           equ	153	;# 
   176     009C                     CMCON           equ	156	;# 
   177     009D                     CVRCON          equ	157	;# 
   178     009E                     ADRESL          equ	158	;# 
   179     009F                     ADCON1          equ	159	;# 
   180     010C                     EEDATA          equ	268	;# 
   181     010D                     EEADR           equ	269	;# 
   182     010E                     EEDATH          equ	270	;# 
   183     010F                     EEADRH          equ	271	;# 
   184     018C                     EECON1          equ	396	;# 
   185     018D                     EECON2          equ	397	;# 
   186     0000                     INDF            equ	0	;# 
   187     0001                     TMR0            equ	1	;# 
   188     0002                     PCL             equ	2	;# 
   189     0003                     STATUS          equ	3	;# 
   190     0004                     FSR             equ	4	;# 
   191     0005                     PORTA           equ	5	;# 
   192     0006                     PORTB           equ	6	;# 
   193     0007                     PORTC           equ	7	;# 
   194     0008                     PORTD           equ	8	;# 
   195     0009                     PORTE           equ	9	;# 
   196     000A                     PCLATH          equ	10	;# 
   197     000B                     INTCON          equ	11	;# 
   198     000C                     PIR1            equ	12	;# 
   199     000D                     PIR2            equ	13	;# 
   200     000E                     TMR1            equ	14	;# 
   201     000E                     TMR1L           equ	14	;# 
   202     000F                     TMR1H           equ	15	;# 
   203     0010                     T1CON           equ	16	;# 
   204     0011                     TMR2            equ	17	;# 
   205     0012                     T2CON           equ	18	;# 
   206     0013                     SSPBUF          equ	19	;# 
   207     0014                     SSPCON          equ	20	;# 
   208     0015                     CCPR1           equ	21	;# 
   209     0015                     CCPR1L          equ	21	;# 
   210     0016                     CCPR1H          equ	22	;# 
   211     0017                     CCP1CON         equ	23	;# 
   212     0018                     RCSTA           equ	24	;# 
   213     0019                     TXREG           equ	25	;# 
   214     001A                     RCREG           equ	26	;# 
   215     001B                     CCPR2           equ	27	;# 
   216     001B                     CCPR2L          equ	27	;# 
   217     001C                     CCPR2H          equ	28	;# 
   218     001D                     CCP2CON         equ	29	;# 
   219     001E                     ADRESH          equ	30	;# 
   220     001F                     ADCON0          equ	31	;# 
   221     0081                     OPTION_REG      equ	129	;# 
   222     0085                     TRISA           equ	133	;# 
   223     0086                     TRISB           equ	134	;# 
   224     0087                     TRISC           equ	135	;# 
   225     0088                     TRISD           equ	136	;# 
   226     0089                     TRISE           equ	137	;# 
   227     008C                     PIE1            equ	140	;# 
   228     008D                     PIE2            equ	141	;# 
   229     008E                     PCON            equ	142	;# 
   230     0091                     SSPCON2         equ	145	;# 
   231     0092                     PR2             equ	146	;# 
   232     0093                     SSPADD          equ	147	;# 
   233     0094                     SSPSTAT         equ	148	;# 
   234     0098                     TXSTA           equ	152	;# 
   235     0099                     SPBRG           equ	153	;# 
   236     009C                     CMCON           equ	156	;# 
   237     009D                     CVRCON          equ	157	;# 
   238     009E                     ADRESL          equ	158	;# 
   239     009F                     ADCON1          equ	159	;# 
   240     010C                     EEDATA          equ	268	;# 
   241     010D                     EEADR           equ	269	;# 
   242     010E                     EEDATH          equ	270	;# 
   243     010F                     EEADRH          equ	271	;# 
   244     018C                     EECON1          equ	396	;# 
   245     018D                     EECON2          equ	397	;# 
   246     0000                     INDF            equ	0	;# 
   247     0001                     TMR0            equ	1	;# 
   248     0002                     PCL             equ	2	;# 
   249     0003                     STATUS          equ	3	;# 
   250     0004                     FSR             equ	4	;# 
   251     0005                     PORTA           equ	5	;# 
   252     0006                     PORTB           equ	6	;# 
   253     0007                     PORTC           equ	7	;# 
   254     0008                     PORTD           equ	8	;# 
   255     0009                     PORTE           equ	9	;# 
   256     000A                     PCLATH          equ	10	;# 
   257     000B                     INTCON          equ	11	;# 
   258     000C                     PIR1            equ	12	;# 
   259     000D                     PIR2            equ	13	;# 
   260     000E                     TMR1            equ	14	;# 
   261     000E                     TMR1L           equ	14	;# 
   262     000F                     TMR1H           equ	15	;# 
   263     0010                     T1CON           equ	16	;# 
   264     0011                     TMR2            equ	17	;# 
   265     0012                     T2CON           equ	18	;# 
   266     0013                     SSPBUF          equ	19	;# 
   267     0014                     SSPCON          equ	20	;# 
   268     0015                     CCPR1           equ	21	;# 
   269     0015                     CCPR1L          equ	21	;# 
   270     0016                     CCPR1H          equ	22	;# 
   271     0017                     CCP1CON         equ	23	;# 
   272     0018                     RCSTA           equ	24	;# 
   273     0019                     TXREG           equ	25	;# 
   274     001A                     RCREG           equ	26	;# 
   275     001B                     CCPR2           equ	27	;# 
   276     001B                     CCPR2L          equ	27	;# 
   277     001C                     CCPR2H          equ	28	;# 
   278     001D                     CCP2CON         equ	29	;# 
   279     001E                     ADRESH          equ	30	;# 
   280     001F                     ADCON0          equ	31	;# 
   281     0081                     OPTION_REG      equ	129	;# 
   282     0085                     TRISA           equ	133	;# 
   283     0086                     TRISB           equ	134	;# 
   284     0087                     TRISC           equ	135	;# 
   285     0088                     TRISD           equ	136	;# 
   286     0089                     TRISE           equ	137	;# 
   287     008C                     PIE1            equ	140	;# 
   288     008D                     PIE2            equ	141	;# 
   289     008E                     PCON            equ	142	;# 
   290     0091                     SSPCON2         equ	145	;# 
   291     0092                     PR2             equ	146	;# 
   292     0093                     SSPADD          equ	147	;# 
   293     0094                     SSPSTAT         equ	148	;# 
   294     0098                     TXSTA           equ	152	;# 
   295     0099                     SPBRG           equ	153	;# 
   296     009C                     CMCON           equ	156	;# 
   297     009D                     CVRCON          equ	157	;# 
   298     009E                     ADRESL          equ	158	;# 
   299     009F                     ADCON1          equ	159	;# 
   300     010C                     EEDATA          equ	268	;# 
   301     010D                     EEADR           equ	269	;# 
   302     010E                     EEDATH          equ	270	;# 
   303     010F                     EEADRH          equ	271	;# 
   304     018C                     EECON1          equ	396	;# 
   305     018D                     EECON2          equ	397	;# 
   306                           
   307                           	psect	idataBANK0
   308     05FF                     __pidataBANK0:
   309                           
   310                           ;initializer for main@F1167
   311     05FF  3420               	retlw	32
   312     0600  3420               	retlw	32
   313     0601  3420               	retlw	32
   314     0602  3420               	retlw	32
   315     0603  3420               	retlw	32
   316     0604  3420               	retlw	32
   317     0605  3420               	retlw	32
   318     0606  3420               	retlw	32
   319     0607  3420               	retlw	32
   320     0608  3420               	retlw	32
   321     0609  3420               	retlw	32
   322     060A  3420               	retlw	32
   323     060B  3420               	retlw	32
   324     060C  3420               	retlw	32
   325     060D  3420               	retlw	32
   326     060E  3420               	retlw	32
   327     060F  3400               	retlw	0
   328     0019                     _TXREG          set	25
   329     001A                     _RCREG          set	26
   330     0008                     _PORTD          set	8
   331     0064                     _TXIF           set	100
   332     0065                     _RCIF           set	101
   333     00C4                     _CREN           set	196
   334     00C7                     _SPEN           set	199
   335     0049                     _RE1            set	73
   336     004A                     _RE2            set	74
   337     0099                     _SPBRG          set	153
   338     0088                     _TRISD          set	136
   339     0449                     _TRISE1         set	1097
   340     044A                     _TRISE2         set	1098
   341                           
   342                           	psect	cinit
   343     07EE                     start_initialization:	
   344                           ; #config settings
   345                           
   346     07EE                     __initialization:
   347                           
   348                           ; Initialize objects allocated to BANK0
   349     07EE  1383               	bcf	3,7	;select IRP bank0
   350     07EF  3062               	movlw	low (__pdataBANK0+17)
   351     07F0  00FD               	movwf	btemp+-1
   352     07F1  3005               	movlw	high __pidataBANK0
   353     07F2  00FE               	movwf	btemp
   354     07F3  30FF               	movlw	low __pidataBANK0
   355     07F4  00FF               	movwf	btemp+1
   356     07F5  3051               	movlw	low __pdataBANK0
   357     07F6  0084               	movwf	4
   358     07F7  120A  118A  2614  120A  118A  	fcall	init_ram0
   359     07FC                     end_of_initialization:	
   360                           ;End of C runtime variable initialization code
   361                           
   362     07FC                     __end_of__initialization:
   363     07FC  0183               	clrf	3
   364     07FD  120A  118A  2F60   	ljmp	_main	;jump to C main() function
   365                           
   366                           	psect	dataBANK0
   367     0051                     __pdataBANK0:
   368     0051                     main@F1167:
   369     0051                     	ds	17
   370                           
   371                           	psect	inittext
   372     0610                     init_fetch0:	
   373                           ;	Called with low address in FSR and high address in W
   374                           
   375     0610  087E               	movf	btemp,w
   376     0611  008A               	movwf	10
   377     0612  087F               	movf	btemp+1,w
   378     0613  0082               	movwf	2
   379     0614                     init_ram0:	
   380                           ;Called with:
   381                           ;	high address of idata address in btemp 
   382                           ;	low address of idata address in btemp+1 
   383                           ;	low address of data in FSR
   384                           ;	high address + 1 of data in btemp-1
   385                           
   386     0614  120A  118A  2610  120A  118A  	fcall	init_fetch0
   387     0619  0080               	movwf	0
   388     061A  0A84               	incf	4,f
   389     061B  0804               	movf	4,w
   390     061C  067D               	xorwf	btemp+-1,w
   391     061D  1903               	btfsc	3,2
   392     061E  3400               	retlw	0
   393     061F  0AFF               	incf	btemp+1,f
   394     0620  1903               	btfsc	3,2
   395     0621  0AFE               	incf	btemp,f
   396     0622  2E14               	goto	init_ram0
   397                           
   398                           	psect	cstackCOMMON
   399     0070                     __pcstackCOMMON:
   400     0070                     ?_getchar:
   401     0070                     ?_putchar:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_clcd_write:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_init_display_controller:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_init_clcd:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_init_config:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?___lldiv:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0070                     clcd_write@mode:	
   423                           ; 4 bytes @ 0x0
   424                           
   425     0070                     putchar@data:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ___lldiv@divisor:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ??_getchar:	
   432                           ; 4 bytes @ 0x0
   433                           
   434     0070                     ??_putchar:	
   435                           ; 1 bytes @ 0x0
   436                           
   437                           
   438                           ; 1 bytes @ 0x0
   439     0070                     	ds	1
   440     0071                     ??_clcd_write:
   441                           
   442                           ; 1 bytes @ 0x1
   443     0071                     	ds	2
   444     0073                     clcd_write@byte:
   445                           
   446                           ; 1 bytes @ 0x3
   447     0073                     	ds	1
   448     0074                     ?_clcd_putch:
   449     0074                     ?_clcd_print:	
   450                           ; 1 bytes @ 0x4
   451                           
   452     0074                     clcd_putch@addr:	
   453                           ; 1 bytes @ 0x4
   454                           
   455     0074                     clcd_print@str:	
   456                           ; 1 bytes @ 0x4
   457                           
   458     0074                     ___lldiv@dividend:	
   459                           ; 1 bytes @ 0x4
   460                           
   461     0074                     ??_init_display_controller:	
   462                           ; 4 bytes @ 0x4
   463                           
   464                           
   465                           ; 1 bytes @ 0x4
   466     0074                     	ds	1
   467     0075                     clcd_putch@data:
   468     0075                     clcd_print@addr:	
   469                           ; 1 bytes @ 0x5
   470                           
   471     0075                     ??_clcd_putch:	
   472                           ; 1 bytes @ 0x5
   473                           
   474                           
   475                           ; 1 bytes @ 0x5
   476     0075                     	ds	1
   477     0076                     ??_init_clcd:
   478     0076                     ??_clcd_print:	
   479                           ; 1 bytes @ 0x6
   480                           
   481                           
   482                           ; 1 bytes @ 0x6
   483     0076                     	ds	2
   484     0078                     ??___lldiv:
   485                           
   486                           ; 1 bytes @ 0x8
   487     0078                     	ds	1
   488     0079                     ___lldiv@quotient:
   489                           
   490                           ; 4 bytes @ 0x9
   491     0079                     	ds	4
   492     007D                     ___lldiv@counter:
   493                           
   494                           ; 1 bytes @ 0xD
   495     007D                     	ds	1
   496     007E                     ??_init_config:
   497                           
   498                           	psect	cstackBANK0
   499     0020                     __pcstackBANK0:	
   500                           ; 1 bytes @ 0xE
   501                           
   502     0020                     ?_init_uart:
   503     0020                     init_uart@baud:	
   504                           ; 1 bytes @ 0x0
   505                           
   506                           
   507                           ; 4 bytes @ 0x0
   508     0020                     	ds	4
   509     0024                     ??_init_uart:
   510                           
   511                           ; 1 bytes @ 0x4
   512     0024                     	ds	4
   513     0028                     ??_main:
   514                           
   515                           ; 1 bytes @ 0x8
   516     0028                     	ds	4
   517     002C                     main@line_2:
   518                           
   519                           ; 17 bytes @ 0xC
   520     002C                     	ds	17
   521     003D                     main@line_1:
   522                           
   523                           ; 17 bytes @ 0x1D
   524     003D                     	ds	17
   525     004E                     main@flag:
   526                           
   527                           ; 1 bytes @ 0x2E
   528     004E                     	ds	1
   529     004F                     main@ch:
   530                           
   531                           ; 1 bytes @ 0x2F
   532     004F                     	ds	1
   533     0050                     main@i:
   534                           
   535                           ; 1 bytes @ 0x30
   536     0050                     	ds	1
   537                           
   538                           	psect	maintext
   539     0760                     __pmaintext:	
   540 ;;
   541 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   542 ;;
   543 ;; *************** function _main *****************
   544 ;; Defined at:
   545 ;;		line 25 in file "main.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  line_1         17   29[BANK0 ] unsigned char [17]
   550 ;;  line_2         17   12[BANK0 ] unsigned char [17]
   551 ;;  i               1   48[BANK0 ] unsigned char 
   552 ;;  ch              1   47[BANK0 ] unsigned char 
   553 ;;  flag            1   46[BANK0 ] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : B00/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0      37       0       0       0
   565 ;;      Temps:          0       4       0       0       0
   566 ;;      Totals:         0      41       0       0       0
   567 ;;Total ram usage:       41 bytes
   568 ;; Hardware stack levels required when called: 4
   569 ;; This function calls:
   570 ;;		_clcd_print
   571 ;;		_clcd_putch
   572 ;;		_getchar
   573 ;;		_init_config
   574 ;;		_putchar
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580     0760                     _main:	
   581                           ;psect for function _main
   582                           
   583     0760                     l861:	
   584                           ;incstack = 0
   585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   586                           
   587                           
   588                           ;main.c: 26:             }
   589     0760  120A  118A  2623  120A  118A  	fcall	_init_config
   590     0765                     l863:
   591                           
   592                           ;main.c: 28:             line_1[i] = ch;
   593     0765  3001               	movlw	1
   594     0766  1283               	bcf	3,5	;RP0=0, select bank0
   595     0767  1303               	bcf	3,6	;RP1=0, select bank0
   596     0768  00CE               	movwf	main@flag
   597     0769                     l865:
   598                           
   599                           ;main.c: 29:             clcd_putch(ch, (0xC0 + i));;main.c: 30:             i += 1;
   600     0769  01D0               	clrf	main@i
   601     076A                     l867:
   602                           
   603                           ;main.c: 31: ;main.c: 32:             if (i == 16) {
   604     076A  3051               	movlw	main@F1167& (0+255)
   605     076B  0084               	movwf	4
   606     076C  302C               	movlw	low main@line_2
   607     076D  00A8               	movwf	??_main
   608     076E  3011               	movlw	17
   609     076F  00A9               	movwf	??_main+1
   610     0770                     u350:
   611     0770  1383               	bcf	3,7	;select IRP bank0
   612     0771  0800               	movf	0,w
   613     0772  00AA               	movwf	??_main+2
   614     0773  0A04               	incf	4,w
   615     0774  00AB               	movwf	??_main+3
   616     0775  0828               	movf	??_main,w
   617     0776  0084               	movwf	4
   618     0777  082A               	movf	??_main+2,w
   619     0778  0080               	movwf	0
   620     0779  0A04               	incf	4,w
   621     077A  00A8               	movwf	??_main
   622     077B  082B               	movf	??_main+3,w
   623     077C  0084               	movwf	4
   624     077D  0BA9               	decfsz	??_main+1,f
   625     077E  2F70               	goto	u350
   626     077F                     l869:
   627                           
   628                           ;main.c: 35:                 clcd_print(line_2, (0xC0 + 0));
   629     077F  120A  118A  25CF  120A  118A  	fcall	_getchar
   630     0784  1283               	bcf	3,5	;RP0=0, select bank0
   631     0785  1303               	bcf	3,6	;RP1=0, select bank0
   632     0786  00CF               	movwf	main@ch
   633     0787                     l871:
   634                           
   635                           ;main.c: 36:             }
   636     0787  084F               	movf	main@ch,w
   637     0788  120A  118A  25E3  120A  118A  	fcall	_putchar
   638     078D                     l873:
   639                           
   640                           ;main.c: 38:     }
   641     078D  3010               	movlw	16
   642     078E  1283               	bcf	3,5	;RP0=0, select bank0
   643     078F  1303               	bcf	3,6	;RP1=0, select bank0
   644     0790  0250               	subwf	main@i,w
   645     0791  1803               	skipnc
   646     0792  2F94               	goto	u361
   647     0793  2F95               	goto	u360
   648     0794                     u361:
   649     0794  2FB1               	goto	l887
   650     0795                     u360:
   651     0795                     l875:
   652     0795  034E               	decf	main@flag,w
   653     0796  1D03               	btfss	3,2
   654     0797  2F99               	goto	u371
   655     0798  2F9A               	goto	u370
   656     0799                     u371:
   657     0799  2FB1               	goto	l887
   658     079A                     u370:
   659     079A                     l877:
   660     079A  0850               	movf	main@i,w
   661     079B  3E80               	addlw	128
   662     079C  00F4               	movwf	clcd_putch@addr
   663     079D  084F               	movf	main@ch,w
   664     079E  120A  118A  25EE  120A  118A  	fcall	_clcd_putch
   665     07A3                     l879:
   666     07A3  3001               	movlw	1
   667     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   668     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   669     07A6  07D0               	addwf	main@i,f
   670     07A7                     l881:
   671     07A7  3010               	movlw	16
   672     07A8  0650               	xorwf	main@i,w
   673     07A9  1D03               	btfss	3,2
   674     07AA  2FAC               	goto	u381
   675     07AB  2FAD               	goto	u380
   676     07AC                     u381:
   677     07AC  2F7F               	goto	l869
   678     07AD                     u380:
   679     07AD                     l883:
   680     07AD  01D0               	clrf	main@i
   681     07AE                     l885:
   682     07AE  3002               	movlw	2
   683     07AF  00CE               	movwf	main@flag
   684     07B0  2F7F               	goto	l869
   685     07B1                     l887:
   686     07B1  3010               	movlw	16
   687     07B2  0250               	subwf	main@i,w
   688     07B3  1803               	skipnc
   689     07B4  2FB6               	goto	u391
   690     07B5  2FB7               	goto	u390
   691     07B6                     u391:
   692     07B6  2F7F               	goto	l869
   693     07B7                     u390:
   694     07B7                     l889:
   695     07B7  3002               	movlw	2
   696     07B8  064E               	xorwf	main@flag,w
   697     07B9  1D03               	btfss	3,2
   698     07BA  2FBC               	goto	u401
   699     07BB  2FBD               	goto	u400
   700     07BC                     u401:
   701     07BC  2F7F               	goto	l869
   702     07BD                     u400:
   703     07BD                     l891:
   704     07BD  0850               	movf	main@i,w
   705     07BE  3E3D               	addlw	(low (main@line_1| 0))& (0+255)
   706     07BF  0084               	movwf	4
   707     07C0  084F               	movf	main@ch,w
   708     07C1  1383               	bcf	3,7	;select IRP bank0
   709     07C2  0080               	movwf	0
   710     07C3                     l893:
   711     07C3  0850               	movf	main@i,w
   712     07C4  3EC0               	addlw	192
   713     07C5  00F4               	movwf	clcd_putch@addr
   714     07C6  084F               	movf	main@ch,w
   715     07C7  120A  118A  25EE  120A  118A  	fcall	_clcd_putch
   716     07CC                     l895:
   717     07CC  3001               	movlw	1
   718     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   719     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   720     07CF  07D0               	addwf	main@i,f
   721     07D0                     l897:
   722     07D0  3010               	movlw	16
   723     07D1  0650               	xorwf	main@i,w
   724     07D2  1D03               	btfss	3,2
   725     07D3  2FD5               	goto	u411
   726     07D4  2FD6               	goto	u410
   727     07D5                     u411:
   728     07D5  2FEA               	goto	l57
   729     07D6                     u410:
   730     07D6                     l899:
   731     07D6  01D0               	clrf	main@i
   732     07D7                     l901:
   733     07D7  303D               	movlw	(low (main@line_1| 0))& (0+255)
   734     07D8  00F4               	movwf	clcd_print@str
   735     07D9  3080               	movlw	128
   736     07DA  00F5               	movwf	clcd_print@addr
   737     07DB  120A  118A  2638  120A  118A  	fcall	_clcd_print
   738     07E0                     l903:
   739     07E0  302C               	movlw	(low (main@line_2| 0))& (0+255)
   740     07E1  00F4               	movwf	clcd_print@str
   741     07E2  30C0               	movlw	192
   742     07E3  00F5               	movwf	clcd_print@addr
   743     07E4  120A  118A  2638  120A  118A  	fcall	_clcd_print
   744     07E9  2F7F               	goto	l869
   745     07EA                     l57:
   746     07EA  2F7F               	goto	l869
   747     07EB  120A  118A  2800   	ljmp	start
   748     07EE                     __end_of_main:
   749                           
   750                           	psect	text1
   751     05E3                     __ptext1:	
   752 ;; *************** function _putchar *****************
   753 ;; Defined at:
   754 ;;		line 33 in file "uart.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  data            1    wreg     unsigned char 
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  data            1    0[COMMON] unsigned char 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         1       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0
   771 ;;      Totals:         1       0       0       0       0
   772 ;;Total ram usage:        1 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;;		_puts
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782     05E3                     _putchar:	
   783                           ;psect for function _putchar
   784                           
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _putchar: [wreg]
   788                           ;putchar@data stored from wreg
   789     05E3  00F0               	movwf	putchar@data
   790     05E4                     l859:
   791                           
   792                           ;uart.c: 35:     TXREG = data;
   793     05E4  0870               	movf	putchar@data,w
   794     05E5  1283               	bcf	3,5	;RP0=0, select bank0
   795     05E6  1303               	bcf	3,6	;RP1=0, select bank0
   796     05E7  0099               	movwf	25	;volatile
   797     05E8                     l89:	
   798                           ;uart.c: 40:     } while (TXIF != 1);
   799                           
   800     05E8  1E0C               	btfss	12,4	;volatile
   801     05E9  2DEB               	goto	u341
   802     05EA  2DEC               	goto	u340
   803     05EB                     u341:
   804     05EB  2DE8               	goto	l89
   805     05EC                     u340:
   806     05EC                     l90:
   807                           
   808                           ;uart.c: 43:     TXIF = 0;
   809     05EC  120C               	bcf	12,4	;volatile
   810     05ED                     l91:
   811     05ED  0008               	return
   812     05EE                     __end_of_putchar:
   813                           
   814                           	psect	text2
   815     0623                     __ptext2:	
   816 ;; *************** function _init_config *****************
   817 ;; Defined at:
   818 ;;		line 20 in file "main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, pclath, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 3
   839 ;; This function calls:
   840 ;;		_init_clcd
   841 ;;		_init_uart
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847     0623                     _init_config:	
   848                           ;psect for function _init_config
   849                           
   850     0623                     l851:	
   851                           ;incstack = 0
   852                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   853                           
   854                           
   855                           ;main.c: 21:             i += 1;
   856     0623  3000               	movlw	0
   857     0624  1283               	bcf	3,5	;RP0=0, select bank0
   858     0625  1303               	bcf	3,6	;RP1=0, select bank0
   859     0626  00A3               	movwf	init_uart@baud+3
   860     0627  3000               	movlw	0
   861     0628  00A2               	movwf	init_uart@baud+2
   862     0629  3025               	movlw	37
   863     062A  00A1               	movwf	init_uart@baud+1
   864     062B  3080               	movlw	128
   865     062C  00A0               	movwf	init_uart@baud
   866     062D  120A  118A  2675  120A  118A  	fcall	_init_uart
   867                           
   868                           ;main.c: 22: 
   869     0632  120A  118A  25D8  120A  118A  	fcall	_init_clcd
   870     0637                     l47:
   871     0637  0008               	return
   872     0638                     __end_of_init_config:
   873                           
   874                           	psect	text3
   875     0675                     __ptext3:	
   876 ;; *************** function _init_uart *****************
   877 ;; Defined at:
   878 ;;		line 9 in file "uart.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  baud            4    0[BANK0 ] unsigned long 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       4       0       0       0
   893 ;;      Locals:         0       0       0       0       0
   894 ;;      Temps:          0       4       0       0       0
   895 ;;      Totals:         0       8       0       0       0
   896 ;;Total ram usage:        8 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 1
   899 ;; This function calls:
   900 ;;		___lldiv
   901 ;; This function is called by:
   902 ;;		_init_config
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906     0675                     _init_uart:	
   907                           ;psect for function _init_uart
   908                           
   909     0675                     l837:	
   910                           ;incstack = 0
   911                           ; Regs used in _init_uart: [wreg+status,2+status,0+pclath+cstack]
   912                           
   913                           
   914                           ;uart.c: 11:     SPEN = 1;
   915     0675  1283               	bcf	3,5	;RP0=0, select bank0
   916     0676  1303               	bcf	3,6	;RP1=0, select bank0
   917     0677  1798               	bsf	24,7	;volatile
   918                           
   919                           ;uart.c: 14:     CREN = 1;
   920     0678  1618               	bsf	24,4	;volatile
   921     0679                     l839:
   922                           
   923                           ;uart.c: 17:     SPBRG = (20000000 / (16 * baud)) - 1;
   924     0679  0820               	movf	init_uart@baud,w
   925     067A  00A4               	movwf	??_init_uart
   926     067B  0821               	movf	init_uart@baud+1,w
   927     067C  00A5               	movwf	??_init_uart+1
   928     067D  0822               	movf	init_uart@baud+2,w
   929     067E  00A6               	movwf	??_init_uart+2
   930     067F  0823               	movf	init_uart@baud+3,w
   931     0680  00A7               	movwf	??_init_uart+3
   932     0681  3004               	movlw	4
   933     0682                     u315:
   934     0682  1003               	clrc
   935     0683  0DA4               	rlf	??_init_uart,f
   936     0684  0DA5               	rlf	??_init_uart+1,f
   937     0685  0DA6               	rlf	??_init_uart+2,f
   938     0686  0DA7               	rlf	??_init_uart+3,f
   939     0687                     u310:
   940     0687  3EFF               	addlw	-1
   941     0688  1D03               	skipz
   942     0689  2E82               	goto	u315
   943     068A  0827               	movf	??_init_uart+3,w
   944     068B  00F3               	movwf	___lldiv@divisor+3
   945     068C  0826               	movf	??_init_uart+2,w
   946     068D  00F2               	movwf	___lldiv@divisor+2
   947     068E  0825               	movf	??_init_uart+1,w
   948     068F  00F1               	movwf	___lldiv@divisor+1
   949     0690  0824               	movf	??_init_uart,w
   950     0691  00F0               	movwf	___lldiv@divisor
   951     0692  3001               	movlw	1
   952     0693  00F7               	movwf	___lldiv@dividend+3
   953     0694  3031               	movlw	49
   954     0695  00F6               	movwf	___lldiv@dividend+2
   955     0696  302D               	movlw	45
   956     0697  00F5               	movwf	___lldiv@dividend+1
   957     0698  3000               	movlw	0
   958     0699  00F4               	movwf	___lldiv@dividend
   959     069A  120A  118A  26FC  120A  118A  	fcall	___lldiv
   960     069F  0870               	movf	?___lldiv,w
   961     06A0  3EFF               	addlw	255
   962     06A1  1683               	bsf	3,5	;RP0=1, select bank1
   963     06A2  1303               	bcf	3,6	;RP1=0, select bank1
   964     06A3  0099               	movwf	25	;volatile
   965     06A4                     l79:
   966     06A4  0008               	return
   967     06A5                     __end_of_init_uart:
   968                           
   969                           	psect	text4
   970     06FC                     __ptext4:	
   971 ;; *************** function ___lldiv *****************
   972 ;; Defined at:
   973 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  divisor         4    0[COMMON] unsigned long 
   976 ;;  dividend        4    4[COMMON] unsigned long 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  quotient        4    9[COMMON] unsigned long 
   979 ;;  counter         1   13[COMMON] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  4    0[COMMON] unsigned long 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         8       0       0       0       0
   990 ;;      Locals:         5       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0
   992 ;;      Totals:        14       0       0       0       0
   993 ;;Total ram usage:       14 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_init_uart
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002     06FC                     ___lldiv:	
  1003                           ;psect for function ___lldiv
  1004                           
  1005     06FC                     l805:	
  1006                           ;incstack = 0
  1007                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1008                           
  1009     06FC  3000               	movlw	0
  1010     06FD  00FC               	movwf	___lldiv@quotient+3
  1011     06FE  3000               	movlw	0
  1012     06FF  00FB               	movwf	___lldiv@quotient+2
  1013     0700  3000               	movlw	0
  1014     0701  00FA               	movwf	___lldiv@quotient+1
  1015     0702  3000               	movlw	0
  1016     0703  00F9               	movwf	___lldiv@quotient
  1017     0704  0873               	movf	___lldiv@divisor+3,w
  1018     0705  0472               	iorwf	___lldiv@divisor+2,w
  1019     0706  0471               	iorwf	___lldiv@divisor+1,w
  1020     0707  0470               	iorwf	___lldiv@divisor,w
  1021     0708  1903               	skipnz
  1022     0709  2F0B               	goto	u241
  1023     070A  2F0C               	goto	u240
  1024     070B                     u241:
  1025     070B  2F57               	goto	l825
  1026     070C                     u240:
  1027     070C                     l807:
  1028     070C  3001               	movlw	1
  1029     070D  00FD               	movwf	___lldiv@counter
  1030     070E  2F1A               	goto	l811
  1031     070F                     l809:
  1032     070F  3001               	movlw	1
  1033     0710  00F8               	movwf	??___lldiv
  1034     0711                     u255:
  1035     0711  1003               	clrc
  1036     0712  0DF0               	rlf	___lldiv@divisor,f
  1037     0713  0DF1               	rlf	___lldiv@divisor+1,f
  1038     0714  0DF2               	rlf	___lldiv@divisor+2,f
  1039     0715  0DF3               	rlf	___lldiv@divisor+3,f
  1040     0716  0BF8               	decfsz	??___lldiv,f
  1041     0717  2F11               	goto	u255
  1042     0718  3001               	movlw	1
  1043     0719  07FD               	addwf	___lldiv@counter,f
  1044     071A                     l811:
  1045     071A  1FF3               	btfss	___lldiv@divisor+3,7
  1046     071B  2F1D               	goto	u261
  1047     071C  2F1E               	goto	u260
  1048     071D                     u261:
  1049     071D  2F0F               	goto	l809
  1050     071E                     u260:
  1051     071E                     l813:
  1052     071E  3001               	movlw	1
  1053     071F  00F8               	movwf	??___lldiv
  1054     0720                     u275:
  1055     0720  1003               	clrc
  1056     0721  0DF9               	rlf	___lldiv@quotient,f
  1057     0722  0DFA               	rlf	___lldiv@quotient+1,f
  1058     0723  0DFB               	rlf	___lldiv@quotient+2,f
  1059     0724  0DFC               	rlf	___lldiv@quotient+3,f
  1060     0725  0BF8               	decfsz	??___lldiv,f
  1061     0726  2F20               	goto	u275
  1062     0727                     l815:
  1063     0727  0873               	movf	___lldiv@divisor+3,w
  1064     0728  0277               	subwf	___lldiv@dividend+3,w
  1065     0729  1D03               	skipz
  1066     072A  2F35               	goto	u285
  1067     072B  0872               	movf	___lldiv@divisor+2,w
  1068     072C  0276               	subwf	___lldiv@dividend+2,w
  1069     072D  1D03               	skipz
  1070     072E  2F35               	goto	u285
  1071     072F  0871               	movf	___lldiv@divisor+1,w
  1072     0730  0275               	subwf	___lldiv@dividend+1,w
  1073     0731  1D03               	skipz
  1074     0732  2F35               	goto	u285
  1075     0733  0870               	movf	___lldiv@divisor,w
  1076     0734  0274               	subwf	___lldiv@dividend,w
  1077     0735                     u285:
  1078     0735  1C03               	skipc
  1079     0736  2F38               	goto	u281
  1080     0737  2F39               	goto	u280
  1081     0738                     u281:
  1082     0738  2F48               	goto	l821
  1083     0739                     u280:
  1084     0739                     l817:
  1085     0739  0870               	movf	___lldiv@divisor,w
  1086     073A  02F4               	subwf	___lldiv@dividend,f
  1087     073B  0871               	movf	___lldiv@divisor+1,w
  1088     073C  1C03               	skipc
  1089     073D  0F71               	incfsz	___lldiv@divisor+1,w
  1090     073E  02F5               	subwf	___lldiv@dividend+1,f
  1091     073F  0872               	movf	___lldiv@divisor+2,w
  1092     0740  1C03               	skipc
  1093     0741  0F72               	incfsz	___lldiv@divisor+2,w
  1094     0742  02F6               	subwf	___lldiv@dividend+2,f
  1095     0743  0873               	movf	___lldiv@divisor+3,w
  1096     0744  1C03               	skipc
  1097     0745  0F73               	incfsz	___lldiv@divisor+3,w
  1098     0746  02F7               	subwf	___lldiv@dividend+3,f
  1099     0747                     l819:
  1100     0747  1479               	bsf	___lldiv@quotient,0
  1101     0748                     l821:
  1102     0748  3001               	movlw	1
  1103     0749                     u295:
  1104     0749  1003               	clrc
  1105     074A  0CF3               	rrf	___lldiv@divisor+3,f
  1106     074B  0CF2               	rrf	___lldiv@divisor+2,f
  1107     074C  0CF1               	rrf	___lldiv@divisor+1,f
  1108     074D  0CF0               	rrf	___lldiv@divisor,f
  1109     074E  3EFF               	addlw	-1
  1110     074F  1D03               	skipz
  1111     0750  2F49               	goto	u295
  1112     0751                     l823:
  1113     0751  3001               	movlw	1
  1114     0752  02FD               	subwf	___lldiv@counter,f
  1115     0753  1D03               	btfss	3,2
  1116     0754  2F56               	goto	u301
  1117     0755  2F57               	goto	u300
  1118     0756                     u301:
  1119     0756  2F1E               	goto	l813
  1120     0757                     u300:
  1121     0757                     l825:
  1122     0757  087C               	movf	___lldiv@quotient+3,w
  1123     0758  00F3               	movwf	?___lldiv+3
  1124     0759  087B               	movf	___lldiv@quotient+2,w
  1125     075A  00F2               	movwf	?___lldiv+2
  1126     075B  087A               	movf	___lldiv@quotient+1,w
  1127     075C  00F1               	movwf	?___lldiv+1
  1128     075D  0879               	movf	___lldiv@quotient,w
  1129     075E  00F0               	movwf	?___lldiv
  1130     075F                     l219:
  1131     075F  0008               	return
  1132     0760                     __end_of___lldiv:
  1133                           
  1134                           	psect	text5
  1135     05D8                     __ptext5:	
  1136 ;; *************** function _init_clcd *****************
  1137 ;; Defined at:
  1138 ;;		line 40 in file "clcd.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, pclath, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 2
  1159 ;; This function calls:
  1160 ;;		_init_display_controller
  1161 ;; This function is called by:
  1162 ;;		_init_config
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166     05D8                     _init_clcd:	
  1167                           ;psect for function _init_clcd
  1168                           
  1169     05D8                     l829:	
  1170                           ;incstack = 0
  1171                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1172                           
  1173                           
  1174                           ;clcd.c: 42:     TRISD = 0x00;
  1175     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  1176     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  1177     05DA  0188               	clrf	8	;volatile
  1178     05DB                     l831:
  1179                           
  1180                           ;clcd.c: 45:     TRISE2 = 0;
  1181     05DB  1109               	bcf	9,2	;volatile
  1182     05DC                     l833:
  1183                           
  1184                           ;clcd.c: 46:     TRISE1 = 0;
  1185     05DC  1089               	bcf	9,1	;volatile
  1186     05DD                     l835:
  1187                           
  1188                           ;clcd.c: 48:     init_display_controller();
  1189     05DD  120A  118A  26A5  120A  118A  	fcall	_init_display_controller
  1190     05E2                     l23:
  1191     05E2  0008               	return
  1192     05E3                     __end_of_init_clcd:
  1193                           
  1194                           	psect	text6
  1195     06A5                     __ptext6:	
  1196 ;; *************** function _init_display_controller *****************
  1197 ;; Defined at:
  1198 ;;		line 20 in file "clcd.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          2       0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 1
  1219 ;; This function calls:
  1220 ;;		_clcd_write
  1221 ;; This function is called by:
  1222 ;;		_init_clcd
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     06A5                     _init_display_controller:	
  1227                           ;psect for function _init_display_controller
  1228                           
  1229     06A5                     l785:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1232                           
  1233                           
  1234                           ;clcd.c: 22:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1235     06A5  30C3               	movlw	195
  1236     06A6  00F5               	movwf	??_init_display_controller+1
  1237     06A7  30CD               	movlw	205
  1238     06A8  00F4               	movwf	??_init_display_controller
  1239     06A9                     u437:
  1240     06A9  0BF4               	decfsz	??_init_display_controller,f
  1241     06AA  2EA9               	goto	u437
  1242     06AB  0BF5               	decfsz	??_init_display_controller+1,f
  1243     06AC  2EA9               	goto	u437
  1244     06AD                     l787:
  1245                           
  1246                           ;clcd.c: 25:     clcd_write(0x33, 0);
  1247     06AD  01F0               	clrf	clcd_write@mode
  1248     06AE  3033               	movlw	51
  1249     06AF  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1250     06B4                     l789:
  1251                           
  1252                           ;clcd.c: 26:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1253     06B4  301B               	movlw	27
  1254     06B5  00F5               	movwf	??_init_display_controller+1
  1255     06B6  309E               	movlw	158
  1256     06B7  00F4               	movwf	??_init_display_controller
  1257     06B8                     u447:
  1258     06B8  0BF4               	decfsz	??_init_display_controller,f
  1259     06B9  2EB8               	goto	u447
  1260     06BA  0BF5               	decfsz	??_init_display_controller+1,f
  1261     06BB  2EB8               	goto	u447
  1262     06BC  0000               	nop
  1263                           
  1264                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1265     06BD  01F0               	clrf	clcd_write@mode
  1266     06BE  3033               	movlw	51
  1267     06BF  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1268     06C4                     l791:
  1269                           
  1270                           ;clcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1271     06C4  30A6               	movlw	166
  1272     06C5  00F4               	movwf	??_init_display_controller
  1273     06C6                     u457:
  1274     06C6  0BF4               	decfsz	??_init_display_controller,f
  1275     06C7  2EC6               	goto	u457
  1276     06C8  0000               	nop
  1277     06C9                     l793:
  1278                           
  1279                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1280     06C9  01F0               	clrf	clcd_write@mode
  1281     06CA  3033               	movlw	51
  1282     06CB  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1283     06D0                     l795:
  1284                           
  1285                           ;clcd.c: 30:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1286     06D0  2ED1               	nop2	;2 cycle nop
  1287     06D1  2ED2               	nop2	;2 cycle nop
  1288     06D2  0000               	nop
  1289     06D3                     l797:
  1290                           
  1291                           ;clcd.c: 32:     clcd_write(0x38, 0);
  1292     06D3  01F0               	clrf	clcd_write@mode
  1293     06D4  3038               	movlw	56
  1294     06D5  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1295     06DA                     l799:
  1296                           
  1297                           ;clcd.c: 33:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1298     06DA  30A6               	movlw	166
  1299     06DB  00F4               	movwf	??_init_display_controller
  1300     06DC                     u467:
  1301     06DC  0BF4               	decfsz	??_init_display_controller,f
  1302     06DD  2EDC               	goto	u467
  1303     06DE  0000               	nop
  1304                           
  1305                           ;clcd.c: 34:     clcd_write(0x01, 0);
  1306     06DF  01F0               	clrf	clcd_write@mode
  1307     06E0  3001               	movlw	1
  1308     06E1  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1309     06E6                     l801:
  1310                           
  1311                           ;clcd.c: 35:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1312     06E6  3004               	movlw	4
  1313     06E7  00F5               	movwf	??_init_display_controller+1
  1314     06E8  303D               	movlw	61
  1315     06E9  00F4               	movwf	??_init_display_controller
  1316     06EA                     u477:
  1317     06EA  0BF4               	decfsz	??_init_display_controller,f
  1318     06EB  2EEA               	goto	u477
  1319     06EC  0BF5               	decfsz	??_init_display_controller+1,f
  1320     06ED  2EEA               	goto	u477
  1321     06EE  2EEF               	nop2
  1322     06EF                     l803:
  1323                           
  1324                           ;clcd.c: 36:     clcd_write(0x0C, 0);
  1325     06EF  01F0               	clrf	clcd_write@mode
  1326     06F0  300C               	movlw	12
  1327     06F1  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1328                           
  1329                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1330     06F6  30A6               	movlw	166
  1331     06F7  00F4               	movwf	??_init_display_controller
  1332     06F8                     u487:
  1333     06F8  0BF4               	decfsz	??_init_display_controller,f
  1334     06F9  2EF8               	goto	u487
  1335     06FA  0000               	nop
  1336     06FB                     l20:
  1337     06FB  0008               	return
  1338     06FC                     __end_of_init_display_controller:
  1339                           
  1340                           	psect	text7
  1341     05CF                     __ptext7:	
  1342 ;; *************** function _getchar *****************
  1343 ;; Defined at:
  1344 ;;		line 20 in file "uart.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      unsigned char 
  1351 ;; Registers used:
  1352 ;;		wreg
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371     05CF                     _getchar:	
  1372                           ;psect for function _getchar
  1373                           
  1374     05CF                     l853:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _getchar: [wreg]
  1377                           
  1378     05CF                     l82:	
  1379                           ;uart.c: 24:     }
  1380                           
  1381                           
  1382                           ;uart.c: 22:     while (RCIF != 1) {
  1383     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1384     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1385     05D1  1E8C               	btfss	12,5	;volatile
  1386     05D2  2DD4               	goto	u331
  1387     05D3  2DD5               	goto	u330
  1388     05D4                     u331:
  1389     05D4  2DCF               	goto	l82
  1390     05D5                     u330:
  1391     05D5                     l84:
  1392                           
  1393                           ;uart.c: 27:     RCIF = 0;
  1394     05D5  128C               	bcf	12,5	;volatile
  1395     05D6                     l855:
  1396                           
  1397                           ;uart.c: 30:     return RCREG;
  1398     05D6  081A               	movf	26,w	;volatile
  1399     05D7                     l85:
  1400     05D7  0008               	return
  1401     05D8                     __end_of_getchar:
  1402                           
  1403                           	psect	text8
  1404     05EE                     __ptext8:	
  1405 ;; *************** function _clcd_putch *****************
  1406 ;; Defined at:
  1407 ;;		line 51 in file "clcd.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  data            1    wreg     const unsigned char 
  1410 ;;  addr            1    4[COMMON] unsigned char 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  data            1    5[COMMON] const unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         1       0       0       0       0
  1423 ;;      Locals:         1       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0
  1425 ;;      Totals:         2       0       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 1
  1429 ;; This function calls:
  1430 ;;		_clcd_write
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436     05EE                     _clcd_putch:	
  1437                           ;psect for function _clcd_putch
  1438                           
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1442                           ;clcd_putch@data stored from wreg
  1443     05EE  00F5               	movwf	clcd_putch@data
  1444     05EF                     l841:
  1445                           
  1446                           ;clcd.c: 52:     clcd_write(addr, 0);
  1447     05EF  01F0               	clrf	clcd_write@mode
  1448     05F0  0874               	movf	clcd_putch@addr,w
  1449     05F1  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1450                           
  1451                           ;clcd.c: 53:     clcd_write(data, 1);
  1452     05F6  01F0               	clrf	clcd_write@mode
  1453     05F7  0AF0               	incf	clcd_write@mode,f
  1454     05F8  0875               	movf	clcd_putch@data,w
  1455     05F9  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1456     05FE                     l26:
  1457     05FE  0008               	return
  1458     05FF                     __end_of_clcd_putch:
  1459                           
  1460                           	psect	text9
  1461     0638                     __ptext9:	
  1462 ;; *************** function _clcd_print *****************
  1463 ;; Defined at:
  1464 ;;		line 56 in file "clcd.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  str             1    4[COMMON] PTR const unsigned char 
  1467 ;;		 -> main@line_1(17), main@line_2(17), 
  1468 ;;  addr            1    5[COMMON] unsigned char 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         2       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0
  1483 ;;      Totals:         2       0       0       0       0
  1484 ;;Total ram usage:        2 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 1
  1487 ;; This function calls:
  1488 ;;		_clcd_write
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494     0638                     _clcd_print:	
  1495                           ;psect for function _clcd_print
  1496                           
  1497     0638                     l843:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1500                           
  1501                           
  1502                           ;clcd.c: 57:     clcd_write(addr, 0);
  1503     0638  01F0               	clrf	clcd_write@mode
  1504     0639  0875               	movf	clcd_print@addr,w
  1505     063A  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1506                           
  1507                           ;clcd.c: 59:     while (*str != '\0') {
  1508     063F  2E4C               	goto	l849
  1509     0640                     l845:
  1510                           
  1511                           ;clcd.c: 60:         clcd_write(*str, 1);
  1512     0640  01F0               	clrf	clcd_write@mode
  1513     0641  0AF0               	incf	clcd_write@mode,f
  1514     0642  0874               	movf	clcd_print@str,w
  1515     0643  0084               	movwf	4
  1516     0644  0800               	movf	0,w
  1517     0645  120A  118A  2655  120A  118A  	fcall	_clcd_write
  1518     064A                     l847:
  1519                           
  1520                           ;clcd.c: 61:         str++;
  1521     064A  3001               	movlw	1
  1522     064B  07F4               	addwf	clcd_print@str,f
  1523     064C                     l849:
  1524                           
  1525                           ;clcd.c: 59:     while (*str != '\0') {
  1526     064C  0874               	movf	clcd_print@str,w
  1527     064D  0084               	movwf	4
  1528     064E  1383               	bcf	3,7	;select IRP bank0
  1529     064F  0800               	movf	0,w
  1530     0650  1D03               	btfss	3,2
  1531     0651  2E53               	goto	u321
  1532     0652  2E54               	goto	u320
  1533     0653                     u321:
  1534     0653  2E40               	goto	l845
  1535     0654                     u320:
  1536     0654                     l32:
  1537     0654  0008               	return
  1538     0655                     __end_of_clcd_print:
  1539                           
  1540                           	psect	text10
  1541     0655                     __ptext10:	
  1542 ;; *************** function _clcd_write *****************
  1543 ;; Defined at:
  1544 ;;		line 9 in file "clcd.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  byte            1    wreg     unsigned char 
  1547 ;;  mode            1    0[COMMON] unsigned char 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  byte            1    3[COMMON] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         1       0       0       0       0
  1560 ;;      Locals:         1       0       0       0       0
  1561 ;;      Temps:          2       0       0       0       0
  1562 ;;      Totals:         4       0       0       0       0
  1563 ;;Total ram usage:        4 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_init_display_controller
  1569 ;;		_clcd_putch
  1570 ;;		_clcd_print
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574     0655                     _clcd_write:	
  1575                           ;psect for function _clcd_write
  1576                           
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _clcd_write: [wreg]
  1580                           ;clcd_write@byte stored from wreg
  1581     0655  00F3               	movwf	clcd_write@byte
  1582     0656                     l777:
  1583                           
  1584                           ;clcd.c: 10:     RE2 = mode;
  1585     0656  1870               	btfsc	clcd_write@mode,0
  1586     0657  2E59               	goto	u221
  1587     0658  2E5D               	goto	u220
  1588     0659                     u221:
  1589     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1590     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1591     065B  1509               	bsf	9,2	;volatile
  1592     065C  2E60               	goto	u234
  1593     065D                     u220:
  1594     065D  1283               	bcf	3,5	;RP0=0, select bank0
  1595     065E  1303               	bcf	3,6	;RP1=0, select bank0
  1596     065F  1109               	bcf	9,2	;volatile
  1597     0660                     u234:
  1598     0660                     l779:
  1599                           
  1600                           ;clcd.c: 11:     PORTD = byte;
  1601     0660  0873               	movf	clcd_write@byte,w
  1602     0661  0088               	movwf	8	;volatile
  1603     0662                     l781:
  1604                           
  1605                           ;clcd.c: 13:     RE1 = 1;
  1606     0662  1489               	bsf	9,1	;volatile
  1607                           
  1608                           ;clcd.c: 14:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1609     0663  30A6               	movlw	166
  1610     0664  00F1               	movwf	??_clcd_write
  1611     0665                     u497:
  1612     0665  0BF1               	decfsz	??_clcd_write,f
  1613     0666  2E65               	goto	u497
  1614     0667  0000               	nop
  1615     0668                     l783:
  1616                           
  1617                           ;clcd.c: 15:     RE1 = 0;
  1618     0668  1283               	bcf	3,5	;RP0=0, select bank0
  1619     0669  1303               	bcf	3,6	;RP1=0, select bank0
  1620     066A  1089               	bcf	9,1	;volatile
  1621                           
  1622                           ;clcd.c: 17:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1623     066B  301B               	movlw	27
  1624     066C  00F2               	movwf	??_clcd_write+1
  1625     066D  309E               	movlw	158
  1626     066E  00F1               	movwf	??_clcd_write
  1627     066F                     u507:
  1628     066F  0BF1               	decfsz	??_clcd_write,f
  1629     0670  2E6F               	goto	u507
  1630     0671  0BF2               	decfsz	??_clcd_write+1,f
  1631     0672  2E6F               	goto	u507
  1632     0673  0000               	nop
  1633     0674                     l17:
  1634     0674  0008               	return
  1635     0675                     __end_of_clcd_write:
  1636     0002                     ___latbits      equ	2
  1637     007E                     btemp           set	126	;btemp
  1638     007E                     wtemp0          set	126
  1639                           
  1640                           	psect	config
  1641                           
  1642                           ;Config register CONFIG @ 0x2007
  1643                           ;	Oscillator Selection bits
  1644                           ;	FOSC = 0x3, unprogrammed default
  1645                           ;	Watchdog Timer Enable bit
  1646                           ;	WDTE = OFF, WDT disabled
  1647                           ;	Power-up Timer Enable bit
  1648                           ;	PWRTE = 0x1, unprogrammed default
  1649                           ;	Brown-out Reset Enable bit
  1650                           ;	BOREN = 0x1, unprogrammed default
  1651                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1652                           ;	LVP = 0x1, unprogrammed default
  1653                           ;	Data EEPROM Memory Code Protection bit
  1654                           ;	CPD = 0x1, unprogrammed default
  1655                           ;	Flash Program Memory Write Enable bits
  1656                           ;	WRT = 0x3, unprogrammed default
  1657                           ;	In-Circuit Debugger Mode bit
  1658                           ;	DEBUG = 0x1, unprogrammed default
  1659                           ;	Flash Program Memory Code Protection bit
  1660                           ;	CP = 0x1, unprogrammed default
  1661     2007                     	org	8199
  1662     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> main@line_1(BANK0[17]), main@line_2(BANK0[17]), 


Critical Paths under _main in COMMON

    _init_uart->___lldiv
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _init_config->_init_uart

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0     890
                                              8 BANK0     41    41      0
                         _clcd_print
                         _clcd_putch
                            _getchar
                        _init_config
                            _putchar
 ---------------------------------------------------------------------------------
 (1) _putchar                                              1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     248
                          _init_clcd
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     187
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     164
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0      61
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0      61
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _getchar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     114
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           2     0      2     132
                                              4 COMMON     2     0      2
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1      61
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _getchar
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_uart
       ___lldiv
   _putchar

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     49      66     82.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      80      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Dec 25 20:20:41 2024

                              pc 0002                   clcd_print@addr 0075                               l20 06FB  
                             l23 05E2                               l32 0654                               l17 0674  
                             l26 05FE                               l47 0637                               l57 07EA  
                             l82 05CF                               l90 05EC                               l91 05ED  
                             l84 05D5                               l85 05D7                               l79 06A4  
                             l89 05E8                               fsr 0004                              l219 075F  
                            l801 06E6                              l803 06EF                              l811 071A  
                            l821 0748                              l813 071E                              l805 06FC  
                            l901 07D7                              l831 05DB                              l823 0751  
                            l815 0727                              l807 070C                              l903 07E0  
                            l841 05EF                              l833 05DC                              l817 0739  
                            l809 070F                              l825 0757                              l843 0638  
                            l835 05DD                              l819 0747                              l851 0623  
                            l781 0662                              l845 0640                              l853 05CF  
                            l829 05D8                              l837 0675                              l861 0760  
                            l783 0668                              l847 064A                              l855 05D6  
                            l791 06C4                              l839 0679                              l871 0787  
                            l863 0765                              l777 0656                              l849 064C  
                            l793 06C9                              l785 06A5                              l881 07A7  
                            l873 078D                              l865 0769                              l779 0660  
                            l795 06D0                              l787 06AD                              l859 05E4  
                            l891 07BD                              l883 07AD                              l875 0795  
                            l867 076A                              l797 06D3                              l789 06B4  
                            l893 07C3                              l885 07AE                              l877 079A  
                            l869 077F                              l799 06DA                              l895 07CC  
                            l879 07A3                              l887 07B1                              l897 07D0  
                            l889 07B7                              l899 07D6                              _RE1 0049  
                            _RE2 004A                              u220 065D                              u300 0757  
                            u221 0659                              u301 0756                              u310 0687  
                            u320 0654                              u240 070C                              u400 07BD  
                            u321 0653                              u241 070B                              u401 07BC  
                            u234 0660                              u330 05D5                              u410 07D6  
                            u331 05D4                              u315 0682                              u411 07D5  
                            u260 071E                              u340 05EC                              u261 071D  
                            u341 05EB                              u350 0770                              u255 0711  
                            u280 0739                              u360 0795                              u281 0738  
                            u361 0794                              u370 079A                              u507 066F  
                            u275 0720                              u371 0799                              u380 07AD  
                            u437 06A9                              u285 0735                              u381 07AC  
                            u390 07B7                              u447 06B8                              u295 0749  
                            u391 07B6                              u457 06C6                              u467 06DC  
                            u477 06EA                              u487 06F8                              u497 0665  
                 clcd_putch@addr 0074                              fsr0 0004                   clcd_putch@data 0075  
                            indf 0000                             _CREN 00C4                             _RCIF 0065  
                           _SPEN 00C7                             _TXIF 0064                             _main 0760  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                  __end_of___lldiv 0760  
                   ?_init_config 0070                            _RCREG 001A                            _SPBRG 0099  
                          _PORTD 0008                            _TRISD 0088                            _TXREG 0019  
                __end_of_getchar 05D8                            main@i 0050                            pclath 000A  
                __end_of_putchar 05EE                            status 0003                            wtemp0 007E  
                __initialization 07EE                     __end_of_main 07EE                           ??_main 0028  
                         _TRISE1 0449                           _TRISE2 044A          _init_display_controller 06A5  
                      ??___lldiv 0078                           main@ch 004F                        ??_getchar 0070  
                      ??_putchar 0070          __end_of__initialization 07FC                   __pcstackCOMMON 0070  
                   __pidataBANK0 05FF        ??_init_display_controller 0074                       _clcd_print 0638  
                     _clcd_putch 05EE                       _clcd_write 0655                       __pmaintext 0760  
                        ___lldiv 06FC                          __ptext1 05E3                          __ptext2 0623  
                        __ptext3 0675                          __ptext4 06FC                          __ptext5 05D8  
                        __ptext6 06A5                          __ptext7 05CF                          __ptext8 05EE  
                        __ptext9 0638                          _getchar 05CF  __end_of_init_display_controller 06FC  
              __end_of_init_clcd 05E3                __end_of_init_uart 06A5                          _putchar 05E3  
           end_of_initialization 07FC                      ?_clcd_print 0074                      ?_clcd_putch 0074  
                ___lldiv@divisor 0070                      ?_clcd_write 0070                  ___lldiv@counter 007D  
                  clcd_print@str 0074                       main@line_1 003D                       main@line_2 002C  
            start_initialization 07EE                      putchar@data 0070                       init_fetch0 0610  
                    __pdataBANK0 0051                    ??_init_config 007E                        ___latbits 0002  
                  __pcstackBANK0 0020                         ?___lldiv 0070                         ?_getchar 0070  
                       ?_putchar 0070                        _init_clcd 05D8              __end_of_init_config 0638  
                      _init_uart 0675         ?_init_display_controller 0070                     ??_clcd_print 0076  
                   ??_clcd_putch 0075                     ??_clcd_write 0071                        main@F1167 0051  
             __end_of_clcd_print 0655               __end_of_clcd_putch 05FF               __end_of_clcd_write 0675  
                     ?_init_clcd 0070                       ?_init_uart 0020                      _init_config 0623  
                       __ptext10 0655                         main@flag 004E                         init_ram0 0614  
                    ??_init_clcd 0076                      ??_init_uart 0024                    init_uart@baud 0020  
               ___lldiv@dividend 0074                 ___lldiv@quotient 0079  
