

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Dec 25 20:13:49 2024

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0004                     fsr             equ	4
    56     0004                     fsr0            equ	4
    57     0000                     indf            equ	0
    58     0000                     indf0           equ	0
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0000                     INDF            equ	0	;# 
    64     0001                     TMR0            equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR             equ	4	;# 
    68     0005                     PORTA           equ	5	;# 
    69     0006                     PORTB           equ	6	;# 
    70     0007                     PORTC           equ	7	;# 
    71     0008                     PORTD           equ	8	;# 
    72     0009                     PORTE           equ	9	;# 
    73     000A                     PCLATH          equ	10	;# 
    74     000B                     INTCON          equ	11	;# 
    75     000C                     PIR1            equ	12	;# 
    76     000D                     PIR2            equ	13	;# 
    77     000E                     TMR1            equ	14	;# 
    78     000E                     TMR1L           equ	14	;# 
    79     000F                     TMR1H           equ	15	;# 
    80     0010                     T1CON           equ	16	;# 
    81     0011                     TMR2            equ	17	;# 
    82     0012                     T2CON           equ	18	;# 
    83     0013                     SSPBUF          equ	19	;# 
    84     0014                     SSPCON          equ	20	;# 
    85     0015                     CCPR1           equ	21	;# 
    86     0015                     CCPR1L          equ	21	;# 
    87     0016                     CCPR1H          equ	22	;# 
    88     0017                     CCP1CON         equ	23	;# 
    89     0018                     RCSTA           equ	24	;# 
    90     0019                     TXREG           equ	25	;# 
    91     001A                     RCREG           equ	26	;# 
    92     001B                     CCPR2           equ	27	;# 
    93     001B                     CCPR2L          equ	27	;# 
    94     001C                     CCPR2H          equ	28	;# 
    95     001D                     CCP2CON         equ	29	;# 
    96     001E                     ADRESH          equ	30	;# 
    97     001F                     ADCON0          equ	31	;# 
    98     0081                     OPTION_REG      equ	129	;# 
    99     0085                     TRISA           equ	133	;# 
   100     0086                     TRISB           equ	134	;# 
   101     0087                     TRISC           equ	135	;# 
   102     0088                     TRISD           equ	136	;# 
   103     0089                     TRISE           equ	137	;# 
   104     008C                     PIE1            equ	140	;# 
   105     008D                     PIE2            equ	141	;# 
   106     008E                     PCON            equ	142	;# 
   107     0091                     SSPCON2         equ	145	;# 
   108     0092                     PR2             equ	146	;# 
   109     0093                     SSPADD          equ	147	;# 
   110     0094                     SSPSTAT         equ	148	;# 
   111     0098                     TXSTA           equ	152	;# 
   112     0099                     SPBRG           equ	153	;# 
   113     009C                     CMCON           equ	156	;# 
   114     009D                     CVRCON          equ	157	;# 
   115     009E                     ADRESL          equ	158	;# 
   116     009F                     ADCON1          equ	159	;# 
   117     010C                     EEDATA          equ	268	;# 
   118     010D                     EEADR           equ	269	;# 
   119     010E                     EEDATH          equ	270	;# 
   120     010F                     EEADRH          equ	271	;# 
   121     018C                     EECON1          equ	396	;# 
   122     018D                     EECON2          equ	397	;# 
   123     0000                     INDF            equ	0	;# 
   124     0001                     TMR0            equ	1	;# 
   125     0002                     PCL             equ	2	;# 
   126     0003                     STATUS          equ	3	;# 
   127     0004                     FSR             equ	4	;# 
   128     0005                     PORTA           equ	5	;# 
   129     0006                     PORTB           equ	6	;# 
   130     0007                     PORTC           equ	7	;# 
   131     0008                     PORTD           equ	8	;# 
   132     0009                     PORTE           equ	9	;# 
   133     000A                     PCLATH          equ	10	;# 
   134     000B                     INTCON          equ	11	;# 
   135     000C                     PIR1            equ	12	;# 
   136     000D                     PIR2            equ	13	;# 
   137     000E                     TMR1            equ	14	;# 
   138     000E                     TMR1L           equ	14	;# 
   139     000F                     TMR1H           equ	15	;# 
   140     0010                     T1CON           equ	16	;# 
   141     0011                     TMR2            equ	17	;# 
   142     0012                     T2CON           equ	18	;# 
   143     0013                     SSPBUF          equ	19	;# 
   144     0014                     SSPCON          equ	20	;# 
   145     0015                     CCPR1           equ	21	;# 
   146     0015                     CCPR1L          equ	21	;# 
   147     0016                     CCPR1H          equ	22	;# 
   148     0017                     CCP1CON         equ	23	;# 
   149     0018                     RCSTA           equ	24	;# 
   150     0019                     TXREG           equ	25	;# 
   151     001A                     RCREG           equ	26	;# 
   152     001B                     CCPR2           equ	27	;# 
   153     001B                     CCPR2L          equ	27	;# 
   154     001C                     CCPR2H          equ	28	;# 
   155     001D                     CCP2CON         equ	29	;# 
   156     001E                     ADRESH          equ	30	;# 
   157     001F                     ADCON0          equ	31	;# 
   158     0081                     OPTION_REG      equ	129	;# 
   159     0085                     TRISA           equ	133	;# 
   160     0086                     TRISB           equ	134	;# 
   161     0087                     TRISC           equ	135	;# 
   162     0088                     TRISD           equ	136	;# 
   163     0089                     TRISE           equ	137	;# 
   164     008C                     PIE1            equ	140	;# 
   165     008D                     PIE2            equ	141	;# 
   166     008E                     PCON            equ	142	;# 
   167     0091                     SSPCON2         equ	145	;# 
   168     0092                     PR2             equ	146	;# 
   169     0093                     SSPADD          equ	147	;# 
   170     0094                     SSPSTAT         equ	148	;# 
   171     0098                     TXSTA           equ	152	;# 
   172     0099                     SPBRG           equ	153	;# 
   173     009C                     CMCON           equ	156	;# 
   174     009D                     CVRCON          equ	157	;# 
   175     009E                     ADRESL          equ	158	;# 
   176     009F                     ADCON1          equ	159	;# 
   177     010C                     EEDATA          equ	268	;# 
   178     010D                     EEADR           equ	269	;# 
   179     010E                     EEDATH          equ	270	;# 
   180     010F                     EEADRH          equ	271	;# 
   181     018C                     EECON1          equ	396	;# 
   182     018D                     EECON2          equ	397	;# 
   183     0000                     INDF            equ	0	;# 
   184     0001                     TMR0            equ	1	;# 
   185     0002                     PCL             equ	2	;# 
   186     0003                     STATUS          equ	3	;# 
   187     0004                     FSR             equ	4	;# 
   188     0005                     PORTA           equ	5	;# 
   189     0006                     PORTB           equ	6	;# 
   190     0007                     PORTC           equ	7	;# 
   191     0008                     PORTD           equ	8	;# 
   192     0009                     PORTE           equ	9	;# 
   193     000A                     PCLATH          equ	10	;# 
   194     000B                     INTCON          equ	11	;# 
   195     000C                     PIR1            equ	12	;# 
   196     000D                     PIR2            equ	13	;# 
   197     000E                     TMR1            equ	14	;# 
   198     000E                     TMR1L           equ	14	;# 
   199     000F                     TMR1H           equ	15	;# 
   200     0010                     T1CON           equ	16	;# 
   201     0011                     TMR2            equ	17	;# 
   202     0012                     T2CON           equ	18	;# 
   203     0013                     SSPBUF          equ	19	;# 
   204     0014                     SSPCON          equ	20	;# 
   205     0015                     CCPR1           equ	21	;# 
   206     0015                     CCPR1L          equ	21	;# 
   207     0016                     CCPR1H          equ	22	;# 
   208     0017                     CCP1CON         equ	23	;# 
   209     0018                     RCSTA           equ	24	;# 
   210     0019                     TXREG           equ	25	;# 
   211     001A                     RCREG           equ	26	;# 
   212     001B                     CCPR2           equ	27	;# 
   213     001B                     CCPR2L          equ	27	;# 
   214     001C                     CCPR2H          equ	28	;# 
   215     001D                     CCP2CON         equ	29	;# 
   216     001E                     ADRESH          equ	30	;# 
   217     001F                     ADCON0          equ	31	;# 
   218     0081                     OPTION_REG      equ	129	;# 
   219     0085                     TRISA           equ	133	;# 
   220     0086                     TRISB           equ	134	;# 
   221     0087                     TRISC           equ	135	;# 
   222     0088                     TRISD           equ	136	;# 
   223     0089                     TRISE           equ	137	;# 
   224     008C                     PIE1            equ	140	;# 
   225     008D                     PIE2            equ	141	;# 
   226     008E                     PCON            equ	142	;# 
   227     0091                     SSPCON2         equ	145	;# 
   228     0092                     PR2             equ	146	;# 
   229     0093                     SSPADD          equ	147	;# 
   230     0094                     SSPSTAT         equ	148	;# 
   231     0098                     TXSTA           equ	152	;# 
   232     0099                     SPBRG           equ	153	;# 
   233     009C                     CMCON           equ	156	;# 
   234     009D                     CVRCON          equ	157	;# 
   235     009E                     ADRESL          equ	158	;# 
   236     009F                     ADCON1          equ	159	;# 
   237     010C                     EEDATA          equ	268	;# 
   238     010D                     EEADR           equ	269	;# 
   239     010E                     EEDATH          equ	270	;# 
   240     010F                     EEADRH          equ	271	;# 
   241     018C                     EECON1          equ	396	;# 
   242     018D                     EECON2          equ	397	;# 
   243     0000                     INDF            equ	0	;# 
   244     0001                     TMR0            equ	1	;# 
   245     0002                     PCL             equ	2	;# 
   246     0003                     STATUS          equ	3	;# 
   247     0004                     FSR             equ	4	;# 
   248     0005                     PORTA           equ	5	;# 
   249     0006                     PORTB           equ	6	;# 
   250     0007                     PORTC           equ	7	;# 
   251     0008                     PORTD           equ	8	;# 
   252     0009                     PORTE           equ	9	;# 
   253     000A                     PCLATH          equ	10	;# 
   254     000B                     INTCON          equ	11	;# 
   255     000C                     PIR1            equ	12	;# 
   256     000D                     PIR2            equ	13	;# 
   257     000E                     TMR1            equ	14	;# 
   258     000E                     TMR1L           equ	14	;# 
   259     000F                     TMR1H           equ	15	;# 
   260     0010                     T1CON           equ	16	;# 
   261     0011                     TMR2            equ	17	;# 
   262     0012                     T2CON           equ	18	;# 
   263     0013                     SSPBUF          equ	19	;# 
   264     0014                     SSPCON          equ	20	;# 
   265     0015                     CCPR1           equ	21	;# 
   266     0015                     CCPR1L          equ	21	;# 
   267     0016                     CCPR1H          equ	22	;# 
   268     0017                     CCP1CON         equ	23	;# 
   269     0018                     RCSTA           equ	24	;# 
   270     0019                     TXREG           equ	25	;# 
   271     001A                     RCREG           equ	26	;# 
   272     001B                     CCPR2           equ	27	;# 
   273     001B                     CCPR2L          equ	27	;# 
   274     001C                     CCPR2H          equ	28	;# 
   275     001D                     CCP2CON         equ	29	;# 
   276     001E                     ADRESH          equ	30	;# 
   277     001F                     ADCON0          equ	31	;# 
   278     0081                     OPTION_REG      equ	129	;# 
   279     0085                     TRISA           equ	133	;# 
   280     0086                     TRISB           equ	134	;# 
   281     0087                     TRISC           equ	135	;# 
   282     0088                     TRISD           equ	136	;# 
   283     0089                     TRISE           equ	137	;# 
   284     008C                     PIE1            equ	140	;# 
   285     008D                     PIE2            equ	141	;# 
   286     008E                     PCON            equ	142	;# 
   287     0091                     SSPCON2         equ	145	;# 
   288     0092                     PR2             equ	146	;# 
   289     0093                     SSPADD          equ	147	;# 
   290     0094                     SSPSTAT         equ	148	;# 
   291     0098                     TXSTA           equ	152	;# 
   292     0099                     SPBRG           equ	153	;# 
   293     009C                     CMCON           equ	156	;# 
   294     009D                     CVRCON          equ	157	;# 
   295     009E                     ADRESL          equ	158	;# 
   296     009F                     ADCON1          equ	159	;# 
   297     010C                     EEDATA          equ	268	;# 
   298     010D                     EEADR           equ	269	;# 
   299     010E                     EEDATH          equ	270	;# 
   300     010F                     EEADRH          equ	271	;# 
   301     018C                     EECON1          equ	396	;# 
   302     018D                     EECON2          equ	397	;# 
   303                           
   304                           	psect	idataBANK0
   305     056E                     __pidataBANK0:
   306                           
   307                           ;initializer for main@F997
   308     056E  343F               	retlw	63
   309     056F  3406               	retlw	6
   310     0570  345B               	retlw	91
   311     0571  344F               	retlw	79
   312     0572  3466               	retlw	102
   313     0573  346D               	retlw	109
   314     0574  347D               	retlw	125
   315     0575  3407               	retlw	7
   316     0576  347F               	retlw	127
   317     0577  346F               	retlw	111
   318     0578  3440               	retlw	64
   319     0579  3440               	retlw	64
   320                           
   321                           ;initializer for main@F995
   322     057A  343F               	retlw	63
   323     057B  343F               	retlw	63
   324     057C  343F               	retlw	63
   325     057D  343F               	retlw	63
   326                           
   327                           ;initializer for key_press@start
   328     057E  3401               	retlw	1
   329                           
   330                           ;initializer for key_press@stop
   331     057F  3401               	retlw	1
   332                           
   333                           ;initializer for key_press@right
   334     0580  3401               	retlw	1
   335                           
   336                           ;initializer for key_press@left
   337     0581  3401               	retlw	1
   338     0008                     _PORTD          set	8
   339     0005                     _PORTA          set	5
   340     0006                     _PORTB          set	6
   341     0085                     _TRISA          set	133
   342     0088                     _TRISD          set	136
   343     0086                     _TRISB          set	134
   344                           
   345                           	psect	cinit
   346     07ED                     start_initialization:	
   347                           ; #config settings
   348                           
   349     07ED                     __initialization:
   350                           
   351                           ; Initialize objects allocated to BANK0
   352     07ED  1383               	bcf	3,7	;select IRP bank0
   353     07EE  304D               	movlw	low (__pdataBANK0+20)
   354     07EF  00FD               	movwf	btemp+-1
   355     07F0  3005               	movlw	high __pidataBANK0
   356     07F1  00FE               	movwf	btemp
   357     07F2  306E               	movlw	low __pidataBANK0
   358     07F3  00FF               	movwf	btemp+1
   359     07F4  3039               	movlw	low __pdataBANK0
   360     07F5  0084               	movwf	4
   361     07F6  120A  118A  255F  120A  118A  	fcall	init_ram0
   362                           
   363                           ; Clear objects allocated to BANK0
   364     07FB  01CD               	clrf	__pbssBANK0& (0+127)
   365     07FC                     end_of_initialization:	
   366                           ;End of C runtime variable initialization code
   367                           
   368     07FC                     __end_of__initialization:
   369     07FC  0183               	clrf	3
   370     07FD  120A  118A  2E6C   	ljmp	_main	;jump to C main() function
   371                           
   372                           	psect	bssBANK0
   373     004D                     __pbssBANK0:
   374     004D                     main@key:
   375     004D                     	ds	1
   376                           
   377                           	psect	dataBANK0
   378     0039                     __pdataBANK0:
   379     0039                     main@F997:
   380     0039                     	ds	12
   381     0045                     main@F995:
   382     0045                     	ds	4
   383     0049                     key_press@start:
   384     0049                     	ds	1
   385     004A                     key_press@stop:
   386     004A                     	ds	1
   387     004B                     key_press@right:
   388     004B                     	ds	1
   389     004C                     key_press@left:
   390     004C                     	ds	1
   391                           
   392                           	psect	inittext
   393     055B                     init_fetch0:	
   394                           ;	Called with low address in FSR and high address in W
   395                           
   396     055B  087E               	movf	btemp,w
   397     055C  008A               	movwf	10
   398     055D  087F               	movf	btemp+1,w
   399     055E  0082               	movwf	2
   400     055F                     init_ram0:	
   401                           ;Called with:
   402                           ;	high address of idata address in btemp 
   403                           ;	low address of idata address in btemp+1 
   404                           ;	low address of data in FSR
   405                           ;	high address + 1 of data in btemp-1
   406                           
   407     055F  120A  118A  255B  120A  118A  	fcall	init_fetch0
   408     0564  0080               	movwf	0
   409     0565  0A84               	incf	4,f
   410     0566  0804               	movf	4,w
   411     0567  067D               	xorwf	btemp+-1,w
   412     0568  1903               	btfsc	3,2
   413     0569  3400               	retlw	0
   414     056A  0AFF               	incf	btemp+1,f
   415     056B  1903               	btfsc	3,2
   416     056C  0AFE               	incf	btemp,f
   417     056D  2D5F               	goto	init_ram0
   418                           
   419                           	psect	cstackCOMMON
   420     0070                     __pcstackCOMMON:
   421     0070                     ?_init_ssd:
   422     0070                     ?_display:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ?_init_digital_keypad:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ?_key_press:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_init_config:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?___awmod:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     display@data:	
   441                           ; 2 bytes @ 0x0
   442                           
   443     0070                     ___awmod@divisor:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ??_init_ssd:	
   447                           ; 2 bytes @ 0x0
   448                           
   449     0070                     ??_init_digital_keypad:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0070                     ??_key_press:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     ??_init_config:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 1 bytes @ 0x0
   460     0070                     	ds	1
   461     0071                     ??_display:
   462                           
   463                           ; 1 bytes @ 0x1
   464     0071                     	ds	1
   465     0072                     ___awmod@dividend:
   466                           
   467                           ; 2 bytes @ 0x2
   468     0072                     	ds	2
   469     0074                     ___awmod@counter:
   470     0074                     ??___awmod:	
   471                           ; 1 bytes @ 0x4
   472                           
   473                           
   474                           ; 1 bytes @ 0x4
   475     0074                     	ds	1
   476     0075                     ___awmod@sign:
   477     0075                     display@wait:	
   478                           ; 1 bytes @ 0x5
   479                           
   480                           
   481                           ; 4 bytes @ 0x5
   482     0075                     	ds	4
   483     0079                     display@digit:
   484                           
   485                           ; 1 bytes @ 0x9
   486     0079                     	ds	1
   487     007A                     ??_main:
   488                           
   489                           ; 1 bytes @ 0xA
   490     007A                     	ds	4
   491                           
   492                           	psect	cstackBANK0
   493     0020                     __pcstackBANK0:
   494     0020                     main@digit:
   495                           
   496                           ; 12 bytes @ 0x0
   497     0020                     	ds	12
   498     002C                     main@wait1:
   499                           
   500                           ; 2 bytes @ 0xC
   501     002C                     	ds	2
   502     002E                     main@prev:
   503                           
   504                           ; 1 bytes @ 0xE
   505     002E                     	ds	1
   506     002F                     main@wait2:
   507                           
   508                           ; 2 bytes @ 0xF
   509     002F                     	ds	2
   510     0031                     main@flag_count:
   511                           
   512                           ; 1 bytes @ 0x11
   513     0031                     	ds	1
   514     0032                     main@ssd:
   515                           
   516                           ; 4 bytes @ 0x12
   517     0032                     	ds	4
   518     0036                     main@opt:
   519                           
   520                           ; 1 bytes @ 0x16
   521     0036                     	ds	1
   522     0037                     main@flag:
   523                           
   524                           ; 1 bytes @ 0x17
   525     0037                     	ds	1
   526     0038                     main@count:
   527                           
   528                           ; 1 bytes @ 0x18
   529     0038                     	ds	1
   530                           
   531                           	psect	maintext
   532     066C                     __pmaintext:	
   533 ;;
   534 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   535 ;;
   536 ;; *************** function _main *****************
   537 ;; Defined at:
   538 ;;		line 18 in file "main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  digit          12    0[BANK0 ] unsigned char [12]
   543 ;;  ssd             4   18[BANK0 ] unsigned char [4]
   544 ;;  wait2           2   15[BANK0 ] unsigned int 
   545 ;;  wait1           2   12[BANK0 ] unsigned int 
   546 ;;  count           1   24[BANK0 ] unsigned char 
   547 ;;  flag            1   23[BANK0 ] unsigned char 
   548 ;;  opt             1   22[BANK0 ] unsigned char 
   549 ;;  flag_count      1   17[BANK0 ] unsigned char 
   550 ;;  prev            1   14[BANK0 ] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : B00/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         0      25       0       0       0
   562 ;;      Temps:          4       0       0       0       0
   563 ;;      Totals:         4      25       0       0       0
   564 ;;Total ram usage:       29 bytes
   565 ;; Hardware stack levels required when called: 2
   566 ;; This function calls:
   567 ;;		___awmod
   568 ;;		_display
   569 ;;		_init_config
   570 ;;		_key_press
   571 ;; This function is called by:
   572 ;;		Startup code after reset
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576     066C                     _main:	
   577                           ;psect for function _main
   578                           
   579     066C                     l934:	
   580                           ;incstack = 0
   581                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   582                           
   583                           
   584                           ;main.c: 19:             if (flag == 1 || flag == 2);main.c: 20:             {
   585     066C  1283               	bcf	3,5	;RP0=0, select bank0
   586     066D  1303               	bcf	3,6	;RP1=0, select bank0
   587     066E  01B8               	clrf	main@count
   588     066F                     l936:
   589     066F  3001               	movlw	1
   590     0670  00B6               	movwf	main@opt
   591     0671  01B1               	clrf	main@flag_count
   592     0672                     l938:
   593                           
   594                           ;main.c: 21:                 if (flag != opt)
   595     0672  3001               	movlw	1
   596     0673  00AC               	movwf	main@wait1
   597     0674  3000               	movlw	0
   598     0675  00AD               	movwf	main@wait1+1
   599     0676                     l940:
   600     0676  3001               	movlw	1
   601     0677  00AF               	movwf	main@wait2
   602     0678  3000               	movlw	0
   603     0679  00B0               	movwf	main@wait2+1
   604     067A                     l942:
   605                           
   606                           ;main.c: 22:                 {
   607     067A  0848               	movf	main@F995+3,w
   608     067B  00B5               	movwf	main@ssd+3
   609     067C  0847               	movf	main@F995+2,w
   610     067D  00B4               	movwf	main@ssd+2
   611     067E  0846               	movf	main@F995+1,w
   612     067F  00B3               	movwf	main@ssd+1
   613     0680  0845               	movf	main@F995,w
   614     0681  00B2               	movwf	main@ssd
   615     0682                     l944:
   616                           
   617                           ;main.c: 23:                     if (flag == 2)
   618     0682  3039               	movlw	main@F997& (0+255)
   619     0683  0084               	movwf	4
   620     0684  3020               	movlw	low main@digit
   621     0685  00FA               	movwf	??_main
   622     0686  300C               	movlw	12
   623     0687  00FB               	movwf	??_main+1
   624     0688                     u610:
   625     0688  1383               	bcf	3,7	;select IRP bank0
   626     0689  0800               	movf	0,w
   627     068A  00FC               	movwf	??_main+2
   628     068B  0A04               	incf	4,w
   629     068C  00FD               	movwf	??_main+3
   630     068D  087A               	movf	??_main,w
   631     068E  0084               	movwf	4
   632     068F  087C               	movf	??_main+2,w
   633     0690  0080               	movwf	0
   634     0691  0A04               	incf	4,w
   635     0692  00FA               	movwf	??_main
   636     0693  087D               	movf	??_main+3,w
   637     0694  0084               	movwf	4
   638     0695  0BFB               	decfsz	??_main+1,f
   639     0696  2E88               	goto	u610
   640     0697                     l946:
   641                           
   642                           ;main.c: 25:                     else
   643     0697  120A  118A  2544  120A  118A  	fcall	_init_config
   644     069C                     l948:
   645                           
   646                           ;main.c: 28:                 opt = flag;
   647     069C  3001               	movlw	1
   648     069D  1283               	bcf	3,5	;RP0=0, select bank0
   649     069E  1303               	bcf	3,6	;RP1=0, select bank0
   650     069F  07AC               	addwf	main@wait1,f
   651     06A0  1803               	skipnc
   652     06A1  0AAD               	incf	main@wait1+1,f
   653     06A2  3000               	movlw	0
   654     06A3  07AD               	addwf	main@wait1+1,f
   655     06A4  3065               	movlw	101
   656     06A5  062C               	xorwf	main@wait1,w
   657     06A6  042D               	iorwf	main@wait1+1,w
   658     06A7  1D03               	btfss	3,2
   659     06A8  2EAA               	goto	u621
   660     06A9  2EAB               	goto	u620
   661     06AA                     u621:
   662     06AA  2EE9               	goto	l980
   663     06AB                     u620:
   664     06AB                     l950:
   665                           
   666                           ;main.c: 29:             };main.c: 31:             {
   667     06AB  120A  118A  2582  120A  118A  	fcall	_key_press
   668     06B0  1283               	bcf	3,5	;RP0=0, select bank0
   669     06B1  1303               	bcf	3,6	;RP1=0, select bank0
   670     06B2  00B7               	movwf	main@flag
   671     06B3                     l952:
   672                           
   673                           ;main.c: 32:                 flag_count += 1;
   674     06B3  0337               	decf	main@flag,w
   675     06B4  1903               	btfsc	3,2
   676     06B5  2EB7               	goto	u631
   677     06B6  2EB8               	goto	u630
   678     06B7                     u631:
   679     06B7  2EBE               	goto	l956
   680     06B8                     u630:
   681     06B8                     l954:
   682     06B8  3002               	movlw	2
   683     06B9  0637               	xorwf	main@flag,w
   684     06BA  1D03               	btfss	3,2
   685     06BB  2EBD               	goto	u641
   686     06BC  2EBE               	goto	u640
   687     06BD                     u641:
   688     06BD  2ED1               	goto	l966
   689     06BE                     u640:
   690     06BE                     l956:
   691                           
   692                           ;main.c: 33:                 if (flag_count % 2 == 1);main.c: 34:                 {
   693     06BE  0837               	movf	main@flag,w
   694     06BF  0636               	xorwf	main@opt,w
   695     06C0  1903               	skipnz
   696     06C1  2EC3               	goto	u651
   697     06C2  2EC4               	goto	u650
   698     06C3                     u651:
   699     06C3  2ECF               	goto	l964
   700     06C4                     u650:
   701     06C4                     l958:
   702                           
   703                           ;main.c: 35:                     prev = opt;;main.c: 36:                     opt = flag;
   704     06C4  3002               	movlw	2
   705     06C5  0637               	xorwf	main@flag,w
   706     06C6  1D03               	btfss	3,2
   707     06C7  2EC9               	goto	u661
   708     06C8  2ECA               	goto	u660
   709     06C9                     u661:
   710     06C9  2ECD               	goto	l962
   711     06CA                     u660:
   712     06CA                     l960:
   713                           
   714                           ;main.c: 37:                 } else
   715     06CA  3001               	movlw	1
   716     06CB  07B8               	addwf	main@count,f
   717     06CC  2ECF               	goto	l964
   718     06CD                     l962:
   719                           
   720                           ;main.c: 39:                     flag_count = 0;
   721     06CD  3001               	movlw	1
   722     06CE  02B8               	subwf	main@count,f
   723     06CF                     l964:
   724                           
   725                           ;main.c: 41:                 }
   726     06CF  0837               	movf	main@flag,w
   727     06D0  00B6               	movwf	main@opt
   728     06D1                     l966:
   729                           
   730                           ;main.c: 43:             wait1 = 1;
   731     06D1  3003               	movlw	3
   732     06D2  0637               	xorwf	main@flag,w
   733     06D3  1D03               	btfss	3,2
   734     06D4  2ED6               	goto	u671
   735     06D5  2ED7               	goto	u670
   736     06D6                     u671:
   737     06D6  2EE5               	goto	l978
   738     06D7                     u670:
   739     06D7                     l968:
   740                           
   741                           ;main.c: 44:         };main.c: 45:         if (wait2++ == 100)
   742     06D7  3001               	movlw	1
   743     06D8  07B1               	addwf	main@flag_count,f
   744     06D9                     l970:
   745                           
   746                           ;main.c: 46:         {
   747     06D9  1C31               	btfss	main@flag_count,0
   748     06DA  2EDC               	goto	u681
   749     06DB  2EDD               	goto	u680
   750     06DC                     u681:
   751     06DC  2EE2               	goto	l974
   752     06DD                     u680:
   753     06DD                     l972:
   754                           
   755                           ;main.c: 47:             if (opt == 1);main.c: 48:             {
   756     06DD  0836               	movf	main@opt,w
   757     06DE  00AE               	movwf	main@prev
   758                           
   759                           ;main.c: 49:                 if (count == 12)
   760     06DF  0837               	movf	main@flag,w
   761     06E0  00B6               	movwf	main@opt
   762                           
   763                           ;main.c: 50:                     count = 0;
   764     06E1  2EE5               	goto	l978
   765     06E2                     l974:
   766                           
   767                           ;main.c: 51:                 ssd [0] = digit [count % 12];;main.c: 52:                 s
      +                          sd [1] = digit [(count + 1) % 12];
   768     06E2  01B1               	clrf	main@flag_count
   769     06E3                     l976:
   770                           
   771                           ;main.c: 53:                 ssd [2] = digit [(count + 2) % 12];
   772     06E3  082E               	movf	main@prev,w
   773     06E4  00B6               	movwf	main@opt
   774     06E5                     l978:
   775                           
   776                           ;main.c: 56:                 count += 1;
   777     06E5  3001               	movlw	1
   778     06E6  00AC               	movwf	main@wait1
   779     06E7  3000               	movlw	0
   780     06E8  00AD               	movwf	main@wait1+1
   781     06E9                     l980:
   782                           
   783                           ;main.c: 58:             } else if (opt == 2)
   784     06E9  3001               	movlw	1
   785     06EA  07AF               	addwf	main@wait2,f
   786     06EB  1803               	skipnc
   787     06EC  0AB0               	incf	main@wait2+1,f
   788     06ED  3000               	movlw	0
   789     06EE  07B0               	addwf	main@wait2+1,f
   790     06EF  3065               	movlw	101
   791     06F0  062F               	xorwf	main@wait2,w
   792     06F1  0430               	iorwf	main@wait2+1,w
   793     06F2  1D03               	btfss	3,2
   794     06F3  2EF5               	goto	u691
   795     06F4  2EF6               	goto	u690
   796     06F5                     u691:
   797     06F5  2FE2               	goto	l1020
   798     06F6                     u690:
   799     06F6                     l982:
   800                           
   801                           ;main.c: 59:             {;main.c: 60:                 if (count < 3)
   802     06F6  0336               	decf	main@opt,w
   803     06F7  1D03               	btfss	3,2
   804     06F8  2EFA               	goto	u701
   805     06F9  2EFB               	goto	u700
   806     06FA                     u701:
   807     06FA  2F69               	goto	l1000
   808     06FB                     u700:
   809     06FB                     l984:
   810                           
   811                           ;main.c: 61:                     count = 16 - count;;main.c: 62:                 ssd [3]
      +                           = digit [count % 12];
   812     06FB  300C               	movlw	12
   813     06FC  0638               	xorwf	main@count,w
   814     06FD  1D03               	btfss	3,2
   815     06FE  2F00               	goto	u711
   816     06FF  2F01               	goto	u710
   817     0700                     u711:
   818     0700  2F02               	goto	l988
   819     0701                     u710:
   820     0701                     l986:
   821                           
   822                           ;main.c: 63:                 ssd [2] = digit [(count - 1) % 12];
   823     0701  01B8               	clrf	main@count
   824     0702                     l988:
   825                           
   826                           ;main.c: 64:                 ssd [1] = digit [(count - 2) % 12];
   827     0702  300C               	movlw	12
   828     0703  00F0               	movwf	___awmod@divisor
   829     0704  3000               	movlw	0
   830     0705  00F1               	movwf	___awmod@divisor+1
   831     0706  0838               	movf	main@count,w
   832     0707  00FA               	movwf	??_main
   833     0708  01FB               	clrf	??_main+1
   834     0709  087A               	movf	??_main,w
   835     070A  00F2               	movwf	___awmod@dividend
   836     070B  087B               	movf	??_main+1,w
   837     070C  00F3               	movwf	___awmod@dividend+1
   838     070D  120A  118A  2615  120A  118A  	fcall	___awmod
   839     0712  0870               	movf	?___awmod,w
   840     0713  3E20               	addlw	(low (main@digit| 0))& (0+255)
   841     0714  0084               	movwf	4
   842     0715  1383               	bcf	3,7	;select IRP bank0
   843     0716  0800               	movf	0,w
   844     0717  1283               	bcf	3,5	;RP0=0, select bank0
   845     0718  1303               	bcf	3,6	;RP1=0, select bank0
   846     0719  00B2               	movwf	main@ssd
   847     071A                     l990:
   848                           
   849                           ;main.c: 65:                 ssd [0] = digit [(count - 3) % 12];
   850     071A  300C               	movlw	12
   851     071B  00F0               	movwf	___awmod@divisor
   852     071C  3000               	movlw	0
   853     071D  00F1               	movwf	___awmod@divisor+1
   854     071E  0838               	movf	main@count,w
   855     071F  3E01               	addlw	1
   856     0720  00F2               	movwf	___awmod@dividend
   857     0721  3000               	movlw	0
   858     0722  1803               	skipnc
   859     0723  3001               	movlw	1
   860     0724  00F3               	movwf	___awmod@dividend+1
   861     0725  120A  118A  2615  120A  118A  	fcall	___awmod
   862     072A  0870               	movf	?___awmod,w
   863     072B  3E20               	addlw	(low (main@digit| 0))& (0+255)
   864     072C  0084               	movwf	4
   865     072D  1383               	bcf	3,7	;select IRP bank0
   866     072E  0800               	movf	0,w
   867     072F  1283               	bcf	3,5	;RP0=0, select bank0
   868     0730  1303               	bcf	3,6	;RP1=0, select bank0
   869     0731  00B3               	movwf	main@ssd+1
   870     0732                     l992:
   871                           
   872                           ;main.c: 66: 
   873     0732  300C               	movlw	12
   874     0733  00F0               	movwf	___awmod@divisor
   875     0734  3000               	movlw	0
   876     0735  00F1               	movwf	___awmod@divisor+1
   877     0736  0838               	movf	main@count,w
   878     0737  3E02               	addlw	2
   879     0738  00F2               	movwf	___awmod@dividend
   880     0739  3000               	movlw	0
   881     073A  1803               	skipnc
   882     073B  3001               	movlw	1
   883     073C  00F3               	movwf	___awmod@dividend+1
   884     073D  120A  118A  2615  120A  118A  	fcall	___awmod
   885     0742  0870               	movf	?___awmod,w
   886     0743  3E20               	addlw	(low (main@digit| 0))& (0+255)
   887     0744  0084               	movwf	4
   888     0745  1383               	bcf	3,7	;select IRP bank0
   889     0746  0800               	movf	0,w
   890     0747  1283               	bcf	3,5	;RP0=0, select bank0
   891     0748  1303               	bcf	3,6	;RP1=0, select bank0
   892     0749  00B4               	movwf	main@ssd+2
   893     074A                     l994:
   894                           
   895                           ;main.c: 67:                 count -= 1;
   896     074A  300C               	movlw	12
   897     074B  00F0               	movwf	___awmod@divisor
   898     074C  3000               	movlw	0
   899     074D  00F1               	movwf	___awmod@divisor+1
   900     074E  0838               	movf	main@count,w
   901     074F  3E03               	addlw	3
   902     0750  00F2               	movwf	___awmod@dividend
   903     0751  3000               	movlw	0
   904     0752  1803               	skipnc
   905     0753  3001               	movlw	1
   906     0754  00F3               	movwf	___awmod@dividend+1
   907     0755  120A  118A  2615  120A  118A  	fcall	___awmod
   908     075A  0870               	movf	?___awmod,w
   909     075B  3E20               	addlw	(low (main@digit| 0))& (0+255)
   910     075C  0084               	movwf	4
   911     075D  1383               	bcf	3,7	;select IRP bank0
   912     075E  0800               	movf	0,w
   913     075F  1283               	bcf	3,5	;RP0=0, select bank0
   914     0760  1303               	bcf	3,6	;RP1=0, select bank0
   915     0761  00B5               	movwf	main@ssd+3
   916     0762                     l996:
   917                           
   918                           ;main.c: 69:             } else if (opt == 3)
   919     0762  3001               	movlw	1
   920     0763  07B8               	addwf	main@count,f
   921     0764                     l998:
   922                           
   923                           ;main.c: 70:             {
   924     0764  3001               	movlw	1
   925     0765  00AF               	movwf	main@wait2
   926     0766  3000               	movlw	0
   927     0767  00B0               	movwf	main@wait2+1
   928                           
   929                           ;main.c: 71:                 wait2 = 1;
   930     0768  2FE2               	goto	l1020
   931     0769                     l1000:
   932     0769  3002               	movlw	2
   933     076A  0636               	xorwf	main@opt,w
   934     076B  1D03               	btfss	3,2
   935     076C  2F6E               	goto	u721
   936     076D  2F6F               	goto	u720
   937     076E                     u721:
   938     076E  2FDB               	goto	l1016
   939     076F                     u720:
   940     076F                     l1002:
   941                           
   942                           ;main.c: 72:             };main.c: 73:         }
   943     076F  3003               	movlw	3
   944     0770  0238               	subwf	main@count,w
   945     0771  1803               	skipnc
   946     0772  2F74               	goto	u731
   947     0773  2F75               	goto	u730
   948     0774                     u731:
   949     0774  2F78               	goto	l1006
   950     0775                     u730:
   951     0775                     l1004:
   952                           
   953                           ;main.c: 74:         display(ssd);
   954     0775  0838               	movf	main@count,w
   955     0776  3C10               	sublw	16
   956     0777  00B8               	movwf	main@count
   957     0778                     l1006:
   958                           
   959                           ;main.c: 75: 
   960     0778  300C               	movlw	12
   961     0779  00F0               	movwf	___awmod@divisor
   962     077A  3000               	movlw	0
   963     077B  00F1               	movwf	___awmod@divisor+1
   964     077C  0838               	movf	main@count,w
   965     077D  00FA               	movwf	??_main
   966     077E  01FB               	clrf	??_main+1
   967     077F  087A               	movf	??_main,w
   968     0780  00F2               	movwf	___awmod@dividend
   969     0781  087B               	movf	??_main+1,w
   970     0782  00F3               	movwf	___awmod@dividend+1
   971     0783  120A  118A  2615  120A  118A  	fcall	___awmod
   972     0788  0870               	movf	?___awmod,w
   973     0789  3E20               	addlw	(low (main@digit| 0))& (0+255)
   974     078A  0084               	movwf	4
   975     078B  1383               	bcf	3,7	;select IRP bank0
   976     078C  0800               	movf	0,w
   977     078D  1283               	bcf	3,5	;RP0=0, select bank0
   978     078E  1303               	bcf	3,6	;RP1=0, select bank0
   979     078F  00B5               	movwf	main@ssd+3
   980     0790                     l1008:
   981                           
   982                           ;main.c: 76:     }
   983     0790  300C               	movlw	12
   984     0791  00F0               	movwf	___awmod@divisor
   985     0792  3000               	movlw	0
   986     0793  00F1               	movwf	___awmod@divisor+1
   987     0794  0838               	movf	main@count,w
   988     0795  3EFF               	addlw	255
   989     0796  00F2               	movwf	___awmod@dividend
   990     0797  30FF               	movlw	255
   991     0798  1803               	skipnc
   992     0799  3000               	movlw	0
   993     079A  00F3               	movwf	___awmod@dividend+1
   994     079B  120A  118A  2615  120A  118A  	fcall	___awmod
   995     07A0  0870               	movf	?___awmod,w
   996     07A1  3E20               	addlw	(low (main@digit| 0))& (0+255)
   997     07A2  0084               	movwf	4
   998     07A3  1383               	bcf	3,7	;select IRP bank0
   999     07A4  0800               	movf	0,w
  1000     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1001     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1002     07A7  00B4               	movwf	main@ssd+2
  1003     07A8                     l1010:
  1004                           
  1005                           ;main.c: 77: 
  1006     07A8  300C               	movlw	12
  1007     07A9  00F0               	movwf	___awmod@divisor
  1008     07AA  3000               	movlw	0
  1009     07AB  00F1               	movwf	___awmod@divisor+1
  1010     07AC  0838               	movf	main@count,w
  1011     07AD  3EFE               	addlw	254
  1012     07AE  00F2               	movwf	___awmod@dividend
  1013     07AF  30FF               	movlw	255
  1014     07B0  1803               	skipnc
  1015     07B1  3000               	movlw	0
  1016     07B2  00F3               	movwf	___awmod@dividend+1
  1017     07B3  120A  118A  2615  120A  118A  	fcall	___awmod
  1018     07B8  0870               	movf	?___awmod,w
  1019     07B9  3E20               	addlw	(low (main@digit| 0))& (0+255)
  1020     07BA  0084               	movwf	4
  1021     07BB  1383               	bcf	3,7	;select IRP bank0
  1022     07BC  0800               	movf	0,w
  1023     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1024     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1025     07BF  00B3               	movwf	main@ssd+1
  1026     07C0                     l1012:
  1027                           
  1028                           ;main.c: 78:     return;
  1029     07C0  300C               	movlw	12
  1030     07C1  00F0               	movwf	___awmod@divisor
  1031     07C2  3000               	movlw	0
  1032     07C3  00F1               	movwf	___awmod@divisor+1
  1033     07C4  0838               	movf	main@count,w
  1034     07C5  3EFD               	addlw	253
  1035     07C6  00F2               	movwf	___awmod@dividend
  1036     07C7  30FF               	movlw	255
  1037     07C8  1803               	skipnc
  1038     07C9  3000               	movlw	0
  1039     07CA  00F3               	movwf	___awmod@dividend+1
  1040     07CB  120A  118A  2615  120A  118A  	fcall	___awmod
  1041     07D0  0870               	movf	?___awmod,w
  1042     07D1  3E20               	addlw	(low (main@digit| 0))& (0+255)
  1043     07D2  0084               	movwf	4
  1044     07D3  1383               	bcf	3,7	;select IRP bank0
  1045     07D4  0800               	movf	0,w
  1046     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1047     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1048     07D7  00B2               	movwf	main@ssd
  1049     07D8  3001               	movlw	1
  1050     07D9  02B8               	subwf	main@count,f
  1051     07DA  2F64               	goto	l998
  1052     07DB                     l1016:
  1053     07DB  3003               	movlw	3
  1054     07DC  0636               	xorwf	main@opt,w
  1055     07DD  1D03               	btfss	3,2
  1056     07DE  2FE0               	goto	u741
  1057     07DF  2FE1               	goto	u740
  1058     07E0                     u741:
  1059     07E0  2FE2               	goto	l60
  1060     07E1                     u740:
  1061     07E1  2F64               	goto	l998
  1062     07E2                     l60:
  1063     07E2                     l1020:
  1064     07E2  3032               	movlw	(low (main@ssd| 0))& (0+255)
  1065     07E3  00F0               	movwf	display@data
  1066     07E4  120A  118A  25C2  120A  118A  	fcall	_display
  1067     07E9  2E9C               	goto	l948
  1068     07EA  120A  118A  2800   	ljmp	start
  1069     07ED                     __end_of_main:
  1070                           
  1071                           	psect	text1
  1072     0582                     __ptext1:	
  1073 ;; *************** function _key_press *****************
  1074 ;; Defined at:
  1075 ;;		line 14 in file "digital_keypad.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      unsigned char 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102     0582                     _key_press:	
  1103                           ;psect for function _key_press
  1104                           
  1105     0582                     l834:	
  1106                           ;incstack = 0
  1107                           ; Regs used in _key_press: [wreg+status,2+status,0]
  1108                           
  1109                           
  1110                           ;digital_keypad.c: 15:     static unsigned char left = 1, right = 1, stop = 1, start = 1
      +                          ;;digital_keypad.c: 17:     if (((PORTB & 0x01) == 0) && (left == 1) && (start == 1))
  1111     0582  1283               	bcf	3,5	;RP0=0, select bank0
  1112     0583  1303               	bcf	3,6	;RP1=0, select bank0
  1113     0584  1806               	btfsc	6,0	;volatile
  1114     0585  2D87               	goto	u381
  1115     0586  2D88               	goto	u380
  1116     0587                     u381:
  1117     0587  2D95               	goto	l18
  1118     0588                     u380:
  1119     0588                     l836:
  1120     0588  034C               	decf	key_press@left,w
  1121     0589  1D03               	btfss	3,2
  1122     058A  2D8C               	goto	u391
  1123     058B  2D8D               	goto	u390
  1124     058C                     u391:
  1125     058C  2D95               	goto	l18
  1126     058D                     u390:
  1127     058D                     l838:
  1128     058D  0349               	decf	key_press@start,w
  1129     058E  1D03               	btfss	3,2
  1130     058F  2D91               	goto	u401
  1131     0590  2D92               	goto	u400
  1132     0591                     u401:
  1133     0591  2D95               	goto	l18
  1134     0592                     u400:
  1135     0592                     l840:
  1136                           
  1137                           ;digital_keypad.c: 18:     {;digital_keypad.c: 19:         left = 0;
  1138     0592  01CC               	clrf	key_press@left
  1139     0593                     l842:
  1140                           
  1141                           ;digital_keypad.c: 20:         return 1;
  1142     0593  3001               	movlw	1
  1143     0594  2DC1               	goto	l19
  1144     0595                     l18:
  1145     0595  1886               	btfsc	6,1	;volatile
  1146     0596  2D98               	goto	u411
  1147     0597  2D99               	goto	u410
  1148     0598                     u411:
  1149     0598  2DA6               	goto	l21
  1150     0599                     u410:
  1151     0599                     l848:
  1152     0599  034B               	decf	key_press@right,w
  1153     059A  1D03               	btfss	3,2
  1154     059B  2D9D               	goto	u421
  1155     059C  2D9E               	goto	u420
  1156     059D                     u421:
  1157     059D  2DA6               	goto	l21
  1158     059E                     u420:
  1159     059E                     l850:
  1160     059E  0349               	decf	key_press@start,w
  1161     059F  1D03               	btfss	3,2
  1162     05A0  2DA2               	goto	u431
  1163     05A1  2DA3               	goto	u430
  1164     05A2                     u431:
  1165     05A2  2DA6               	goto	l21
  1166     05A3                     u430:
  1167     05A3                     l852:
  1168                           
  1169                           ;digital_keypad.c: 22:     {;digital_keypad.c: 23:         right = 0;
  1170     05A3  01CB               	clrf	key_press@right
  1171     05A4                     l854:
  1172                           
  1173                           ;digital_keypad.c: 24:         return 2;
  1174     05A4  3002               	movlw	2
  1175     05A5  2DC1               	goto	l19
  1176     05A6                     l21:
  1177     05A6  1906               	btfsc	6,2	;volatile
  1178     05A7  2DA9               	goto	u441
  1179     05A8  2DAA               	goto	u440
  1180     05A9                     u441:
  1181     05A9  2DBA               	goto	l23
  1182     05AA                     u440:
  1183     05AA                     l860:
  1184     05AA  034A               	decf	key_press@stop,w
  1185     05AB  1D03               	btfss	3,2
  1186     05AC  2DAE               	goto	u451
  1187     05AD  2DAF               	goto	u450
  1188     05AE                     u451:
  1189     05AE  2DBA               	goto	l23
  1190     05AF                     u450:
  1191     05AF                     l862:
  1192                           
  1193                           ;digital_keypad.c: 26:     {;digital_keypad.c: 27:         stop = 0;
  1194     05AF  01CA               	clrf	key_press@stop
  1195     05B0                     l864:
  1196                           
  1197                           ;digital_keypad.c: 28:         start = !start;
  1198     05B0  0849               	movf	key_press@start,w
  1199     05B1  1903               	btfsc	3,2
  1200     05B2  2DB4               	goto	u461
  1201     05B3  2DB6               	goto	u460
  1202     05B4                     u461:
  1203     05B4  3001               	movlw	1
  1204     05B5  2DB7               	goto	u470
  1205     05B6                     u460:
  1206     05B6  3000               	movlw	0
  1207     05B7                     u470:
  1208     05B7  00C9               	movwf	key_press@start
  1209     05B8                     l866:
  1210                           
  1211                           ;digital_keypad.c: 29:         return 3;
  1212     05B8  3003               	movlw	3
  1213     05B9  2DC1               	goto	l19
  1214     05BA                     l23:
  1215                           
  1216                           ;digital_keypad.c: 31:         left = 1;
  1217     05BA  3001               	movlw	1
  1218     05BB  00CC               	movwf	key_press@left
  1219                           
  1220                           ;digital_keypad.c: 32:         right = 1;
  1221     05BC  3001               	movlw	1
  1222     05BD  00CB               	movwf	key_press@right
  1223                           
  1224                           ;digital_keypad.c: 33:         stop = 1;
  1225     05BE  3001               	movlw	1
  1226     05BF  00CA               	movwf	key_press@stop
  1227     05C0                     l872:
  1228                           
  1229                           ;digital_keypad.c: 34:         return 0;
  1230     05C0  3000               	movlw	0
  1231     05C1                     l19:
  1232     05C1  0008               	return
  1233     05C2                     __end_of_key_press:
  1234                           
  1235                           	psect	text2
  1236     0544                     __ptext2:	
  1237 ;; *************** function _init_config *****************
  1238 ;; Defined at:
  1239 ;;		line 13 in file "main.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 1
  1260 ;; This function calls:
  1261 ;;		_init_digital_keypad
  1262 ;;		_init_ssd
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268     0544                     _init_config:	
  1269                           ;psect for function _init_config
  1270                           
  1271     0544                     l876:	
  1272                           ;incstack = 0
  1273                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1274                           
  1275                           
  1276                           ;main.c: 14:     while (1) {
  1277     0544  120A  118A  253E  120A  118A  	fcall	_init_digital_keypad
  1278                           
  1279                           ;main.c: 15:         if (wait1++ == 100)
  1280     0549  120A  118A  254F  120A  118A  	fcall	_init_ssd
  1281     054E                     l35:
  1282     054E  0008               	return
  1283     054F                     __end_of_init_config:
  1284                           
  1285                           	psect	text3
  1286     054F                     __ptext3:	
  1287 ;; *************** function _init_ssd *****************
  1288 ;; Defined at:
  1289 ;;		line 8 in file "ssd.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0
  1306 ;;      Totals:         0       0       0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_init_config
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316     054F                     _init_ssd:	
  1317                           ;psect for function _init_ssd
  1318                           
  1319     054F                     l828:	
  1320                           ;incstack = 0
  1321                           ; Regs used in _init_ssd: [wreg+status,2]
  1322                           
  1323                           
  1324                           ;ssd.c: 11:     TRISD = 0x00;
  1325     054F  1683               	bsf	3,5	;RP0=1, select bank1
  1326     0550  1303               	bcf	3,6	;RP1=0, select bank1
  1327     0551  0188               	clrf	8	;volatile
  1328     0552                     l830:
  1329                           
  1330                           ;ssd.c: 14:     TRISA = TRISA & 0xC3;
  1331     0552  0805               	movf	5,w	;volatile
  1332     0553  39C3               	andlw	195
  1333     0554  0085               	movwf	5	;volatile
  1334     0555                     l832:
  1335                           
  1336                           ;ssd.c: 16:     PORTA = PORTA & 0x03;
  1337     0555  1283               	bcf	3,5	;RP0=0, select bank0
  1338     0556  1303               	bcf	3,6	;RP1=0, select bank0
  1339     0557  0805               	movf	5,w	;volatile
  1340     0558  3903               	andlw	3
  1341     0559  0085               	movwf	5	;volatile
  1342     055A                     l78:
  1343     055A  0008               	return
  1344     055B                     __end_of_init_ssd:
  1345                           
  1346                           	psect	text4
  1347     053E                     __ptext4:	
  1348 ;; *************** function _init_digital_keypad *****************
  1349 ;; Defined at:
  1350 ;;		line 9 in file "digital_keypad.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0
  1367 ;;      Totals:         0       0       0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_init_config
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     053E                     _init_digital_keypad:	
  1378                           ;psect for function _init_digital_keypad
  1379                           
  1380     053E                     l826:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1383                           
  1384                           
  1385                           ;digital_keypad.c: 11:     TRISB = TRISB | 0x3F;
  1386     053E  1683               	bsf	3,5	;RP0=1, select bank1
  1387     053F  1303               	bcf	3,6	;RP1=0, select bank1
  1388     0540  0806               	movf	6,w	;volatile
  1389     0541  383F               	iorlw	63
  1390     0542  0086               	movwf	6	;volatile
  1391     0543                     l7:
  1392     0543  0008               	return
  1393     0544                     __end_of_init_digital_keypad:
  1394                           
  1395                           	psect	text5
  1396     05C2                     __ptext5:	
  1397 ;; *************** function _display *****************
  1398 ;; Defined at:
  1399 ;;		line 19 in file "ssd.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  data            1    0[COMMON] PTR unsigned char 
  1402 ;;		 -> main@ssd(4), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  wait            4    5[COMMON] unsigned long 
  1405 ;;  digit           1    9[COMMON] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         1       0       0       0       0
  1416 ;;      Locals:         5       0       0       0       0
  1417 ;;      Temps:          4       0       0       0       0
  1418 ;;      Totals:        10       0       0       0       0
  1419 ;;Total ram usage:       10 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428     05C2                     _display:	
  1429                           ;psect for function _display
  1430                           
  1431     05C2                     l878:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1434                           
  1435                           
  1436                           ;ssd.c: 19: void display(unsigned char data[]);ssd.c: 20: {;ssd.c: 21:     unsigned char
      +                           digit;;ssd.c: 23:     for (digit = 0; digit < 4; digit++)
  1437     05C2  01F9               	clrf	display@digit
  1438     05C3                     l884:
  1439                           
  1440                           ;ssd.c: 24:     {;ssd.c: 25:         PORTD = data[digit];
  1441     05C3  0879               	movf	display@digit,w
  1442     05C4  0770               	addwf	display@data,w
  1443     05C5  00F1               	movwf	??_display
  1444     05C6  0871               	movf	??_display,w
  1445     05C7  0084               	movwf	4
  1446     05C8  1383               	bcf	3,7	;select IRP bank0
  1447     05C9  0800               	movf	0,w
  1448     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1449     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1450     05CC  0088               	movwf	8	;volatile
  1451     05CD                     l886:
  1452                           
  1453                           ;ssd.c: 26:         PORTA = (PORTA & 0x03) | (0x04 << digit);
  1454     05CD  3004               	movlw	4
  1455     05CE  00F1               	movwf	??_display
  1456     05CF  0A79               	incf	display@digit,w
  1457     05D0  2DD3               	goto	u484
  1458     05D1                     u485:
  1459     05D1  1003               	clrc
  1460     05D2  0DF1               	rlf	??_display,f
  1461     05D3                     u484:
  1462     05D3  3EFF               	addlw	-1
  1463     05D4  1D03               	skipz
  1464     05D5  2DD1               	goto	u485
  1465     05D6  0805               	movf	5,w	;volatile
  1466     05D7  3903               	andlw	3
  1467     05D8  0471               	iorwf	??_display,w
  1468     05D9  0085               	movwf	5	;volatile
  1469     05DA                     l888:
  1470                           
  1471                           ;ssd.c: 28:        for (unsigned long int wait = 400; wait--; );
  1472     05DA  3000               	movlw	0
  1473     05DB  00F8               	movwf	display@wait+3
  1474     05DC  3000               	movlw	0
  1475     05DD  00F7               	movwf	display@wait+2
  1476     05DE  3001               	movlw	1
  1477     05DF  00F6               	movwf	display@wait+1
  1478     05E0  3090               	movlw	144
  1479     05E1  00F5               	movwf	display@wait
  1480     05E2                     l890:
  1481     05E2  3001               	movlw	1
  1482     05E3  00F1               	movwf	??_display
  1483     05E4  3000               	movlw	0
  1484     05E5  00F2               	movwf	??_display+1
  1485     05E6  3000               	movlw	0
  1486     05E7  00F3               	movwf	??_display+2
  1487     05E8  3000               	movlw	0
  1488     05E9  00F4               	movwf	??_display+3
  1489     05EA  0871               	movf	??_display,w
  1490     05EB  02F5               	subwf	display@wait,f
  1491     05EC  0872               	movf	??_display+1,w
  1492     05ED  1C03               	skipc
  1493     05EE  0F72               	incfsz	??_display+1,w
  1494     05EF  2DF1               	goto	u495
  1495     05F0  2DF2               	goto	u496
  1496     05F1                     u495:
  1497     05F1  02F6               	subwf	display@wait+1,f
  1498     05F2                     u496:
  1499     05F2  0873               	movf	??_display+2,w
  1500     05F3  1C03               	skipc
  1501     05F4  0F73               	incfsz	??_display+2,w
  1502     05F5  2DF7               	goto	u497
  1503     05F6  2DF8               	goto	u498
  1504     05F7                     u497:
  1505     05F7  02F7               	subwf	display@wait+2,f
  1506     05F8                     u498:
  1507     05F8  0874               	movf	??_display+3,w
  1508     05F9  1C03               	skipc
  1509     05FA  0F74               	incfsz	??_display+3,w
  1510     05FB  2DFD               	goto	u499
  1511     05FC  2DFE               	goto	u490
  1512     05FD                     u499:
  1513     05FD  02F8               	subwf	display@wait+3,f
  1514     05FE                     u490:
  1515     05FE  0A75               	incf	display@wait,w
  1516     05FF  1D03               	skipz
  1517     0600  2E0B               	goto	u501
  1518     0601  0A76               	incf	display@wait+1,w
  1519     0602  1D03               	skipz
  1520     0603  2E0B               	goto	u501
  1521     0604  0A77               	incf	display@wait+2,w
  1522     0605  1D03               	skipz
  1523     0606  2E0B               	goto	u501
  1524     0607  0A78               	incf	display@wait+3,w
  1525     0608  1D03               	btfss	3,2
  1526     0609  2E0B               	goto	u501
  1527     060A  2E0C               	goto	u500
  1528     060B                     u501:
  1529     060B  2DE2               	goto	l890
  1530     060C                     u500:
  1531     060C                     l892:
  1532                           
  1533                           ;ssd.c: 29:     }
  1534     060C  3001               	movlw	1
  1535     060D  07F9               	addwf	display@digit,f
  1536     060E                     l894:
  1537     060E  3004               	movlw	4
  1538     060F  0279               	subwf	display@digit,w
  1539     0610  1C03               	skipc
  1540     0611  2E13               	goto	u511
  1541     0612  2E14               	goto	u510
  1542     0613                     u511:
  1543     0613  2DC3               	goto	l884
  1544     0614                     u510:
  1545     0614                     l86:
  1546     0614  0008               	return
  1547     0615                     __end_of_display:
  1548                           
  1549                           	psect	text6
  1550     0615                     __ptext6:	
  1551 ;; *************** function ___awmod *****************
  1552 ;; Defined at:
  1553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  divisor         2    0[COMMON] int 
  1556 ;;  dividend        2    2[COMMON] int 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  sign            1    5[COMMON] unsigned char 
  1559 ;;  counter         1    4[COMMON] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2    0[COMMON] int 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         4       0       0       0       0
  1570 ;;      Locals:         2       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0
  1572 ;;      Totals:         6       0       0       0       0
  1573 ;;Total ram usage:        6 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582     0615                     ___awmod:	
  1583                           ;psect for function ___awmod
  1584                           
  1585     0615                     l896:	
  1586                           ;incstack = 0
  1587                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1588                           
  1589     0615  01F5               	clrf	___awmod@sign
  1590     0616                     l898:
  1591     0616  1FF3               	btfss	___awmod@dividend+1,7
  1592     0617  2E19               	goto	u521
  1593     0618  2E1A               	goto	u520
  1594     0619                     u521:
  1595     0619  2E21               	goto	l904
  1596     061A                     u520:
  1597     061A                     l900:
  1598     061A  09F2               	comf	___awmod@dividend,f
  1599     061B  09F3               	comf	___awmod@dividend+1,f
  1600     061C  0AF2               	incf	___awmod@dividend,f
  1601     061D  1903               	skipnz
  1602     061E  0AF3               	incf	___awmod@dividend+1,f
  1603     061F                     l902:
  1604     061F  3001               	movlw	1
  1605     0620  00F5               	movwf	___awmod@sign
  1606     0621                     l904:
  1607     0621  1FF1               	btfss	___awmod@divisor+1,7
  1608     0622  2E24               	goto	u531
  1609     0623  2E25               	goto	u530
  1610     0624                     u531:
  1611     0624  2E2A               	goto	l908
  1612     0625                     u530:
  1613     0625                     l906:
  1614     0625  09F0               	comf	___awmod@divisor,f
  1615     0626  09F1               	comf	___awmod@divisor+1,f
  1616     0627  0AF0               	incf	___awmod@divisor,f
  1617     0628  1903               	skipnz
  1618     0629  0AF1               	incf	___awmod@divisor+1,f
  1619     062A                     l908:
  1620     062A  0870               	movf	___awmod@divisor,w
  1621     062B  0471               	iorwf	___awmod@divisor+1,w
  1622     062C  1903               	btfsc	3,2
  1623     062D  2E2F               	goto	u541
  1624     062E  2E30               	goto	u540
  1625     062F                     u541:
  1626     062F  2E5D               	goto	l926
  1627     0630                     u540:
  1628     0630                     l910:
  1629     0630  3001               	movlw	1
  1630     0631  00F4               	movwf	___awmod@counter
  1631     0632  2E3C               	goto	l916
  1632     0633                     l912:
  1633     0633  3001               	movlw	1
  1634     0634                     u555:
  1635     0634  1003               	clrc
  1636     0635  0DF0               	rlf	___awmod@divisor,f
  1637     0636  0DF1               	rlf	___awmod@divisor+1,f
  1638     0637  3EFF               	addlw	-1
  1639     0638  1D03               	skipz
  1640     0639  2E34               	goto	u555
  1641     063A                     l914:
  1642     063A  3001               	movlw	1
  1643     063B  07F4               	addwf	___awmod@counter,f
  1644     063C                     l916:
  1645     063C  1FF1               	btfss	___awmod@divisor+1,7
  1646     063D  2E3F               	goto	u561
  1647     063E  2E40               	goto	u560
  1648     063F                     u561:
  1649     063F  2E33               	goto	l912
  1650     0640                     u560:
  1651     0640                     l918:
  1652     0640  0871               	movf	___awmod@divisor+1,w
  1653     0641  0273               	subwf	___awmod@dividend+1,w
  1654     0642  1D03               	skipz
  1655     0643  2E46               	goto	u575
  1656     0644  0870               	movf	___awmod@divisor,w
  1657     0645  0272               	subwf	___awmod@dividend,w
  1658     0646                     u575:
  1659     0646  1C03               	skipc
  1660     0647  2E49               	goto	u571
  1661     0648  2E4A               	goto	u570
  1662     0649                     u571:
  1663     0649  2E50               	goto	l922
  1664     064A                     u570:
  1665     064A                     l920:
  1666     064A  0870               	movf	___awmod@divisor,w
  1667     064B  02F2               	subwf	___awmod@dividend,f
  1668     064C  0871               	movf	___awmod@divisor+1,w
  1669     064D  1C03               	skipc
  1670     064E  03F3               	decf	___awmod@dividend+1,f
  1671     064F  02F3               	subwf	___awmod@dividend+1,f
  1672     0650                     l922:
  1673     0650  3001               	movlw	1
  1674     0651                     u585:
  1675     0651  1003               	clrc
  1676     0652  0CF1               	rrf	___awmod@divisor+1,f
  1677     0653  0CF0               	rrf	___awmod@divisor,f
  1678     0654  3EFF               	addlw	-1
  1679     0655  1D03               	skipz
  1680     0656  2E51               	goto	u585
  1681     0657                     l924:
  1682     0657  3001               	movlw	1
  1683     0658  02F4               	subwf	___awmod@counter,f
  1684     0659  1D03               	btfss	3,2
  1685     065A  2E5C               	goto	u591
  1686     065B  2E5D               	goto	u590
  1687     065C                     u591:
  1688     065C  2E40               	goto	l918
  1689     065D                     u590:
  1690     065D                     l926:
  1691     065D  0875               	movf	___awmod@sign,w
  1692     065E  1903               	btfsc	3,2
  1693     065F  2E61               	goto	u601
  1694     0660  2E62               	goto	u600
  1695     0661                     u601:
  1696     0661  2E67               	goto	l930
  1697     0662                     u600:
  1698     0662                     l928:
  1699     0662  09F2               	comf	___awmod@dividend,f
  1700     0663  09F3               	comf	___awmod@dividend+1,f
  1701     0664  0AF2               	incf	___awmod@dividend,f
  1702     0665  1903               	skipnz
  1703     0666  0AF3               	incf	___awmod@dividend+1,f
  1704     0667                     l930:
  1705     0667  0873               	movf	___awmod@dividend+1,w
  1706     0668  00F1               	movwf	?___awmod+1
  1707     0669  0872               	movf	___awmod@dividend,w
  1708     066A  00F0               	movwf	?___awmod
  1709     066B                     l338:
  1710     066B  0008               	return
  1711     066C                     __end_of___awmod:
  1712     0002                     ___latbits      equ	2
  1713     007E                     btemp           set	126	;btemp
  1714     007E                     wtemp0          set	126
  1715                           
  1716                           	psect	config
  1717                           
  1718                           ;Config register CONFIG @ 0x2007
  1719                           ;	Oscillator Selection bits
  1720                           ;	FOSC = 0x3, unprogrammed default
  1721                           ;	Watchdog Timer Enable bit
  1722                           ;	WDTE = OFF, WDT disabled
  1723                           ;	Power-up Timer Enable bit
  1724                           ;	PWRTE = 0x1, unprogrammed default
  1725                           ;	Brown-out Reset Enable bit
  1726                           ;	BOREN = 0x1, unprogrammed default
  1727                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1728                           ;	LVP = 0x1, unprogrammed default
  1729                           ;	Data EEPROM Memory Code Protection bit
  1730                           ;	CPD = 0x1, unprogrammed default
  1731                           ;	Flash Program Memory Write Enable bits
  1732                           ;	WRT = 0x3, unprogrammed default
  1733                           ;	In-Circuit Debugger Mode bit
  1734                           ;	DEBUG = 0x1, unprogrammed default
  1735                           ;	Flash Program Memory Code Protection bit
  1736                           ;	CP = 0x1, unprogrammed default
  1737     2007                     	org	8199
  1738     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    1419
                                             10 COMMON     4     4      0
                                              0 BANK0     25    25      0
                            ___awmod
                            _display
                        _init_config
                          _key_press
 ---------------------------------------------------------------------------------
 (1) _key_press                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10     9      1     136
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     312
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _display
   _init_config
     _init_digital_keypad
     _init_ssd
   _key_press

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     25      46     57.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      60      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Dec 25 20:13:49 2024

                          l7 0543                            pc 0002                           l21 05A6  
                         l23 05BA                           l18 0595                           l35 054E  
                         l19 05C1                           l60 07E2                           l86 0614  
                         l78 055A                           fsr 0004                          l338 066B  
                        l900 061A                          l910 0630                          l902 061F  
                        l830 0552                          l920 064A                          l912 0633  
                        l904 0621                          l832 0555                          l840 0592  
                        l930 0667                          l922 0650                          l914 063A  
                        l906 0625                          l826 053E                          l850 059E  
                        l842 0593                          l834 0582                          l924 0657  
                        l916 063C                          l908 062A                          l828 054F  
                        l860 05AA                          l852 05A3                          l836 0588  
                        l940 0676                          l918 0640                          l926 065D  
                        l862 05AF                          l854 05A4                          l838 058D  
                        l950 06AB                          l942 067A                          l934 066C  
                        l928 0662                          l872 05C0                          l864 05B0  
                        l848 0599                          l960 06CA                          l952 06B3  
                        l944 0682                          l936 066F                          l890 05E2  
                        l866 05B8                          l970 06D9                          l962 06CD  
                        l954 06B8                          l946 0697                          l938 0672  
                        l892 060C                          l884 05C3                          l876 0544  
                        l972 06DD                          l964 06CF                          l956 06BE  
                        l980 06E9                          l948 069C                          l894 060E  
                        l886 05CD                          l878 05C2                          l990 071A  
                        l982 06F6                          l974 06E2                          l958 06C4  
                        l966 06D1                          l896 0615                          l888 05DA  
                        l992 0732                          l984 06FB                          l976 06E3  
                        l968 06D7                          l898 0616                          l994 074A  
                        l986 0701                          l978 06E5                          l996 0762  
                        l988 0702                          l998 0764                          u400 0592  
                        u401 0591                          u410 0599                          u411 0598  
                        u500 060C                          u420 059E                          u501 060B  
                        u421 059D                          u510 0614                          u430 05A3  
                        u511 0613                          u431 05A2                          u600 0662  
                        u520 061A                          u440 05AA                          u601 0661  
                        u521 0619                          u441 05A9                          u530 0625  
                        u450 05AF                          u610 0688                          u531 0624  
                        u451 05AE                          u540 0630                          u460 05B6  
                        u380 0588                          u700 06FB                          u620 06AB  
                        u541 062F                          u461 05B4                          u381 0587  
                        u701 06FA                          u621 06AA                          u470 05B7  
                        u390 058D                          u710 0701                          u630 06B8  
                        u391 058C                          u711 0700                          u631 06B7  
                        u560 0640                          u720 076F                          u640 06BE  
                        u561 063F                          u721 076E                          u641 06BD  
                        u570 064A                          u490 05FE                          u730 0775  
                        u650 06C4                          u571 0649                          u555 0634  
                        u731 0774                          u651 06C3                          u484 05D3  
                        u740 07E1                          u660 06CA                          u485 05D1  
                        u741 07E0                          u661 06C9                          u590 065D  
                        u670 06D7                          u591 065C                          u575 0646  
                        u495 05F1                          u671 06D6                          u496 05F2  
                        u680 06DD                          u585 0651                          u497 05F7  
                        u681 06DC                          u498 05F8                          u690 06F6  
                        u499 05FD                          u691 06F5                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0075                         l1000 0769  
                       l1010 07A8                         l1002 076F                         l1012 07C0  
                       l1004 0775                         l1020 07E2                         l1006 0778  
                       l1008 0790                         l1016 07DB                  display@data 0070  
                display@wait 0075                         _main 066C                         btemp 007E  
                       start 0000                        ?_main 0070              __end_of___awmod 066C  
               ?_init_config 0070                        _PORTA 0005                        _PORTB 0006  
                      _PORTD 0008                        _TRISA 0085                        _TRISB 0086  
                      _TRISD 0088                 display@digit 0079              __end_of_display 0615  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 07ED                 __end_of_main 07ED                       ??_main 007A  
__end_of_init_digital_keypad 0544                    ??___awmod 0074             __end_of_init_ssd 055B  
            ___awmod@divisor 0070              ___awmod@counter 0074                    ??_display 0071  
    __end_of__initialization 07FC               __pcstackCOMMON 0070                 __pidataBANK0 056E  
                 __pbssBANK0 004D               main@flag_count 0031                   __pmaintext 066C  
                  ?_init_ssd 0070                      ___awmod 0615                      __ptext1 0582  
                    __ptext2 0544                      __ptext3 054F                      __ptext4 053E  
                    __ptext5 05C2                      __ptext6 0615                      _display 05C2  
          __end_of_key_press 05C2             ___awmod@dividend 0072                      main@key 004D  
                    main@opt 0036                      main@ssd 0032         end_of_initialization 07FC  
                 ??_init_ssd 0070          start_initialization 07ED                   init_fetch0 055B  
                __pdataBANK0 0039                ??_init_config 0070                    ___latbits 0002  
              __pcstackBANK0 0020                     ?___awmod 0070                     ?_display 0070  
        __end_of_init_config 054F                    _key_press 0582                    main@digit 0020  
                  main@count 0038                    main@wait1 002C                    main@wait2 002F  
                 ?_key_press 0070          _init_digital_keypad 053E               key_press@right 004B  
       ?_init_digital_keypad 0070               key_press@start 0049                  _init_config 0544  
                   _init_ssd 054F                     main@F995 0045                     main@F997 0039  
      ??_init_digital_keypad 0070                     main@flag 0037                     main@prev 002E  
                   init_ram0 055F                key_press@left 004C                  ??_key_press 0070  
              key_press@stop 004A  
