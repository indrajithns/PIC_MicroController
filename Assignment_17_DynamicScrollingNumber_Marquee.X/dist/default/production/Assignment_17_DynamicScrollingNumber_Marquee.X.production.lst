

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Dec 25 20:21:12 2024

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0004                     fsr             equ	4
    66     0004                     fsr0            equ	4
    67     0000                     indf            equ	0
    68     0000                     indf0           equ	0
    69     0002                     pc              equ	2
    70     0002                     pcl             equ	2
    71     000A                     pclath          equ	10
    72     0003                     status          equ	3
    73     0000                     INDF            equ	0	;# 
    74     0001                     TMR0            equ	1	;# 
    75     0002                     PCL             equ	2	;# 
    76     0003                     STATUS          equ	3	;# 
    77     0004                     FSR             equ	4	;# 
    78     0005                     PORTA           equ	5	;# 
    79     0006                     PORTB           equ	6	;# 
    80     0007                     PORTC           equ	7	;# 
    81     0008                     PORTD           equ	8	;# 
    82     0009                     PORTE           equ	9	;# 
    83     000A                     PCLATH          equ	10	;# 
    84     000B                     INTCON          equ	11	;# 
    85     000C                     PIR1            equ	12	;# 
    86     000D                     PIR2            equ	13	;# 
    87     000E                     TMR1            equ	14	;# 
    88     000E                     TMR1L           equ	14	;# 
    89     000F                     TMR1H           equ	15	;# 
    90     0010                     T1CON           equ	16	;# 
    91     0011                     TMR2            equ	17	;# 
    92     0012                     T2CON           equ	18	;# 
    93     0013                     SSPBUF          equ	19	;# 
    94     0014                     SSPCON          equ	20	;# 
    95     0015                     CCPR1           equ	21	;# 
    96     0015                     CCPR1L          equ	21	;# 
    97     0016                     CCPR1H          equ	22	;# 
    98     0017                     CCP1CON         equ	23	;# 
    99     0018                     RCSTA           equ	24	;# 
   100     0019                     TXREG           equ	25	;# 
   101     001A                     RCREG           equ	26	;# 
   102     001B                     CCPR2           equ	27	;# 
   103     001B                     CCPR2L          equ	27	;# 
   104     001C                     CCPR2H          equ	28	;# 
   105     001D                     CCP2CON         equ	29	;# 
   106     001E                     ADRESH          equ	30	;# 
   107     001F                     ADCON0          equ	31	;# 
   108     0081                     OPTION_REG      equ	129	;# 
   109     0085                     TRISA           equ	133	;# 
   110     0086                     TRISB           equ	134	;# 
   111     0087                     TRISC           equ	135	;# 
   112     0088                     TRISD           equ	136	;# 
   113     0089                     TRISE           equ	137	;# 
   114     008C                     PIE1            equ	140	;# 
   115     008D                     PIE2            equ	141	;# 
   116     008E                     PCON            equ	142	;# 
   117     0091                     SSPCON2         equ	145	;# 
   118     0092                     PR2             equ	146	;# 
   119     0093                     SSPADD          equ	147	;# 
   120     0094                     SSPSTAT         equ	148	;# 
   121     0098                     TXSTA           equ	152	;# 
   122     0099                     SPBRG           equ	153	;# 
   123     009C                     CMCON           equ	156	;# 
   124     009D                     CVRCON          equ	157	;# 
   125     009E                     ADRESL          equ	158	;# 
   126     009F                     ADCON1          equ	159	;# 
   127     010C                     EEDATA          equ	268	;# 
   128     010D                     EEADR           equ	269	;# 
   129     010E                     EEDATH          equ	270	;# 
   130     010F                     EEADRH          equ	271	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     0008                     PORTD           equ	8	;# 
   142     0009                     PORTE           equ	9	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000D                     PIR2            equ	13	;# 
   147     000E                     TMR1            equ	14	;# 
   148     000E                     TMR1L           equ	14	;# 
   149     000F                     TMR1H           equ	15	;# 
   150     0010                     T1CON           equ	16	;# 
   151     0011                     TMR2            equ	17	;# 
   152     0012                     T2CON           equ	18	;# 
   153     0013                     SSPBUF          equ	19	;# 
   154     0014                     SSPCON          equ	20	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001B                     CCPR2           equ	27	;# 
   163     001B                     CCPR2L          equ	27	;# 
   164     001C                     CCPR2H          equ	28	;# 
   165     001D                     CCP2CON         equ	29	;# 
   166     001E                     ADRESH          equ	30	;# 
   167     001F                     ADCON0          equ	31	;# 
   168     0081                     OPTION_REG      equ	129	;# 
   169     0085                     TRISA           equ	133	;# 
   170     0086                     TRISB           equ	134	;# 
   171     0087                     TRISC           equ	135	;# 
   172     0088                     TRISD           equ	136	;# 
   173     0089                     TRISE           equ	137	;# 
   174     008C                     PIE1            equ	140	;# 
   175     008D                     PIE2            equ	141	;# 
   176     008E                     PCON            equ	142	;# 
   177     0091                     SSPCON2         equ	145	;# 
   178     0092                     PR2             equ	146	;# 
   179     0093                     SSPADD          equ	147	;# 
   180     0094                     SSPSTAT         equ	148	;# 
   181     0098                     TXSTA           equ	152	;# 
   182     0099                     SPBRG           equ	153	;# 
   183     009C                     CMCON           equ	156	;# 
   184     009D                     CVRCON          equ	157	;# 
   185     009E                     ADRESL          equ	158	;# 
   186     009F                     ADCON1          equ	159	;# 
   187     010C                     EEDATA          equ	268	;# 
   188     010D                     EEADR           equ	269	;# 
   189     010E                     EEDATH          equ	270	;# 
   190     010F                     EEADRH          equ	271	;# 
   191     018C                     EECON1          equ	396	;# 
   192     018D                     EECON2          equ	397	;# 
   193     0000                     INDF            equ	0	;# 
   194     0001                     TMR0            equ	1	;# 
   195     0002                     PCL             equ	2	;# 
   196     0003                     STATUS          equ	3	;# 
   197     0004                     FSR             equ	4	;# 
   198     0005                     PORTA           equ	5	;# 
   199     0006                     PORTB           equ	6	;# 
   200     0007                     PORTC           equ	7	;# 
   201     0008                     PORTD           equ	8	;# 
   202     0009                     PORTE           equ	9	;# 
   203     000A                     PCLATH          equ	10	;# 
   204     000B                     INTCON          equ	11	;# 
   205     000C                     PIR1            equ	12	;# 
   206     000D                     PIR2            equ	13	;# 
   207     000E                     TMR1            equ	14	;# 
   208     000E                     TMR1L           equ	14	;# 
   209     000F                     TMR1H           equ	15	;# 
   210     0010                     T1CON           equ	16	;# 
   211     0011                     TMR2            equ	17	;# 
   212     0012                     T2CON           equ	18	;# 
   213     0013                     SSPBUF          equ	19	;# 
   214     0014                     SSPCON          equ	20	;# 
   215     0015                     CCPR1           equ	21	;# 
   216     0015                     CCPR1L          equ	21	;# 
   217     0016                     CCPR1H          equ	22	;# 
   218     0017                     CCP1CON         equ	23	;# 
   219     0018                     RCSTA           equ	24	;# 
   220     0019                     TXREG           equ	25	;# 
   221     001A                     RCREG           equ	26	;# 
   222     001B                     CCPR2           equ	27	;# 
   223     001B                     CCPR2L          equ	27	;# 
   224     001C                     CCPR2H          equ	28	;# 
   225     001D                     CCP2CON         equ	29	;# 
   226     001E                     ADRESH          equ	30	;# 
   227     001F                     ADCON0          equ	31	;# 
   228     0081                     OPTION_REG      equ	129	;# 
   229     0085                     TRISA           equ	133	;# 
   230     0086                     TRISB           equ	134	;# 
   231     0087                     TRISC           equ	135	;# 
   232     0088                     TRISD           equ	136	;# 
   233     0089                     TRISE           equ	137	;# 
   234     008C                     PIE1            equ	140	;# 
   235     008D                     PIE2            equ	141	;# 
   236     008E                     PCON            equ	142	;# 
   237     0091                     SSPCON2         equ	145	;# 
   238     0092                     PR2             equ	146	;# 
   239     0093                     SSPADD          equ	147	;# 
   240     0094                     SSPSTAT         equ	148	;# 
   241     0098                     TXSTA           equ	152	;# 
   242     0099                     SPBRG           equ	153	;# 
   243     009C                     CMCON           equ	156	;# 
   244     009D                     CVRCON          equ	157	;# 
   245     009E                     ADRESL          equ	158	;# 
   246     009F                     ADCON1          equ	159	;# 
   247     010C                     EEDATA          equ	268	;# 
   248     010D                     EEADR           equ	269	;# 
   249     010E                     EEDATH          equ	270	;# 
   250     010F                     EEADRH          equ	271	;# 
   251     018C                     EECON1          equ	396	;# 
   252     018D                     EECON2          equ	397	;# 
   253     0000                     INDF            equ	0	;# 
   254     0001                     TMR0            equ	1	;# 
   255     0002                     PCL             equ	2	;# 
   256     0003                     STATUS          equ	3	;# 
   257     0004                     FSR             equ	4	;# 
   258     0005                     PORTA           equ	5	;# 
   259     0006                     PORTB           equ	6	;# 
   260     0007                     PORTC           equ	7	;# 
   261     0008                     PORTD           equ	8	;# 
   262     0009                     PORTE           equ	9	;# 
   263     000A                     PCLATH          equ	10	;# 
   264     000B                     INTCON          equ	11	;# 
   265     000C                     PIR1            equ	12	;# 
   266     000D                     PIR2            equ	13	;# 
   267     000E                     TMR1            equ	14	;# 
   268     000E                     TMR1L           equ	14	;# 
   269     000F                     TMR1H           equ	15	;# 
   270     0010                     T1CON           equ	16	;# 
   271     0011                     TMR2            equ	17	;# 
   272     0012                     T2CON           equ	18	;# 
   273     0013                     SSPBUF          equ	19	;# 
   274     0014                     SSPCON          equ	20	;# 
   275     0015                     CCPR1           equ	21	;# 
   276     0015                     CCPR1L          equ	21	;# 
   277     0016                     CCPR1H          equ	22	;# 
   278     0017                     CCP1CON         equ	23	;# 
   279     0018                     RCSTA           equ	24	;# 
   280     0019                     TXREG           equ	25	;# 
   281     001A                     RCREG           equ	26	;# 
   282     001B                     CCPR2           equ	27	;# 
   283     001B                     CCPR2L          equ	27	;# 
   284     001C                     CCPR2H          equ	28	;# 
   285     001D                     CCP2CON         equ	29	;# 
   286     001E                     ADRESH          equ	30	;# 
   287     001F                     ADCON0          equ	31	;# 
   288     0081                     OPTION_REG      equ	129	;# 
   289     0085                     TRISA           equ	133	;# 
   290     0086                     TRISB           equ	134	;# 
   291     0087                     TRISC           equ	135	;# 
   292     0088                     TRISD           equ	136	;# 
   293     0089                     TRISE           equ	137	;# 
   294     008C                     PIE1            equ	140	;# 
   295     008D                     PIE2            equ	141	;# 
   296     008E                     PCON            equ	142	;# 
   297     0091                     SSPCON2         equ	145	;# 
   298     0092                     PR2             equ	146	;# 
   299     0093                     SSPADD          equ	147	;# 
   300     0094                     SSPSTAT         equ	148	;# 
   301     0098                     TXSTA           equ	152	;# 
   302     0099                     SPBRG           equ	153	;# 
   303     009C                     CMCON           equ	156	;# 
   304     009D                     CVRCON          equ	157	;# 
   305     009E                     ADRESL          equ	158	;# 
   306     009F                     ADCON1          equ	159	;# 
   307     010C                     EEDATA          equ	268	;# 
   308     010D                     EEADR           equ	269	;# 
   309     010E                     EEDATH          equ	270	;# 
   310     010F                     EEADRH          equ	271	;# 
   311     018C                     EECON1          equ	396	;# 
   312     018D                     EECON2          equ	397	;# 
   313                           
   314                           	psect	idataCOMMON
   315     033D                     __pidataCOMMON:
   316                           
   317                           ;initializer for read_matrix_keypad@once
   318     033D  3401               	retlw	1
   319                           
   320                           	psect	idataBANK0
   321     033E                     __pidataBANK0:
   322                           
   323                           ;initializer for _msg
   324     033E  3430               	retlw	48
   325     033F  3430               	retlw	48
   326     0340  3430               	retlw	48
   327     0341  3430               	retlw	48
   328     0342  3430               	retlw	48
   329     0343  3430               	retlw	48
   330     0344  3430               	retlw	48
   331     0345  3430               	retlw	48
   332     0346  3430               	retlw	48
   333     0347  3400               	retlw	0
   334     0008                     _PORTD          set	8
   335     0032                     _RB2            set	50
   336     0031                     _RB1            set	49
   337     0030                     _RB0            set	48
   338     0040                     _RD0            set	64
   339     0041                     _RD1            set	65
   340     0042                     _RD2            set	66
   341     0043                     _RD3            set	67
   342     0049                     _RE1            set	73
   343     004A                     _RE2            set	74
   344     0086                     _TRISB          set	134
   345     0088                     _TRISD          set	136
   346     040F                     _nRBPU          set	1039
   347     0449                     _TRISE1         set	1097
   348     044A                     _TRISE2         set	1098
   349                           
   350                           	psect	strings
   351     0003                     __pstrings:
   352     0003                     stringtab:
   353     0003                     __stringtab:
   354     0003                     stringcode:	
   355                           ;	String table - string pointers are 1 byte each
   356                           
   357     0003                     stringdir:
   358     0003  3000               	movlw	high stringdir
   359     0004  008A               	movwf	10
   360     0005  0804               	movf	4,w
   361     0006  0A84               	incf	4,f
   362     0007  0782               	addwf	2,f
   363     0008                     __stringbase:
   364     0008  3400               	retlw	0
   365     0009                     __end_of__stringtab:
   366     0009                     STR_1:
   367     0009  3445               	retlw	69	;'E'
   368     000A  346E               	retlw	110	;'n'
   369     000B  3474               	retlw	116	;'t'
   370     000C  3465               	retlw	101	;'e'
   371     000D  3472               	retlw	114	;'r'
   372     000E  3420               	retlw	32	;' '
   373     000F  3461               	retlw	97	;'a'
   374     0010  3420               	retlw	32	;' '
   375     0011  346E               	retlw	110	;'n'
   376     0012  3475               	retlw	117	;'u'
   377     0013  346D               	retlw	109	;'m'
   378     0014  3462               	retlw	98	;'b'
   379     0015  3465               	retlw	101	;'e'
   380     0016  3472               	retlw	114	;'r'
   381     0017  3400               	retlw	0
   382     0018                     STR_2:
   383     0018  346D               	retlw	109	;'m'
   384     0019  3473               	retlw	115	;'s'
   385     001A  3467               	retlw	103	;'g'
   386     001B  343A               	retlw	58	;':'
   387     001C  3400               	retlw	0
   388                           
   389                           	psect	cinit
   390     07E5                     start_initialization:	
   391                           ; #config settings
   392                           
   393     07E5                     __initialization:
   394                           
   395                           ; Initialize objects allocated to BANK0
   396     07E5  1383               	bcf	3,7	;select IRP bank0
   397     07E6  303A               	movlw	low (__pdataBANK0+10)
   398     07E7  00FD               	movwf	btemp+-1
   399     07E8  3003               	movlw	high __pidataBANK0
   400     07E9  00FE               	movwf	btemp
   401     07EA  303E               	movlw	low __pidataBANK0
   402     07EB  00FF               	movwf	btemp+1
   403     07EC  3030               	movlw	low __pdataBANK0
   404     07ED  0084               	movwf	4
   405     07EE  120A  118A  2383  120A  118A  	fcall	init_ram0
   406                           
   407                           ; Initialize objects allocated to COMMON
   408     07F3  120A  118A  233D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   409     07F8  00FC               	movwf	__pdataCOMMON& (0+127)
   410                           
   411                           ; Clear objects allocated to BANK0
   412     07F9  01BA               	clrf	__pbssBANK0& (0+127)
   413     07FA  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   414     07FB  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   415     07FC                     end_of_initialization:	
   416                           ;End of C runtime variable initialization code
   417                           
   418     07FC                     __end_of__initialization:
   419     07FC  0183               	clrf	3
   420     07FD  120A  118A  2E80   	ljmp	_main	;jump to C main() function
   421                           
   422                           	psect	dataCOMMON
   423     007C                     __pdataCOMMON:
   424     007C                     read_matrix_keypad@once:
   425     007C                     	ds	1
   426                           
   427                           	psect	bssBANK0
   428     003A                     __pbssBANK0:
   429     003A                     main@count:
   430     003A                     	ds	2
   431     003C                     _temp:
   432     003C                     	ds	1
   433                           
   434                           	psect	dataBANK0
   435     0030                     __pdataBANK0:
   436     0030                     _msg:
   437     0030                     	ds	10
   438                           
   439                           	psect	inittext
   440     037F                     init_fetch0:	
   441                           ;	Called with low address in FSR and high address in W
   442                           
   443     037F  087E               	movf	btemp,w
   444     0380  008A               	movwf	10
   445     0381  087F               	movf	btemp+1,w
   446     0382  0082               	movwf	2
   447     0383                     init_ram0:	
   448                           ;Called with:
   449                           ;	high address of idata address in btemp 
   450                           ;	low address of idata address in btemp+1 
   451                           ;	low address of data in FSR
   452                           ;	high address + 1 of data in btemp-1
   453                           
   454     0383  120A  118A  237F  120A  118A  	fcall	init_fetch0
   455     0388  0080               	movwf	0
   456     0389  0A84               	incf	4,f
   457     038A  0804               	movf	4,w
   458     038B  067D               	xorwf	btemp+-1,w
   459     038C  1903               	btfsc	3,2
   460     038D  3400               	retlw	0
   461     038E  0AFF               	incf	btemp+1,f
   462     038F  1903               	btfsc	3,2
   463     0390  0AFE               	incf	btemp,f
   464     0391  2B83               	goto	init_ram0
   465                           
   466                           	psect	cstackCOMMON
   467     0070                     __pcstackCOMMON:
   468     0070                     ?_init_matrix_keypad:
   469     0070                     ?_read_matrix_keypad:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_clcd_write:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ?_init_display_controller:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_init_clcd:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ?_init_config:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_main:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?_scan_keypad:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_strlen:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?___awdiv:	
   494                           ; 2 bytes @ 0x0
   495                           
   496     0070                     ?___awmod:	
   497                           ; 2 bytes @ 0x0
   498                           
   499     0070                     clcd_write@mode:	
   500                           ; 2 bytes @ 0x0
   501                           
   502     0070                     strlen@s:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     scan_keypad@i:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ___awdiv@divisor:	
   509                           ; 2 bytes @ 0x0
   510                           
   511     0070                     ___awmod@divisor:	
   512                           ; 2 bytes @ 0x0
   513                           
   514     0070                     ??_init_matrix_keypad:	
   515                           ; 2 bytes @ 0x0
   516                           
   517     0070                     ??_scan_keypad:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 1 bytes @ 0x0
   522     0070                     	ds	1
   523     0071                     ??_clcd_write:
   524                           
   525                           ; 1 bytes @ 0x1
   526     0071                     	ds	1
   527     0072                     read_matrix_keypad@mode:
   528     0072                     strlen@a:	
   529                           ; 1 bytes @ 0x2
   530                           
   531     0072                     ___awdiv@dividend:	
   532                           ; 1 bytes @ 0x2
   533                           
   534     0072                     ___awmod@dividend:	
   535                           ; 2 bytes @ 0x2
   536                           
   537     0072                     ??_read_matrix_keypad:	
   538                           ; 2 bytes @ 0x2
   539                           
   540     0072                     ??_strlen:	
   541                           ; 1 bytes @ 0x2
   542                           
   543                           
   544                           ; 1 bytes @ 0x2
   545     0072                     	ds	1
   546     0073                     clcd_write@byte:
   547     0073                     read_matrix_keypad@key:	
   548                           ; 1 bytes @ 0x3
   549                           
   550                           
   551                           ; 1 bytes @ 0x3
   552     0073                     	ds	1
   553     0074                     ?_clcd_putch:
   554     0074                     ?_clcd_print:	
   555                           ; 1 bytes @ 0x4
   556                           
   557     0074                     clcd_putch@addr:	
   558                           ; 1 bytes @ 0x4
   559                           
   560     0074                     clcd_print@str:	
   561                           ; 1 bytes @ 0x4
   562                           
   563     0074                     ___awdiv@counter:	
   564                           ; 1 bytes @ 0x4
   565                           
   566     0074                     ___awmod@counter:	
   567                           ; 1 bytes @ 0x4
   568                           
   569     0074                     ??_init_display_controller:	
   570                           ; 1 bytes @ 0x4
   571                           
   572     0074                     ??___awdiv:	
   573                           ; 1 bytes @ 0x4
   574                           
   575     0074                     ??___awmod:	
   576                           ; 1 bytes @ 0x4
   577                           
   578                           
   579                           ; 1 bytes @ 0x4
   580     0074                     	ds	1
   581     0075                     clcd_putch@data:
   582     0075                     clcd_print@addr:	
   583                           ; 1 bytes @ 0x5
   584                           
   585     0075                     ___awdiv@sign:	
   586                           ; 1 bytes @ 0x5
   587                           
   588     0075                     ___awmod@sign:	
   589                           ; 1 bytes @ 0x5
   590                           
   591     0075                     ??_clcd_putch:	
   592                           ; 1 bytes @ 0x5
   593                           
   594                           
   595                           ; 1 bytes @ 0x5
   596     0075                     	ds	1
   597     0076                     ___awdiv@quotient:
   598     0076                     ??_init_clcd:	
   599                           ; 2 bytes @ 0x6
   600                           
   601     0076                     ??_clcd_print:	
   602                           ; 1 bytes @ 0x6
   603                           
   604     0076                     ??_init_config:	
   605                           ; 1 bytes @ 0x6
   606                           
   607                           
   608                           ; 1 bytes @ 0x6
   609     0076                     	ds	2
   610     0078                     ?_update_clcd_msg:
   611     0078                     update_clcd_msg@count:	
   612                           ; 1 bytes @ 0x8
   613                           
   614                           
   615                           ; 2 bytes @ 0x8
   616     0078                     	ds	2
   617     007A                     update_clcd_msg@i:
   618     007A                     ??_update_clcd_msg:	
   619                           ; 2 bytes @ 0xA
   620                           
   621                           
   622                           ; 1 bytes @ 0xA
   623     007A                     	ds	2
   624                           
   625                           	psect	cstackBANK0
   626     0020                     __pcstackBANK0:
   627     0020                     ??_main:
   628                           
   629                           ; 1 bytes @ 0x0
   630     0020                     	ds	3
   631     0023                     main@run_edit_flag:
   632                           
   633                           ; 2 bytes @ 0x3
   634     0023                     	ds	2
   635     0025                     main@right_marquee:
   636                           
   637                           ; 2 bytes @ 0x5
   638     0025                     	ds	2
   639     0027                     main@left_marquee:
   640                           
   641                           ; 2 bytes @ 0x7
   642     0027                     	ds	2
   643     0029                     main@len:
   644                           
   645                           ; 2 bytes @ 0x9
   646     0029                     	ds	2
   647     002B                     main@i_89:
   648                           
   649                           ; 2 bytes @ 0xB
   650     002B                     	ds	2
   651     002D                     main@i:
   652                           
   653                           ; 2 bytes @ 0xD
   654     002D                     	ds	2
   655     002F                     main@key:
   656                           
   657                           ; 1 bytes @ 0xF
   658     002F                     	ds	1
   659                           
   660                           	psect	maintext
   661     0680                     __pmaintext:	
   662 ;;
   663 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   664 ;;
   665 ;; *************** function _main *****************
   666 ;; Defined at:
   667 ;;		line 54 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  i               2   11[BANK0 ] int 
   672 ;;  i               2   13[BANK0 ] int 
   673 ;;  len             2    9[BANK0 ] int 
   674 ;;  left_marquee    2    7[BANK0 ] int 
   675 ;;  right_marque    2    5[BANK0 ] int 
   676 ;;  run_edit_fla    2    3[BANK0 ] int 
   677 ;;  key             1   15[BANK0 ] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : B00/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0      13       0       0       0
   689 ;;      Temps:          0       3       0       0       0
   690 ;;      Totals:         0      16       0       0       0
   691 ;;Total ram usage:       16 bytes
   692 ;; Hardware stack levels required when called: 4
   693 ;; This function calls:
   694 ;;		___awdiv
   695 ;;		_clcd_print
   696 ;;		_clcd_putch
   697 ;;		_init_config
   698 ;;		_read_matrix_keypad
   699 ;;		_strlen
   700 ;;		_update_clcd_msg
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706     0680                     _main:	
   707                           ;psect for function _main
   708                           
   709     0680                     l1409:	
   710                           ;incstack = 0
   711                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   712                           
   713                           
   714                           ;main.c: 55:                 if (count > 0) {
   715     0680  120A  118A  2353  120A  118A  	fcall	_init_config
   716     0685                     l1411:
   717                           
   718                           ;main.c: 56:                     count--;
   719     0685  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   720     0686  00F4               	movwf	clcd_print@str
   721     0687  3080               	movlw	128
   722     0688  00F5               	movwf	clcd_print@addr
   723     0689  120A  118A  23E9  120A  118A  	fcall	_clcd_print
   724     068E                     l1413:
   725                           
   726                           ;main.c: 57:                 } else {
   727     068E  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   728     068F  00F4               	movwf	clcd_print@str
   729     0690  30C0               	movlw	192
   730     0691  00F5               	movwf	clcd_print@addr
   731     0692  120A  118A  23E9  120A  118A  	fcall	_clcd_print
   732     0697                     l1415:
   733                           
   734                           ;main.c: 58:                     count = 9;;main.c: 59:                 };main.c: 60:   
      +                                        update_clcd_msg(count);
   735     0697  1283               	bcf	3,5	;RP0=0, select bank0
   736     0698  1303               	bcf	3,6	;RP1=0, select bank0
   737     0699  01A3               	clrf	main@run_edit_flag
   738     069A  01A4               	clrf	main@run_edit_flag+1
   739     069B                     l1417:
   740                           
   741                           ;main.c: 61:             } else if (key == 5) {
   742     069B  3001               	movlw	1
   743     069C  00A5               	movwf	main@right_marquee
   744     069D  3000               	movlw	0
   745     069E  00A6               	movwf	main@right_marquee+1
   746     069F                     l1419:
   747                           
   748                           ;main.c: 62:                 run_edit_flag = 1;
   749     069F  01A7               	clrf	main@left_marquee
   750     06A0  01A8               	clrf	main@left_marquee+1
   751     06A1                     l1421:
   752                           
   753                           ;main.c: 65:             if (key == 6) {
   754     06A1  0838               	movf	_msg+8,w
   755     06A2  00BC               	movwf	_temp
   756                           
   757                           ;main.c: 67:                 update_clcd_msg(count);
   758     06A3  3001               	movlw	1
   759     06A4  120A  118A  23C6  120A  118A  	fcall	_read_matrix_keypad
   760     06A9  1283               	bcf	3,5	;RP0=0, select bank0
   761     06AA  1303               	bcf	3,6	;RP1=0, select bank0
   762     06AB  00AF               	movwf	main@key
   763     06AC                     l1423:
   764                           
   765                           ;main.c: 68:             } else if (key == 5) {
   766     06AC  0823               	movf	main@run_edit_flag,w
   767     06AD  0424               	iorwf	main@run_edit_flag+1,w
   768     06AE  1D03               	btfss	3,2
   769     06AF  2EB1               	goto	u1061
   770     06B0  2EB2               	goto	u1060
   771     06B1                     u1061:
   772     06B1  2F0A               	goto	l1449
   773     06B2                     u1060:
   774     06B2                     l1425:
   775                           
   776                           ;main.c: 69:                 run_edit_flag = 0;
   777     06B2  032F               	decf	main@key,w
   778     06B3  1D03               	btfss	3,2
   779     06B4  2EB6               	goto	u1071
   780     06B5  2EB7               	goto	u1070
   781     06B6                     u1071:
   782     06B6  2EDB               	goto	l1435
   783     06B7                     u1070:
   784     06B7                     l1427:
   785                           
   786                           ;main.c: 70:             }
   787     06B7  083B               	movf	main@count+1,w
   788     06B8  3A80               	xorlw	128
   789     06B9  00FF               	movwf	btemp+1
   790     06BA  3080               	movlw	128
   791     06BB  027F               	subwf	btemp+1,w
   792     06BC  1D03               	skipz
   793     06BD  2EC0               	goto	u1085
   794     06BE  3009               	movlw	9
   795     06BF  023A               	subwf	main@count,w
   796     06C0                     u1085:
   797     06C0  1803               	skipnc
   798     06C1  2EC3               	goto	u1081
   799     06C2  2EC4               	goto	u1080
   800     06C3                     u1081:
   801     06C3  2ECD               	goto	l1431
   802     06C4                     u1080:
   803     06C4                     l1429:
   804                           
   805                           ;main.c: 71:         }
   806     06C4  3001               	movlw	1
   807     06C5  1283               	bcf	3,5	;RP0=0, select bank0
   808     06C6  1303               	bcf	3,6	;RP1=0, select bank0
   809     06C7  07BA               	addwf	main@count,f
   810     06C8  1803               	skipnc
   811     06C9  0ABB               	incf	main@count+1,f
   812     06CA  3000               	movlw	0
   813     06CB  07BB               	addwf	main@count+1,f
   814                           
   815                           ;main.c: 72: 
   816     06CC  2ED1               	goto	l1433
   817     06CD                     l1431:
   818                           
   819                           ;main.c: 73:         if (key == 3) {
   820     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   821     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   822     06CF  01BA               	clrf	main@count
   823     06D0  01BB               	clrf	main@count+1
   824     06D1                     l1433:
   825                           
   826                           ;main.c: 75:             if (right_marquee) {
   827     06D1  083B               	movf	main@count+1,w
   828     06D2  00F9               	movwf	update_clcd_msg@count+1
   829     06D3  083A               	movf	main@count,w
   830     06D4  00F8               	movwf	update_clcd_msg@count
   831     06D5  120A  118A  25CB  120A  118A  	fcall	_update_clcd_msg
   832                           
   833                           ;main.c: 76:                 temp = msg[len - 1];
   834     06DA  2F2C               	goto	l1459
   835     06DB                     l1435:
   836     06DB  3002               	movlw	2
   837     06DC  062F               	xorwf	main@key,w
   838     06DD  1D03               	btfss	3,2
   839     06DE  2EE0               	goto	u1091
   840     06DF  2EE1               	goto	u1090
   841     06E0                     u1091:
   842     06E0  2EFE               	goto	l1445
   843     06E1                     u1090:
   844     06E1                     l1437:
   845                           
   846                           ;main.c: 77:                 right_marquee = 0;
   847     06E1  083B               	movf	main@count+1,w
   848     06E2  3A80               	xorlw	128
   849     06E3  00FF               	movwf	btemp+1
   850     06E4  3080               	movlw	128
   851     06E5  027F               	subwf	btemp+1,w
   852     06E6  1D03               	skipz
   853     06E7  2EEA               	goto	u1105
   854     06E8  3001               	movlw	1
   855     06E9  023A               	subwf	main@count,w
   856     06EA                     u1105:
   857     06EA  1C03               	skipc
   858     06EB  2EED               	goto	u1101
   859     06EC  2EEE               	goto	u1100
   860     06ED                     u1101:
   861     06ED  2EF7               	goto	l1441
   862     06EE                     u1100:
   863     06EE                     l1439:
   864                           
   865                           ;main.c: 78:                 left_marquee = 1;
   866     06EE  30FF               	movlw	255
   867     06EF  1283               	bcf	3,5	;RP0=0, select bank0
   868     06F0  1303               	bcf	3,6	;RP1=0, select bank0
   869     06F1  07BA               	addwf	main@count,f
   870     06F2  1803               	skipnc
   871     06F3  0ABB               	incf	main@count+1,f
   872     06F4  30FF               	movlw	255
   873     06F5  07BB               	addwf	main@count+1,f
   874                           
   875                           ;main.c: 79:                 0x01;
   876     06F6  2ED1               	goto	l1433
   877     06F7                     l1441:
   878                           
   879                           ;main.c: 80:                 for (int i = len - 1; i > 0; i--) {
   880     06F7  3009               	movlw	9
   881     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   882     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   883     06FA  00BA               	movwf	main@count
   884     06FB  3000               	movlw	0
   885     06FC  00BB               	movwf	main@count+1
   886     06FD  2ED1               	goto	l1433
   887     06FE                     l1445:
   888     06FE  3005               	movlw	5
   889     06FF  062F               	xorwf	main@key,w
   890     0700  1D03               	btfss	3,2
   891     0701  2F03               	goto	u1111
   892     0702  2F04               	goto	u1110
   893     0703                     u1111:
   894     0703  2F09               	goto	l70
   895     0704                     u1110:
   896     0704                     l1447:
   897                           
   898                           ;main.c: 84:                 msg[0] = temp;
   899     0704  3001               	movlw	1
   900     0705  00A3               	movwf	main@run_edit_flag
   901     0706  3000               	movlw	0
   902     0707  00A4               	movwf	main@run_edit_flag+1
   903     0708  2F2C               	goto	l1459
   904     0709                     l70:
   905                           
   906                           ;main.c: 86:                 temp = msg[0];
   907     0709  2F2C               	goto	l1459
   908     070A                     l1449:
   909                           
   910                           ;main.c: 87:                 right_marquee = 1;
   911     070A  3006               	movlw	6
   912     070B  062F               	xorwf	main@key,w
   913     070C  1D03               	btfss	3,2
   914     070D  2F0F               	goto	u1121
   915     070E  2F10               	goto	u1120
   916     070F                     u1121:
   917     070F  2F24               	goto	l1455
   918     0710                     u1120:
   919     0710                     l1451:
   920                           
   921                           ;main.c: 88:                 left_marquee = 0;
   922     0710  300A               	movlw	10
   923     0711  00F0               	movwf	___awdiv@divisor
   924     0712  3000               	movlw	0
   925     0713  00F1               	movwf	___awdiv@divisor+1
   926     0714  083B               	movf	main@count+1,w
   927     0715  00F3               	movwf	___awdiv@dividend+1
   928     0716  083A               	movf	main@count,w
   929     0717  00F2               	movwf	___awdiv@dividend
   930     0718  120A  118A  24BC  120A  118A  	fcall	___awdiv
   931     071D  0871               	movf	?___awdiv+1,w
   932     071E  1283               	bcf	3,5	;RP0=0, select bank0
   933     071F  1303               	bcf	3,6	;RP1=0, select bank0
   934     0720  00BB               	movwf	main@count+1
   935     0721  0870               	movf	?___awdiv,w
   936     0722  00BA               	movwf	main@count
   937     0723  2ED1               	goto	l1433
   938     0724                     l1455:
   939     0724  3005               	movlw	5
   940     0725  062F               	xorwf	main@key,w
   941     0726  1D03               	btfss	3,2
   942     0727  2F29               	goto	u1131
   943     0728  2F2A               	goto	u1130
   944     0729                     u1131:
   945     0729  2F2C               	goto	l1459
   946     072A                     u1130:
   947     072A                     l1457:
   948                           
   949                           ;main.c: 91:                     msg[i] = msg[i + 1];
   950     072A  01A3               	clrf	main@run_edit_flag
   951     072B  01A4               	clrf	main@run_edit_flag+1
   952     072C                     l1459:
   953                           
   954                           ;main.c: 95:             }
   955     072C  3003               	movlw	3
   956     072D  1283               	bcf	3,5	;RP0=0, select bank0
   957     072E  1303               	bcf	3,6	;RP1=0, select bank0
   958     072F  062F               	xorwf	main@key,w
   959     0730  1D03               	btfss	3,2
   960     0731  2F33               	goto	u1141
   961     0732  2F34               	goto	u1140
   962     0733                     u1141:
   963     0733  2EA1               	goto	l1421
   964     0734                     u1140:
   965     0734                     l1461:
   966                           
   967                           ;main.c: 96:         }
   968     0734  3030               	movlw	(low (_msg| 0))& (0+255)
   969     0735  00F0               	movwf	strlen@s
   970     0736  120A  118A  2392  120A  118A  	fcall	_strlen
   971     073B  0871               	movf	?_strlen+1,w
   972     073C  1283               	bcf	3,5	;RP0=0, select bank0
   973     073D  1303               	bcf	3,6	;RP1=0, select bank0
   974     073E  00AA               	movwf	main@len+1
   975     073F  0870               	movf	?_strlen,w
   976     0740  00A9               	movwf	main@len
   977     0741                     l1463:
   978                           
   979                           ;main.c: 97:     }
   980     0741  0825               	movf	main@right_marquee,w
   981     0742  0426               	iorwf	main@right_marquee+1,w
   982     0743  1903               	btfsc	3,2
   983     0744  2F46               	goto	u1151
   984     0745  2F47               	goto	u1150
   985     0746                     u1151:
   986     0746  2F90               	goto	l1487
   987     0747                     u1150:
   988     0747                     l1465:
   989                           
   990                           ;main.c: 98:     return;
   991     0747  0829               	movf	main@len,w
   992     0748  3E2F               	addlw	(low ((_msg| 0+-1)))& (0+255)
   993     0749  0084               	movwf	4
   994     074A  1383               	bcf	3,7	;select IRP bank0
   995     074B  0800               	movf	0,w
   996     074C  00BC               	movwf	_temp
   997     074D                     l1467:
   998                           
   999                           ;main.c: 99: }
  1000     074D  01A5               	clrf	main@right_marquee
  1001     074E  01A6               	clrf	main@right_marquee+1
  1002     074F                     l1469:
  1003     074F  3001               	movlw	1
  1004     0750  00A7               	movwf	main@left_marquee
  1005     0751  3000               	movlw	0
  1006     0752  00A8               	movwf	main@left_marquee+1
  1007     0753                     l1471:
  1008     0753  0829               	movf	main@len,w
  1009     0754  3EFF               	addlw	255
  1010     0755  00AD               	movwf	main@i
  1011     0756  082A               	movf	main@len+1,w
  1012     0757  1803               	skipnc
  1013     0758  3E01               	addlw	1
  1014     0759  3EFF               	addlw	255
  1015     075A  00AE               	movwf	main@i+1
  1016     075B                     l1473:
  1017     075B  082E               	movf	main@i+1,w
  1018     075C  3A80               	xorlw	128
  1019     075D  00FF               	movwf	btemp+1
  1020     075E  3080               	movlw	128
  1021     075F  027F               	subwf	btemp+1,w
  1022     0760  1D03               	skipz
  1023     0761  2F64               	goto	u1165
  1024     0762  3001               	movlw	1
  1025     0763  022D               	subwf	main@i,w
  1026     0764                     u1165:
  1027     0764  1803               	skipnc
  1028     0765  2F67               	goto	u1161
  1029     0766  2F68               	goto	u1160
  1030     0767                     u1161:
  1031     0767  2F69               	goto	l1477
  1032     0768                     u1160:
  1033     0768  2F8B               	goto	l1485
  1034     0769                     l1477:
  1035     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1036     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1037     076B  082D               	movf	main@i,w
  1038     076C  3E2F               	addlw	(low ((_msg| 0+-1)))& (0+255)
  1039     076D  0084               	movwf	4
  1040     076E  1383               	bcf	3,7	;select IRP bank0
  1041     076F  0800               	movf	0,w
  1042     0770  00FF               	movwf	btemp+1
  1043     0771  082D               	movf	main@i,w
  1044     0772  3E30               	addlw	(low (_msg| 0))& (0+255)
  1045     0773  0084               	movwf	4
  1046     0774  087F               	movf	btemp+1,w
  1047     0775  0080               	movwf	0
  1048     0776                     l1479:
  1049     0776  082D               	movf	main@i,w
  1050     0777  3EC0               	addlw	192
  1051     0778  00F4               	movwf	clcd_putch@addr
  1052     0779  082D               	movf	main@i,w
  1053     077A  3E30               	addlw	(low (_msg| 0))& (0+255)
  1054     077B  0084               	movwf	4
  1055     077C  0800               	movf	0,w
  1056     077D  120A  118A  236E  120A  118A  	fcall	_clcd_putch
  1057     0782                     l1481:
  1058     0782  30FF               	movlw	255
  1059     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1060     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1061     0785  07AD               	addwf	main@i,f
  1062     0786  1803               	skipnc
  1063     0787  0AAE               	incf	main@i+1,f
  1064     0788  30FF               	movlw	255
  1065     0789  07AE               	addwf	main@i+1,f
  1066     078A  2F5B               	goto	l1473
  1067     078B                     l1485:
  1068     078B  1283               	bcf	3,5	;RP0=0, select bank0
  1069     078C  1303               	bcf	3,6	;RP1=0, select bank0
  1070     078D  083C               	movf	_temp,w
  1071     078E  00B0               	movwf	_msg
  1072     078F  2EA1               	goto	l1421
  1073     0790                     l1487:
  1074     0790  0827               	movf	main@left_marquee,w
  1075     0791  0428               	iorwf	main@left_marquee+1,w
  1076     0792  1903               	btfsc	3,2
  1077     0793  2F95               	goto	u1171
  1078     0794  2F96               	goto	u1170
  1079     0795                     u1171:
  1080     0795  2FE1               	goto	l80
  1081     0796                     u1170:
  1082     0796                     l1489:
  1083     0796  0830               	movf	_msg,w
  1084     0797  00BC               	movwf	_temp
  1085     0798  3001               	movlw	1
  1086     0799  00A5               	movwf	main@right_marquee
  1087     079A  3000               	movlw	0
  1088     079B  00A6               	movwf	main@right_marquee+1
  1089     079C                     l1491:
  1090     079C  01A7               	clrf	main@left_marquee
  1091     079D  01A8               	clrf	main@left_marquee+1
  1092     079E                     l1493:
  1093     079E  01AB               	clrf	main@i_89
  1094     079F  01AC               	clrf	main@i_89+1
  1095     07A0  2FC2               	goto	l1501
  1096     07A1                     l1495:
  1097     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1098     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1099     07A3  082B               	movf	main@i_89,w
  1100     07A4  3E31               	addlw	(low ((_msg| 0+1)))& (0+255)
  1101     07A5  0084               	movwf	4
  1102     07A6  1383               	bcf	3,7	;select IRP bank0
  1103     07A7  0800               	movf	0,w
  1104     07A8  00FF               	movwf	btemp+1
  1105     07A9  082B               	movf	main@i_89,w
  1106     07AA  3E30               	addlw	(low (_msg| 0))& (0+255)
  1107     07AB  0084               	movwf	4
  1108     07AC  087F               	movf	btemp+1,w
  1109     07AD  0080               	movwf	0
  1110     07AE                     l1497:
  1111     07AE  082B               	movf	main@i_89,w
  1112     07AF  3EC0               	addlw	192
  1113     07B0  00F4               	movwf	clcd_putch@addr
  1114     07B1  082B               	movf	main@i_89,w
  1115     07B2  3E30               	addlw	(low (_msg| 0))& (0+255)
  1116     07B3  0084               	movwf	4
  1117     07B4  0800               	movf	0,w
  1118     07B5  120A  118A  236E  120A  118A  	fcall	_clcd_putch
  1119     07BA                     l1499:
  1120     07BA  3001               	movlw	1
  1121     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1122     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1123     07BD  07AB               	addwf	main@i_89,f
  1124     07BE  1803               	skipnc
  1125     07BF  0AAC               	incf	main@i_89+1,f
  1126     07C0  3000               	movlw	0
  1127     07C1  07AC               	addwf	main@i_89+1,f
  1128     07C2                     l1501:
  1129     07C2  0829               	movf	main@len,w
  1130     07C3  3EFF               	addlw	255
  1131     07C4  00A0               	movwf	??_main
  1132     07C5  082A               	movf	main@len+1,w
  1133     07C6  1803               	skipnc
  1134     07C7  3E01               	addlw	1
  1135     07C8  3EFF               	addlw	255
  1136     07C9  00A1               	movwf	??_main+1
  1137     07CA  082C               	movf	main@i_89+1,w
  1138     07CB  3A80               	xorlw	128
  1139     07CC  00A2               	movwf	??_main+2
  1140     07CD  0821               	movf	??_main+1,w
  1141     07CE  3A80               	xorlw	128
  1142     07CF  0222               	subwf	??_main+2,w
  1143     07D0  1D03               	skipz
  1144     07D1  2FD4               	goto	u1185
  1145     07D2  0820               	movf	??_main,w
  1146     07D3  022B               	subwf	main@i_89,w
  1147     07D4                     u1185:
  1148     07D4  1C03               	skipc
  1149     07D5  2FD7               	goto	u1181
  1150     07D6  2FD8               	goto	u1180
  1151     07D7                     u1181:
  1152     07D7  2FA1               	goto	l1495
  1153     07D8                     u1180:
  1154     07D8                     l1503:
  1155     07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1156     07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1157     07DA  0829               	movf	main@len,w
  1158     07DB  3E2F               	addlw	(low ((_msg| 0+-1)))& (0+255)
  1159     07DC  0084               	movwf	4
  1160     07DD  083C               	movf	_temp,w
  1161     07DE  1383               	bcf	3,7	;select IRP bank0
  1162     07DF  0080               	movwf	0
  1163     07E0  2EA1               	goto	l1421
  1164     07E1                     l80:
  1165     07E1  2EA1               	goto	l1421
  1166     07E2  120A  118A  2800   	ljmp	start
  1167     07E5                     __end_of_main:
  1168                           
  1169                           	psect	text1
  1170     05CB                     __ptext1:	
  1171 ;; *************** function _update_clcd_msg *****************
  1172 ;; Defined at:
  1173 ;;		line 30 in file "main.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  count           2    8[COMMON] int 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  i               2   10[COMMON] int 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         2       0       0       0       0
  1188 ;;      Locals:         2       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0
  1190 ;;      Totals:         4       0       0       0       0
  1191 ;;Total ram usage:        4 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 2
  1194 ;; This function calls:
  1195 ;;		___awdiv
  1196 ;;		___awmod
  1197 ;;		_clcd_putch
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203     05CB                     _update_clcd_msg:	
  1204                           ;psect for function _update_clcd_msg
  1205                           
  1206     05CB                     l1335:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _update_clcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1209                           
  1210                           
  1211                           ;main.c: 31: 
  1212     05CB  1FF9               	btfss	update_clcd_msg@count+1,7
  1213     05CC  2DCE               	goto	u981
  1214     05CD  2DCF               	goto	u980
  1215     05CE                     u981:
  1216     05CE  2DD1               	goto	l1339
  1217     05CF                     u980:
  1218     05CF                     l1337:
  1219                           
  1220                           ;main.c: 32: void main(void) {
  1221     05CF  01F8               	clrf	update_clcd_msg@count
  1222     05D0  01F9               	clrf	update_clcd_msg@count+1
  1223     05D1                     l1339:
  1224                           
  1225                           ;main.c: 33:     init_config();
  1226     05D1  0879               	movf	update_clcd_msg@count+1,w
  1227     05D2  3A80               	xorlw	128
  1228     05D3  00FF               	movwf	btemp+1
  1229     05D4  30A7               	movlw	167
  1230     05D5  027F               	subwf	btemp+1,w
  1231     05D6  1D03               	skipz
  1232     05D7  2DDA               	goto	u995
  1233     05D8  3010               	movlw	16
  1234     05D9  0278               	subwf	update_clcd_msg@count,w
  1235     05DA                     u995:
  1236     05DA  1C03               	skipc
  1237     05DB  2DDD               	goto	u991
  1238     05DC  2DDE               	goto	u990
  1239     05DD                     u991:
  1240     05DD  2DE0               	goto	l1343
  1241     05DE                     u990:
  1242     05DE                     l1341:
  1243                           
  1244                           ;main.c: 34:     clcd_print("Enter a number", (0x80 + 0));
  1245     05DE  01F8               	clrf	update_clcd_msg@count
  1246     05DF  01F9               	clrf	update_clcd_msg@count+1
  1247     05E0                     l1343:
  1248                           
  1249                           ;main.c: 37:     static int count = 0;
  1250     05E0  300A               	movlw	10
  1251     05E1  00F0               	movwf	___awmod@divisor
  1252     05E2  3000               	movlw	0
  1253     05E3  00F1               	movwf	___awmod@divisor+1
  1254     05E4  0879               	movf	update_clcd_msg@count+1,w
  1255     05E5  00F3               	movwf	___awmod@dividend+1
  1256     05E6  0878               	movf	update_clcd_msg@count,w
  1257     05E7  00F2               	movwf	___awmod@dividend
  1258     05E8  120A  118A  2465  120A  118A  	fcall	___awmod
  1259     05ED  0870               	movf	?___awmod,w
  1260     05EE  3E30               	addlw	48
  1261     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1262     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1263     05F1  00B7               	movwf	_msg+7
  1264     05F2                     l1345:
  1265                           
  1266                           ;main.c: 38:     int run_edit_flag = 0;
  1267     05F2  300A               	movlw	10
  1268     05F3  00F0               	movwf	___awdiv@divisor
  1269     05F4  3000               	movlw	0
  1270     05F5  00F1               	movwf	___awdiv@divisor+1
  1271     05F6  0879               	movf	update_clcd_msg@count+1,w
  1272     05F7  00F3               	movwf	___awdiv@dividend+1
  1273     05F8  0878               	movf	update_clcd_msg@count,w
  1274     05F9  00F2               	movwf	___awdiv@dividend
  1275     05FA  120A  118A  24BC  120A  118A  	fcall	___awdiv
  1276     05FF  0871               	movf	?___awdiv+1,w
  1277     0600  00F9               	movwf	update_clcd_msg@count+1
  1278     0601  0870               	movf	?___awdiv,w
  1279     0602  00F8               	movwf	update_clcd_msg@count
  1280     0603                     l1347:
  1281                           
  1282                           ;main.c: 39:     int right_marquee = 1;
  1283     0603  300A               	movlw	10
  1284     0604  00F0               	movwf	___awmod@divisor
  1285     0605  3000               	movlw	0
  1286     0606  00F1               	movwf	___awmod@divisor+1
  1287     0607  0879               	movf	update_clcd_msg@count+1,w
  1288     0608  00F3               	movwf	___awmod@dividend+1
  1289     0609  0878               	movf	update_clcd_msg@count,w
  1290     060A  00F2               	movwf	___awmod@dividend
  1291     060B  120A  118A  2465  120A  118A  	fcall	___awmod
  1292     0610  0870               	movf	?___awmod,w
  1293     0611  3E30               	addlw	48
  1294     0612  1283               	bcf	3,5	;RP0=0, select bank0
  1295     0613  1303               	bcf	3,6	;RP1=0, select bank0
  1296     0614  00B6               	movwf	_msg+6
  1297     0615                     l1349:
  1298                           
  1299                           ;main.c: 40:     int left_marquee = 0;
  1300     0615  300A               	movlw	10
  1301     0616  00F0               	movwf	___awdiv@divisor
  1302     0617  3000               	movlw	0
  1303     0618  00F1               	movwf	___awdiv@divisor+1
  1304     0619  0879               	movf	update_clcd_msg@count+1,w
  1305     061A  00F3               	movwf	___awdiv@dividend+1
  1306     061B  0878               	movf	update_clcd_msg@count,w
  1307     061C  00F2               	movwf	___awdiv@dividend
  1308     061D  120A  118A  24BC  120A  118A  	fcall	___awdiv
  1309     0622  0871               	movf	?___awdiv+1,w
  1310     0623  00F9               	movwf	update_clcd_msg@count+1
  1311     0624  0870               	movf	?___awdiv,w
  1312     0625  00F8               	movwf	update_clcd_msg@count
  1313     0626                     l1351:
  1314                           
  1315                           ;main.c: 41: 
  1316     0626  300A               	movlw	10
  1317     0627  00F0               	movwf	___awmod@divisor
  1318     0628  3000               	movlw	0
  1319     0629  00F1               	movwf	___awmod@divisor+1
  1320     062A  0879               	movf	update_clcd_msg@count+1,w
  1321     062B  00F3               	movwf	___awmod@dividend+1
  1322     062C  0878               	movf	update_clcd_msg@count,w
  1323     062D  00F2               	movwf	___awmod@dividend
  1324     062E  120A  118A  2465  120A  118A  	fcall	___awmod
  1325     0633  0870               	movf	?___awmod,w
  1326     0634  3E30               	addlw	48
  1327     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1328     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1329     0637  00B5               	movwf	_msg+5
  1330     0638                     l1353:
  1331                           
  1332                           ;main.c: 42:     while (1) {
  1333     0638  300A               	movlw	10
  1334     0639  00F0               	movwf	___awdiv@divisor
  1335     063A  3000               	movlw	0
  1336     063B  00F1               	movwf	___awdiv@divisor+1
  1337     063C  0879               	movf	update_clcd_msg@count+1,w
  1338     063D  00F3               	movwf	___awdiv@dividend+1
  1339     063E  0878               	movf	update_clcd_msg@count,w
  1340     063F  00F2               	movwf	___awdiv@dividend
  1341     0640  120A  118A  24BC  120A  118A  	fcall	___awdiv
  1342     0645  0871               	movf	?___awdiv+1,w
  1343     0646  00F9               	movwf	update_clcd_msg@count+1
  1344     0647  0870               	movf	?___awdiv,w
  1345     0648  00F8               	movwf	update_clcd_msg@count
  1346     0649                     l1355:
  1347                           
  1348                           ;main.c: 43:         temp = msg[8];
  1349     0649  300A               	movlw	10
  1350     064A  00F0               	movwf	___awmod@divisor
  1351     064B  3000               	movlw	0
  1352     064C  00F1               	movwf	___awmod@divisor+1
  1353     064D  0879               	movf	update_clcd_msg@count+1,w
  1354     064E  00F3               	movwf	___awmod@dividend+1
  1355     064F  0878               	movf	update_clcd_msg@count,w
  1356     0650  00F2               	movwf	___awmod@dividend
  1357     0651  120A  118A  2465  120A  118A  	fcall	___awmod
  1358     0656  0870               	movf	?___awmod,w
  1359     0657  3E30               	addlw	48
  1360     0658  1283               	bcf	3,5	;RP0=0, select bank0
  1361     0659  1303               	bcf	3,6	;RP1=0, select bank0
  1362     065A  00B4               	movwf	_msg+4
  1363     065B                     l1357:
  1364                           
  1365                           ;main.c: 49:                     count++;
  1366     065B  3004               	movlw	4
  1367     065C  00FA               	movwf	update_clcd_msg@i
  1368     065D  3000               	movlw	0
  1369     065E  00FB               	movwf	update_clcd_msg@i+1
  1370     065F                     l1363:
  1371                           
  1372                           ;main.c: 50:                 } else {
  1373     065F  087A               	movf	update_clcd_msg@i,w
  1374     0660  3EC0               	addlw	192
  1375     0661  00F4               	movwf	clcd_putch@addr
  1376     0662  087A               	movf	update_clcd_msg@i,w
  1377     0663  3E30               	addlw	(low (_msg| 0))& (0+255)
  1378     0664  0084               	movwf	4
  1379     0665  1383               	bcf	3,7	;select IRP bank0
  1380     0666  0800               	movf	0,w
  1381     0667  120A  118A  236E  120A  118A  	fcall	_clcd_putch
  1382     066C                     l1365:
  1383                           
  1384                           ;main.c: 51:                     count = 0;
  1385     066C  3001               	movlw	1
  1386     066D  07FA               	addwf	update_clcd_msg@i,f
  1387     066E  1803               	skipnc
  1388     066F  0AFB               	incf	update_clcd_msg@i+1,f
  1389     0670  3000               	movlw	0
  1390     0671  07FB               	addwf	update_clcd_msg@i+1,f
  1391     0672                     l1367:
  1392     0672  087B               	movf	update_clcd_msg@i+1,w
  1393     0673  3A80               	xorlw	128
  1394     0674  00FF               	movwf	btemp+1
  1395     0675  3080               	movlw	128
  1396     0676  027F               	subwf	btemp+1,w
  1397     0677  1D03               	skipz
  1398     0678  2E7B               	goto	u1005
  1399     0679  3008               	movlw	8
  1400     067A  027A               	subwf	update_clcd_msg@i,w
  1401     067B                     u1005:
  1402     067B  1C03               	skipc
  1403     067C  2E7E               	goto	u1001
  1404     067D  2E7F               	goto	u1000
  1405     067E                     u1001:
  1406     067E  2E5F               	goto	l1363
  1407     067F                     u1000:
  1408     067F                     l58:
  1409     067F  0008               	return
  1410     0680                     __end_of_update_clcd_msg:
  1411                           
  1412                           	psect	text2
  1413     036E                     __ptext2:	
  1414 ;; *************** function _clcd_putch *****************
  1415 ;; Defined at:
  1416 ;;		line 51 in file "clcd.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  data            1    wreg     const unsigned char 
  1419 ;;  addr            1    4[COMMON] unsigned char 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  data            1    5[COMMON] const unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         1       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 1
  1438 ;; This function calls:
  1439 ;;		_clcd_write
  1440 ;; This function is called by:
  1441 ;;		_update_clcd_msg
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446     036E                     _clcd_putch:	
  1447                           ;psect for function _clcd_putch
  1448                           
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1452                           ;clcd_putch@data stored from wreg
  1453     036E  00F5               	movwf	clcd_putch@data
  1454     036F                     l1143:
  1455                           
  1456                           ;clcd.c: 52:     clcd_write(addr, 0);
  1457     036F  01F0               	clrf	clcd_write@mode
  1458     0370  0874               	movf	clcd_putch@addr,w
  1459     0371  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  1460                           
  1461                           ;clcd.c: 53:     clcd_write(data, 1);
  1462     0376  01F0               	clrf	clcd_write@mode
  1463     0377  0AF0               	incf	clcd_write@mode,f
  1464     0378  0875               	movf	clcd_putch@data,w
  1465     0379  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  1466     037E                     l26:
  1467     037E  0008               	return
  1468     037F                     __end_of_clcd_putch:
  1469                           
  1470                           	psect	text3
  1471     0465                     __ptext3:	
  1472 ;; *************** function ___awmod *****************
  1473 ;; Defined at:
  1474 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  divisor         2    0[COMMON] int 
  1477 ;;  dividend        2    2[COMMON] int 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  sign            1    5[COMMON] unsigned char 
  1480 ;;  counter         1    4[COMMON] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  2    0[COMMON] int 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         4       0       0       0       0
  1491 ;;      Locals:         2       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0
  1493 ;;      Totals:         6       0       0       0       0
  1494 ;;Total ram usage:        6 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_update_clcd_msg
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503     0465                     ___awmod:	
  1504                           ;psect for function ___awmod
  1505                           
  1506     0465                     l1287:	
  1507                           ;incstack = 0
  1508                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1509                           
  1510     0465  01F5               	clrf	___awmod@sign
  1511     0466                     l1289:
  1512     0466  1FF3               	btfss	___awmod@dividend+1,7
  1513     0467  2C69               	goto	u881
  1514     0468  2C6A               	goto	u880
  1515     0469                     u881:
  1516     0469  2C71               	goto	l1295
  1517     046A                     u880:
  1518     046A                     l1291:
  1519     046A  09F2               	comf	___awmod@dividend,f
  1520     046B  09F3               	comf	___awmod@dividend+1,f
  1521     046C  0AF2               	incf	___awmod@dividend,f
  1522     046D  1903               	skipnz
  1523     046E  0AF3               	incf	___awmod@dividend+1,f
  1524     046F                     l1293:
  1525     046F  3001               	movlw	1
  1526     0470  00F5               	movwf	___awmod@sign
  1527     0471                     l1295:
  1528     0471  1FF1               	btfss	___awmod@divisor+1,7
  1529     0472  2C74               	goto	u891
  1530     0473  2C75               	goto	u890
  1531     0474                     u891:
  1532     0474  2C7A               	goto	l1299
  1533     0475                     u890:
  1534     0475                     l1297:
  1535     0475  09F0               	comf	___awmod@divisor,f
  1536     0476  09F1               	comf	___awmod@divisor+1,f
  1537     0477  0AF0               	incf	___awmod@divisor,f
  1538     0478  1903               	skipnz
  1539     0479  0AF1               	incf	___awmod@divisor+1,f
  1540     047A                     l1299:
  1541     047A  0870               	movf	___awmod@divisor,w
  1542     047B  0471               	iorwf	___awmod@divisor+1,w
  1543     047C  1903               	btfsc	3,2
  1544     047D  2C7F               	goto	u901
  1545     047E  2C80               	goto	u900
  1546     047F                     u901:
  1547     047F  2CAD               	goto	l1317
  1548     0480                     u900:
  1549     0480                     l1301:
  1550     0480  3001               	movlw	1
  1551     0481  00F4               	movwf	___awmod@counter
  1552     0482  2C8C               	goto	l1307
  1553     0483                     l1303:
  1554     0483  3001               	movlw	1
  1555     0484                     u915:
  1556     0484  1003               	clrc
  1557     0485  0DF0               	rlf	___awmod@divisor,f
  1558     0486  0DF1               	rlf	___awmod@divisor+1,f
  1559     0487  3EFF               	addlw	-1
  1560     0488  1D03               	skipz
  1561     0489  2C84               	goto	u915
  1562     048A                     l1305:
  1563     048A  3001               	movlw	1
  1564     048B  07F4               	addwf	___awmod@counter,f
  1565     048C                     l1307:
  1566     048C  1FF1               	btfss	___awmod@divisor+1,7
  1567     048D  2C8F               	goto	u921
  1568     048E  2C90               	goto	u920
  1569     048F                     u921:
  1570     048F  2C83               	goto	l1303
  1571     0490                     u920:
  1572     0490                     l1309:
  1573     0490  0871               	movf	___awmod@divisor+1,w
  1574     0491  0273               	subwf	___awmod@dividend+1,w
  1575     0492  1D03               	skipz
  1576     0493  2C96               	goto	u935
  1577     0494  0870               	movf	___awmod@divisor,w
  1578     0495  0272               	subwf	___awmod@dividend,w
  1579     0496                     u935:
  1580     0496  1C03               	skipc
  1581     0497  2C99               	goto	u931
  1582     0498  2C9A               	goto	u930
  1583     0499                     u931:
  1584     0499  2CA0               	goto	l1313
  1585     049A                     u930:
  1586     049A                     l1311:
  1587     049A  0870               	movf	___awmod@divisor,w
  1588     049B  02F2               	subwf	___awmod@dividend,f
  1589     049C  0871               	movf	___awmod@divisor+1,w
  1590     049D  1C03               	skipc
  1591     049E  03F3               	decf	___awmod@dividend+1,f
  1592     049F  02F3               	subwf	___awmod@dividend+1,f
  1593     04A0                     l1313:
  1594     04A0  3001               	movlw	1
  1595     04A1                     u945:
  1596     04A1  1003               	clrc
  1597     04A2  0CF1               	rrf	___awmod@divisor+1,f
  1598     04A3  0CF0               	rrf	___awmod@divisor,f
  1599     04A4  3EFF               	addlw	-1
  1600     04A5  1D03               	skipz
  1601     04A6  2CA1               	goto	u945
  1602     04A7                     l1315:
  1603     04A7  3001               	movlw	1
  1604     04A8  02F4               	subwf	___awmod@counter,f
  1605     04A9  1D03               	btfss	3,2
  1606     04AA  2CAC               	goto	u951
  1607     04AB  2CAD               	goto	u950
  1608     04AC                     u951:
  1609     04AC  2C90               	goto	l1309
  1610     04AD                     u950:
  1611     04AD                     l1317:
  1612     04AD  0875               	movf	___awmod@sign,w
  1613     04AE  1903               	btfsc	3,2
  1614     04AF  2CB1               	goto	u961
  1615     04B0  2CB2               	goto	u960
  1616     04B1                     u961:
  1617     04B1  2CB7               	goto	l1321
  1618     04B2                     u960:
  1619     04B2                     l1319:
  1620     04B2  09F2               	comf	___awmod@dividend,f
  1621     04B3  09F3               	comf	___awmod@dividend+1,f
  1622     04B4  0AF2               	incf	___awmod@dividend,f
  1623     04B5  1903               	skipnz
  1624     04B6  0AF3               	incf	___awmod@dividend+1,f
  1625     04B7                     l1321:
  1626     04B7  0873               	movf	___awmod@dividend+1,w
  1627     04B8  00F1               	movwf	?___awmod+1
  1628     04B9  0872               	movf	___awmod@dividend,w
  1629     04BA  00F0               	movwf	?___awmod
  1630     04BB                     l411:
  1631     04BB  0008               	return
  1632     04BC                     __end_of___awmod:
  1633                           
  1634                           	psect	text4
  1635     04BC                     __ptext4:	
  1636 ;; *************** function ___awdiv *****************
  1637 ;; Defined at:
  1638 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  divisor         2    0[COMMON] int 
  1641 ;;  dividend        2    2[COMMON] int 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  quotient        2    6[COMMON] int 
  1644 ;;  sign            1    5[COMMON] unsigned char 
  1645 ;;  counter         1    4[COMMON] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2    0[COMMON] int 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         4       0       0       0       0
  1656 ;;      Locals:         4       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0
  1658 ;;      Totals:         8       0       0       0       0
  1659 ;;Total ram usage:        8 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_update_clcd_msg
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669     04BC                     ___awdiv:	
  1670                           ;psect for function ___awdiv
  1671                           
  1672     04BC                     l1243:	
  1673                           ;incstack = 0
  1674                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1675                           
  1676     04BC  01F5               	clrf	___awdiv@sign
  1677     04BD                     l1245:
  1678     04BD  1FF1               	btfss	___awdiv@divisor+1,7
  1679     04BE  2CC0               	goto	u781
  1680     04BF  2CC1               	goto	u780
  1681     04C0                     u781:
  1682     04C0  2CC8               	goto	l1251
  1683     04C1                     u780:
  1684     04C1                     l1247:
  1685     04C1  09F0               	comf	___awdiv@divisor,f
  1686     04C2  09F1               	comf	___awdiv@divisor+1,f
  1687     04C3  0AF0               	incf	___awdiv@divisor,f
  1688     04C4  1903               	skipnz
  1689     04C5  0AF1               	incf	___awdiv@divisor+1,f
  1690     04C6                     l1249:
  1691     04C6  3001               	movlw	1
  1692     04C7  00F5               	movwf	___awdiv@sign
  1693     04C8                     l1251:
  1694     04C8  1FF3               	btfss	___awdiv@dividend+1,7
  1695     04C9  2CCB               	goto	u791
  1696     04CA  2CCC               	goto	u790
  1697     04CB                     u791:
  1698     04CB  2CD3               	goto	l1257
  1699     04CC                     u790:
  1700     04CC                     l1253:
  1701     04CC  09F2               	comf	___awdiv@dividend,f
  1702     04CD  09F3               	comf	___awdiv@dividend+1,f
  1703     04CE  0AF2               	incf	___awdiv@dividend,f
  1704     04CF  1903               	skipnz
  1705     04D0  0AF3               	incf	___awdiv@dividend+1,f
  1706     04D1                     l1255:
  1707     04D1  3001               	movlw	1
  1708     04D2  06F5               	xorwf	___awdiv@sign,f
  1709     04D3                     l1257:
  1710     04D3  01F6               	clrf	___awdiv@quotient
  1711     04D4  01F7               	clrf	___awdiv@quotient+1
  1712     04D5                     l1259:
  1713     04D5  0870               	movf	___awdiv@divisor,w
  1714     04D6  0471               	iorwf	___awdiv@divisor+1,w
  1715     04D7  1903               	btfsc	3,2
  1716     04D8  2CDA               	goto	u801
  1717     04D9  2CDB               	goto	u800
  1718     04DA                     u801:
  1719     04DA  2D10               	goto	l1279
  1720     04DB                     u800:
  1721     04DB                     l1261:
  1722     04DB  3001               	movlw	1
  1723     04DC  00F4               	movwf	___awdiv@counter
  1724     04DD  2CE7               	goto	l1267
  1725     04DE                     l1263:
  1726     04DE  3001               	movlw	1
  1727     04DF                     u815:
  1728     04DF  1003               	clrc
  1729     04E0  0DF0               	rlf	___awdiv@divisor,f
  1730     04E1  0DF1               	rlf	___awdiv@divisor+1,f
  1731     04E2  3EFF               	addlw	-1
  1732     04E3  1D03               	skipz
  1733     04E4  2CDF               	goto	u815
  1734     04E5                     l1265:
  1735     04E5  3001               	movlw	1
  1736     04E6  07F4               	addwf	___awdiv@counter,f
  1737     04E7                     l1267:
  1738     04E7  1FF1               	btfss	___awdiv@divisor+1,7
  1739     04E8  2CEA               	goto	u821
  1740     04E9  2CEB               	goto	u820
  1741     04EA                     u821:
  1742     04EA  2CDE               	goto	l1263
  1743     04EB                     u820:
  1744     04EB                     l1269:
  1745     04EB  3001               	movlw	1
  1746     04EC                     u835:
  1747     04EC  1003               	clrc
  1748     04ED  0DF6               	rlf	___awdiv@quotient,f
  1749     04EE  0DF7               	rlf	___awdiv@quotient+1,f
  1750     04EF  3EFF               	addlw	-1
  1751     04F0  1D03               	skipz
  1752     04F1  2CEC               	goto	u835
  1753     04F2  0871               	movf	___awdiv@divisor+1,w
  1754     04F3  0273               	subwf	___awdiv@dividend+1,w
  1755     04F4  1D03               	skipz
  1756     04F5  2CF8               	goto	u845
  1757     04F6  0870               	movf	___awdiv@divisor,w
  1758     04F7  0272               	subwf	___awdiv@dividend,w
  1759     04F8                     u845:
  1760     04F8  1C03               	skipc
  1761     04F9  2CFB               	goto	u841
  1762     04FA  2CFC               	goto	u840
  1763     04FB                     u841:
  1764     04FB  2D03               	goto	l1275
  1765     04FC                     u840:
  1766     04FC                     l1271:
  1767     04FC  0870               	movf	___awdiv@divisor,w
  1768     04FD  02F2               	subwf	___awdiv@dividend,f
  1769     04FE  0871               	movf	___awdiv@divisor+1,w
  1770     04FF  1C03               	skipc
  1771     0500  03F3               	decf	___awdiv@dividend+1,f
  1772     0501  02F3               	subwf	___awdiv@dividend+1,f
  1773     0502                     l1273:
  1774     0502  1476               	bsf	___awdiv@quotient,0
  1775     0503                     l1275:
  1776     0503  3001               	movlw	1
  1777     0504                     u855:
  1778     0504  1003               	clrc
  1779     0505  0CF1               	rrf	___awdiv@divisor+1,f
  1780     0506  0CF0               	rrf	___awdiv@divisor,f
  1781     0507  3EFF               	addlw	-1
  1782     0508  1D03               	skipz
  1783     0509  2D04               	goto	u855
  1784     050A                     l1277:
  1785     050A  3001               	movlw	1
  1786     050B  02F4               	subwf	___awdiv@counter,f
  1787     050C  1D03               	btfss	3,2
  1788     050D  2D0F               	goto	u861
  1789     050E  2D10               	goto	u860
  1790     050F                     u861:
  1791     050F  2CEB               	goto	l1269
  1792     0510                     u860:
  1793     0510                     l1279:
  1794     0510  0875               	movf	___awdiv@sign,w
  1795     0511  1903               	btfsc	3,2
  1796     0512  2D14               	goto	u871
  1797     0513  2D15               	goto	u870
  1798     0514                     u871:
  1799     0514  2D1A               	goto	l1283
  1800     0515                     u870:
  1801     0515                     l1281:
  1802     0515  09F6               	comf	___awdiv@quotient,f
  1803     0516  09F7               	comf	___awdiv@quotient+1,f
  1804     0517  0AF6               	incf	___awdiv@quotient,f
  1805     0518  1903               	skipnz
  1806     0519  0AF7               	incf	___awdiv@quotient+1,f
  1807     051A                     l1283:
  1808     051A  0877               	movf	___awdiv@quotient+1,w
  1809     051B  00F1               	movwf	?___awdiv+1
  1810     051C  0876               	movf	___awdiv@quotient,w
  1811     051D  00F0               	movwf	?___awdiv
  1812     051E                     l398:
  1813     051E  0008               	return
  1814     051F                     __end_of___awdiv:
  1815                           
  1816                           	psect	text5
  1817     0392                     __ptext5:	
  1818 ;; *************** function _strlen *****************
  1819 ;; Defined at:
  1820 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  s               1    0[COMMON] PTR const unsigned char 
  1823 ;;		 -> msg(10), 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  a               1    2[COMMON] PTR const unsigned char 
  1826 ;;		 -> msg(10), 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2    0[COMMON] unsigned int 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         2       0       0       0       0
  1837 ;;      Locals:         1       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0
  1839 ;;      Totals:         3       0       0       0       0
  1840 ;;Total ram usage:        3 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849     0392                     _strlen:	
  1850                           ;psect for function _strlen
  1851                           
  1852     0392                     l1399:	
  1853                           ;incstack = 0
  1854                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1855                           
  1856     0392  0870               	movf	strlen@s,w
  1857     0393  00F2               	movwf	strlen@a
  1858     0394  2B97               	goto	l1403
  1859     0395                     l1401:
  1860     0395  3001               	movlw	1
  1861     0396  07F0               	addwf	strlen@s,f
  1862     0397                     l1403:
  1863     0397  0870               	movf	strlen@s,w
  1864     0398  0084               	movwf	4
  1865     0399  1383               	bcf	3,7	;select IRP bank0
  1866     039A  0800               	movf	0,w
  1867     039B  1D03               	btfss	3,2
  1868     039C  2B9E               	goto	u1051
  1869     039D  2B9F               	goto	u1050
  1870     039E                     u1051:
  1871     039E  2B95               	goto	l1401
  1872     039F                     u1050:
  1873     039F                     l1405:
  1874     039F  0872               	movf	strlen@a,w
  1875     03A0  0270               	subwf	strlen@s,w
  1876     03A1  00F0               	movwf	?_strlen
  1877     03A2  01F1               	clrf	?_strlen+1
  1878     03A3  1BF0               	btfsc	?_strlen,7
  1879     03A4  03F1               	decf	?_strlen+1,f
  1880     03A5                     l707:
  1881     03A5  0008               	return
  1882     03A6                     __end_of_strlen:
  1883                           
  1884                           	psect	text6
  1885     03C6                     __ptext6:	
  1886 ;; *************** function _read_matrix_keypad *****************
  1887 ;; Defined at:
  1888 ;;		line 95 in file "matrix_keypad.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  mode            1    wreg     unsigned char 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  mode            1    2[COMMON] unsigned char 
  1893 ;;  key             1    3[COMMON] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      unsigned char 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         2       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         2       0       0       0       0
  1907 ;;Total ram usage:        2 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 1
  1910 ;; This function calls:
  1911 ;;		_scan_keypad
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917     03C6                     _read_matrix_keypad:	
  1918                           ;psect for function _read_matrix_keypad
  1919                           
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1923                           ;read_matrix_keypad@mode stored from wreg
  1924     03C6  00F2               	movwf	read_matrix_keypad@mode
  1925     03C7                     l1369:
  1926                           
  1927                           ;matrix_keypad.c: 96:     static unsigned char once = 1;;matrix_keypad.c: 97:     unsign
      +                          ed char key;;matrix_keypad.c: 99:     key = scan_keypad();
  1928     03C7  120A  118A  251F  120A  118A  	fcall	_scan_keypad
  1929     03CC  00F3               	movwf	read_matrix_keypad@key
  1930     03CD                     l1371:
  1931                           
  1932                           ;matrix_keypad.c: 101:     if (mode == 0) {
  1933     03CD  0872               	movf	read_matrix_keypad@mode,w
  1934     03CE  1D03               	btfss	3,2
  1935     03CF  2BD1               	goto	u1011
  1936     03D0  2BD2               	goto	u1010
  1937     03D1                     u1011:
  1938     03D1  2BD4               	goto	l1379
  1939     03D2                     u1010:
  1940     03D2                     l1373:
  1941                           
  1942                           ;matrix_keypad.c: 102:         return key;
  1943     03D2  0873               	movf	read_matrix_keypad@key,w
  1944     03D3  2BE8               	goto	l155
  1945     03D4                     l1379:
  1946                           
  1947                           ;matrix_keypad.c: 104:         if ((key != 0xFF) && once) {
  1948     03D4  0A73               	incf	read_matrix_keypad@key,w
  1949     03D5  1903               	btfsc	3,2
  1950     03D6  2BD8               	goto	u1021
  1951     03D7  2BD9               	goto	u1020
  1952     03D8                     u1021:
  1953     03D8  2BE0               	goto	l1391
  1954     03D9                     u1020:
  1955     03D9                     l1381:
  1956     03D9  087C               	movf	read_matrix_keypad@once,w
  1957     03DA  1903               	btfsc	3,2
  1958     03DB  2BDD               	goto	u1031
  1959     03DC  2BDE               	goto	u1030
  1960     03DD                     u1031:
  1961     03DD  2BE0               	goto	l1391
  1962     03DE                     u1030:
  1963     03DE                     l1383:
  1964                           
  1965                           ;matrix_keypad.c: 105:             once = 0;
  1966     03DE  01FC               	clrf	read_matrix_keypad@once
  1967     03DF  2BD2               	goto	l1373
  1968     03E0                     l1391:
  1969     03E0  0A73               	incf	read_matrix_keypad@key,w
  1970     03E1  1D03               	btfss	3,2
  1971     03E2  2BE4               	goto	u1041
  1972     03E3  2BE5               	goto	u1040
  1973     03E4                     u1041:
  1974     03E4  2BE7               	goto	l1395
  1975     03E5                     u1040:
  1976     03E5                     l1393:
  1977                           
  1978                           ;matrix_keypad.c: 109:             once = 1;
  1979     03E5  3001               	movlw	1
  1980     03E6  00FC               	movwf	read_matrix_keypad@once
  1981     03E7                     l1395:
  1982                           
  1983                           ;matrix_keypad.c: 113:     return 0xFF;
  1984     03E7  30FF               	movlw	255
  1985     03E8                     l155:
  1986     03E8  0008               	return
  1987     03E9                     __end_of_read_matrix_keypad:
  1988                           
  1989                           	psect	text7
  1990     051F                     __ptext7:	
  1991 ;; *************** function _scan_keypad *****************
  1992 ;; Defined at:
  1993 ;;		line 29 in file "matrix_keypad.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  i               2    0[COMMON] int 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         2       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         2       0       0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_read_matrix_keypad
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020     051F                     _scan_keypad:	
  2021                           ;psect for function _scan_keypad
  2022                           
  2023     051F                     l1157:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  2026                           
  2027                           
  2028                           ;matrix_keypad.c: 30:     int i;;matrix_keypad.c: 32:     RD3 = 0;
  2029     051F  1283               	bcf	3,5	;RP0=0, select bank0
  2030     0520  1303               	bcf	3,6	;RP1=0, select bank0
  2031     0521  1188               	bcf	8,3	;volatile
  2032                           
  2033                           ;matrix_keypad.c: 33:     RD2 = 1;
  2034     0522  1508               	bsf	8,2	;volatile
  2035                           
  2036                           ;matrix_keypad.c: 34:     RD1 = 1;
  2037     0523  1488               	bsf	8,1	;volatile
  2038                           
  2039                           ;matrix_keypad.c: 35:     RD0 = 1;
  2040     0524  1408               	bsf	8,0	;volatile
  2041     0525                     l1159:
  2042                           
  2043                           ;matrix_keypad.c: 37:     for (i = 100; i--;);
  2044     0525  3064               	movlw	100
  2045     0526  00F0               	movwf	scan_keypad@i
  2046     0527  3000               	movlw	0
  2047     0528  00F1               	movwf	scan_keypad@i+1
  2048     0529                     l1161:
  2049     0529  30FF               	movlw	255
  2050     052A  07F0               	addwf	scan_keypad@i,f
  2051     052B  1803               	skipnc
  2052     052C  0AF1               	incf	scan_keypad@i+1,f
  2053     052D  30FF               	movlw	255
  2054     052E  07F1               	addwf	scan_keypad@i+1,f
  2055     052F  0A70               	incf	scan_keypad@i,w
  2056     0530  1D03               	skipz
  2057     0531  2D36               	goto	u621
  2058     0532  0A71               	incf	scan_keypad@i+1,w
  2059     0533  1D03               	btfss	3,2
  2060     0534  2D36               	goto	u621
  2061     0535  2D37               	goto	u620
  2062     0536                     u621:
  2063     0536  2D29               	goto	l1161
  2064     0537                     u620:
  2065     0537                     l119:
  2066                           
  2067                           ;matrix_keypad.c: 39:     if (RB0 == 0) {
  2068     0537  1283               	bcf	3,5	;RP0=0, select bank0
  2069     0538  1303               	bcf	3,6	;RP1=0, select bank0
  2070     0539  1806               	btfsc	6,0	;volatile
  2071     053A  2D3C               	goto	u631
  2072     053B  2D3D               	goto	u630
  2073     053C                     u631:
  2074     053C  2D3F               	goto	l120
  2075     053D                     u630:
  2076     053D                     l1163:
  2077                           
  2078                           ;matrix_keypad.c: 40:         return 1;
  2079     053D  3001               	movlw	1
  2080     053E  2DCA               	goto	l121
  2081     053F                     l120:
  2082     053F  1886               	btfsc	6,1	;volatile
  2083     0540  2D42               	goto	u641
  2084     0541  2D43               	goto	u640
  2085     0542                     u641:
  2086     0542  2D45               	goto	l123
  2087     0543                     u640:
  2088     0543                     l1169:
  2089                           
  2090                           ;matrix_keypad.c: 42:         return 2;
  2091     0543  3002               	movlw	2
  2092     0544  2DCA               	goto	l121
  2093     0545                     l123:
  2094     0545  1906               	btfsc	6,2	;volatile
  2095     0546  2D48               	goto	u651
  2096     0547  2D49               	goto	u650
  2097     0548                     u651:
  2098     0548  2D4B               	goto	l122
  2099     0549                     u650:
  2100     0549                     l1175:
  2101                           
  2102                           ;matrix_keypad.c: 44:         return 3;
  2103     0549  3003               	movlw	3
  2104     054A  2DCA               	goto	l121
  2105     054B                     l122:
  2106                           
  2107                           ;matrix_keypad.c: 47:     RD3 = 1;
  2108     054B  1588               	bsf	8,3	;volatile
  2109                           
  2110                           ;matrix_keypad.c: 48:     RD2 = 0;
  2111     054C  1108               	bcf	8,2	;volatile
  2112                           
  2113                           ;matrix_keypad.c: 49:     RD1 = 1;
  2114     054D  1488               	bsf	8,1	;volatile
  2115                           
  2116                           ;matrix_keypad.c: 50:     RD0 = 1;
  2117     054E  1408               	bsf	8,0	;volatile
  2118     054F                     l1179:
  2119                           
  2120                           ;matrix_keypad.c: 52:     for (i = 100; i--;);
  2121     054F  3064               	movlw	100
  2122     0550  00F0               	movwf	scan_keypad@i
  2123     0551  3000               	movlw	0
  2124     0552  00F1               	movwf	scan_keypad@i+1
  2125     0553                     l1181:
  2126     0553  30FF               	movlw	255
  2127     0554  07F0               	addwf	scan_keypad@i,f
  2128     0555  1803               	skipnc
  2129     0556  0AF1               	incf	scan_keypad@i+1,f
  2130     0557  30FF               	movlw	255
  2131     0558  07F1               	addwf	scan_keypad@i+1,f
  2132     0559  0A70               	incf	scan_keypad@i,w
  2133     055A  1D03               	skipz
  2134     055B  2D60               	goto	u661
  2135     055C  0A71               	incf	scan_keypad@i+1,w
  2136     055D  1D03               	btfss	3,2
  2137     055E  2D60               	goto	u661
  2138     055F  2D61               	goto	u660
  2139     0560                     u661:
  2140     0560  2D53               	goto	l1181
  2141     0561                     u660:
  2142     0561                     l128:
  2143                           
  2144                           ;matrix_keypad.c: 54:     if (RB0 == 0) {
  2145     0561  1283               	bcf	3,5	;RP0=0, select bank0
  2146     0562  1303               	bcf	3,6	;RP1=0, select bank0
  2147     0563  1806               	btfsc	6,0	;volatile
  2148     0564  2D66               	goto	u671
  2149     0565  2D67               	goto	u670
  2150     0566                     u671:
  2151     0566  2D69               	goto	l129
  2152     0567                     u670:
  2153     0567                     l1183:
  2154                           
  2155                           ;matrix_keypad.c: 55:         return 4;
  2156     0567  3004               	movlw	4
  2157     0568  2DCA               	goto	l121
  2158     0569                     l129:
  2159     0569  1886               	btfsc	6,1	;volatile
  2160     056A  2D6C               	goto	u681
  2161     056B  2D6D               	goto	u680
  2162     056C                     u681:
  2163     056C  2D6F               	goto	l131
  2164     056D                     u680:
  2165     056D                     l1189:
  2166                           
  2167                           ;matrix_keypad.c: 57:         return 5;
  2168     056D  3005               	movlw	5
  2169     056E  2DCA               	goto	l121
  2170     056F                     l131:
  2171     056F  1906               	btfsc	6,2	;volatile
  2172     0570  2D72               	goto	u691
  2173     0571  2D73               	goto	u690
  2174     0572                     u691:
  2175     0572  2D75               	goto	l130
  2176     0573                     u690:
  2177     0573                     l1195:
  2178                           
  2179                           ;matrix_keypad.c: 59:         return 6;
  2180     0573  3006               	movlw	6
  2181     0574  2DCA               	goto	l121
  2182     0575                     l130:
  2183                           
  2184                           ;matrix_keypad.c: 62:     RD3 = 1;
  2185     0575  1588               	bsf	8,3	;volatile
  2186                           
  2187                           ;matrix_keypad.c: 63:     RD2 = 1;
  2188     0576  1508               	bsf	8,2	;volatile
  2189                           
  2190                           ;matrix_keypad.c: 64:     RD1 = 0;
  2191     0577  1088               	bcf	8,1	;volatile
  2192                           
  2193                           ;matrix_keypad.c: 65:     RD0 = 1;
  2194     0578  1408               	bsf	8,0	;volatile
  2195     0579                     l1199:
  2196                           
  2197                           ;matrix_keypad.c: 67:     for (i = 100; i--;);
  2198     0579  3064               	movlw	100
  2199     057A  00F0               	movwf	scan_keypad@i
  2200     057B  3000               	movlw	0
  2201     057C  00F1               	movwf	scan_keypad@i+1
  2202     057D                     l1201:
  2203     057D  30FF               	movlw	255
  2204     057E  07F0               	addwf	scan_keypad@i,f
  2205     057F  1803               	skipnc
  2206     0580  0AF1               	incf	scan_keypad@i+1,f
  2207     0581  30FF               	movlw	255
  2208     0582  07F1               	addwf	scan_keypad@i+1,f
  2209     0583  0A70               	incf	scan_keypad@i,w
  2210     0584  1D03               	skipz
  2211     0585  2D8A               	goto	u701
  2212     0586  0A71               	incf	scan_keypad@i+1,w
  2213     0587  1D03               	btfss	3,2
  2214     0588  2D8A               	goto	u701
  2215     0589  2D8B               	goto	u700
  2216     058A                     u701:
  2217     058A  2D7D               	goto	l1201
  2218     058B                     u700:
  2219     058B                     l136:
  2220                           
  2221                           ;matrix_keypad.c: 69:     if (RB0 == 0) {
  2222     058B  1283               	bcf	3,5	;RP0=0, select bank0
  2223     058C  1303               	bcf	3,6	;RP1=0, select bank0
  2224     058D  1806               	btfsc	6,0	;volatile
  2225     058E  2D90               	goto	u711
  2226     058F  2D91               	goto	u710
  2227     0590                     u711:
  2228     0590  2D93               	goto	l137
  2229     0591                     u710:
  2230     0591                     l1203:
  2231                           
  2232                           ;matrix_keypad.c: 70:         return 7;
  2233     0591  3007               	movlw	7
  2234     0592  2DCA               	goto	l121
  2235     0593                     l137:
  2236     0593  1886               	btfsc	6,1	;volatile
  2237     0594  2D96               	goto	u721
  2238     0595  2D97               	goto	u720
  2239     0596                     u721:
  2240     0596  2D99               	goto	l139
  2241     0597                     u720:
  2242     0597                     l1209:
  2243                           
  2244                           ;matrix_keypad.c: 72:         return 8;
  2245     0597  3008               	movlw	8
  2246     0598  2DCA               	goto	l121
  2247     0599                     l139:
  2248     0599  1906               	btfsc	6,2	;volatile
  2249     059A  2D9C               	goto	u731
  2250     059B  2D9D               	goto	u730
  2251     059C                     u731:
  2252     059C  2D9F               	goto	l138
  2253     059D                     u730:
  2254     059D                     l1215:
  2255                           
  2256                           ;matrix_keypad.c: 74:         return 9;
  2257     059D  3009               	movlw	9
  2258     059E  2DCA               	goto	l121
  2259     059F                     l138:
  2260                           
  2261                           ;matrix_keypad.c: 77:     RD3 = 1;
  2262     059F  1588               	bsf	8,3	;volatile
  2263                           
  2264                           ;matrix_keypad.c: 78:     RD2 = 1;
  2265     05A0  1508               	bsf	8,2	;volatile
  2266                           
  2267                           ;matrix_keypad.c: 79:     RD1 = 1;
  2268     05A1  1488               	bsf	8,1	;volatile
  2269                           
  2270                           ;matrix_keypad.c: 80:     RD0 = 0;
  2271     05A2  1008               	bcf	8,0	;volatile
  2272     05A3                     l1219:
  2273                           
  2274                           ;matrix_keypad.c: 82:     for (i = 100; i--;);
  2275     05A3  3064               	movlw	100
  2276     05A4  00F0               	movwf	scan_keypad@i
  2277     05A5  3000               	movlw	0
  2278     05A6  00F1               	movwf	scan_keypad@i+1
  2279     05A7                     l1221:
  2280     05A7  30FF               	movlw	255
  2281     05A8  07F0               	addwf	scan_keypad@i,f
  2282     05A9  1803               	skipnc
  2283     05AA  0AF1               	incf	scan_keypad@i+1,f
  2284     05AB  30FF               	movlw	255
  2285     05AC  07F1               	addwf	scan_keypad@i+1,f
  2286     05AD  0A70               	incf	scan_keypad@i,w
  2287     05AE  1D03               	skipz
  2288     05AF  2DB4               	goto	u741
  2289     05B0  0A71               	incf	scan_keypad@i+1,w
  2290     05B1  1D03               	btfss	3,2
  2291     05B2  2DB4               	goto	u741
  2292     05B3  2DB5               	goto	u740
  2293     05B4                     u741:
  2294     05B4  2DA7               	goto	l1221
  2295     05B5                     u740:
  2296     05B5                     l144:
  2297                           
  2298                           ;matrix_keypad.c: 84:     if (RB0 == 0) {
  2299     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2300     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2301     05B7  1806               	btfsc	6,0	;volatile
  2302     05B8  2DBA               	goto	u751
  2303     05B9  2DBB               	goto	u750
  2304     05BA                     u751:
  2305     05BA  2DBD               	goto	l145
  2306     05BB                     u750:
  2307     05BB                     l1223:
  2308                           
  2309                           ;matrix_keypad.c: 85:         return '*';
  2310     05BB  302A               	movlw	42
  2311     05BC  2DCA               	goto	l121
  2312     05BD                     l145:
  2313     05BD  1886               	btfsc	6,1	;volatile
  2314     05BE  2DC0               	goto	u761
  2315     05BF  2DC1               	goto	u760
  2316     05C0                     u761:
  2317     05C0  2DC3               	goto	l147
  2318     05C1                     u760:
  2319     05C1                     l1229:
  2320                           
  2321                           ;matrix_keypad.c: 87:         return 0;
  2322     05C1  3000               	movlw	0
  2323     05C2  2DCA               	goto	l121
  2324     05C3                     l147:
  2325     05C3  1906               	btfsc	6,2	;volatile
  2326     05C4  2DC6               	goto	u771
  2327     05C5  2DC7               	goto	u770
  2328     05C6                     u771:
  2329     05C6  2DC9               	goto	l1239
  2330     05C7                     u770:
  2331     05C7                     l1235:
  2332                           
  2333                           ;matrix_keypad.c: 89:         return '#';
  2334     05C7  3023               	movlw	35
  2335     05C8  2DCA               	goto	l121
  2336     05C9                     l1239:
  2337                           
  2338                           ;matrix_keypad.c: 92:     return 0xFF;
  2339     05C9  30FF               	movlw	255
  2340     05CA                     l121:
  2341     05CA  0008               	return
  2342     05CB                     __end_of_scan_keypad:
  2343                           
  2344                           	psect	text8
  2345     0353                     __ptext8:	
  2346 ;; *************** function _init_config *****************
  2347 ;; Defined at:
  2348 ;;		line 25 in file "main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 3
  2369 ;; This function calls:
  2370 ;;		_init_clcd
  2371 ;;		_init_matrix_keypad
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377     0353                     _init_config:	
  2378                           ;psect for function _init_config
  2379                           
  2380     0353                     l1333:	
  2381                           ;incstack = 0
  2382                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  2383                           
  2384                           
  2385                           ;main.c: 26: 
  2386     0353  120A  118A  235E  120A  118A  	fcall	_init_matrix_keypad
  2387                           
  2388                           ;main.c: 27:     for (int i = 4; i <= 7; i++) {
  2389     0358  120A  118A  2348  120A  118A  	fcall	_init_clcd
  2390     035D                     l51:
  2391     035D  0008               	return
  2392     035E                     __end_of_init_config:
  2393                           
  2394                           	psect	text9
  2395     035E                     __ptext9:	
  2396 ;; *************** function _init_matrix_keypad *****************
  2397 ;; Defined at:
  2398 ;;		line 10 in file "matrix_keypad.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2412 ;;      Params:         0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_init_config
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     035E                     _init_matrix_keypad:	
  2426                           ;psect for function _init_matrix_keypad
  2427                           
  2428     035E                     l1145:	
  2429                           ;incstack = 0
  2430                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  2431                           
  2432                           
  2433                           ;matrix_keypad.c: 13:     TRISB = TRISB | 0x07;
  2434     035E  1683               	bsf	3,5	;RP0=1, select bank1
  2435     035F  1303               	bcf	3,6	;RP1=0, select bank1
  2436     0360  0806               	movf	6,w	;volatile
  2437     0361  3807               	iorlw	7
  2438     0362  0086               	movwf	6	;volatile
  2439                           
  2440                           ;matrix_keypad.c: 17:     TRISD = TRISD & 0xF0;
  2441     0363  0808               	movf	8,w	;volatile
  2442     0364  39F0               	andlw	240
  2443     0365  0088               	movwf	8	;volatile
  2444     0366                     l1147:
  2445                           
  2446                           ;matrix_keypad.c: 20:     nRBPU = 0;
  2447     0366  1381               	bcf	1,7	;volatile
  2448     0367                     l1149:
  2449                           
  2450                           ;matrix_keypad.c: 23:     RD3 = 1;
  2451     0367  1283               	bcf	3,5	;RP0=0, select bank0
  2452     0368  1303               	bcf	3,6	;RP1=0, select bank0
  2453     0369  1588               	bsf	8,3	;volatile
  2454     036A                     l1151:
  2455                           
  2456                           ;matrix_keypad.c: 24:     RD2 = 1;
  2457     036A  1508               	bsf	8,2	;volatile
  2458     036B                     l1153:
  2459                           
  2460                           ;matrix_keypad.c: 25:     RD1 = 1;
  2461     036B  1488               	bsf	8,1	;volatile
  2462     036C                     l1155:
  2463                           
  2464                           ;matrix_keypad.c: 26:     RD0 = 1;
  2465     036C  1408               	bsf	8,0	;volatile
  2466     036D                     l114:
  2467     036D  0008               	return
  2468     036E                     __end_of_init_matrix_keypad:
  2469                           
  2470                           	psect	text10
  2471     0348                     __ptext10:	
  2472 ;; *************** function _init_clcd *****************
  2473 ;; Defined at:
  2474 ;;		line 40 in file "clcd.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 2
  2495 ;; This function calls:
  2496 ;;		_init_display_controller
  2497 ;; This function is called by:
  2498 ;;		_init_config
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502     0348                     _init_clcd:	
  2503                           ;psect for function _init_clcd
  2504                           
  2505     0348                     l1135:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  2508                           
  2509                           
  2510                           ;clcd.c: 42:     TRISD = 0x00;
  2511     0348  1683               	bsf	3,5	;RP0=1, select bank1
  2512     0349  1303               	bcf	3,6	;RP1=0, select bank1
  2513     034A  0188               	clrf	8	;volatile
  2514     034B                     l1137:
  2515                           
  2516                           ;clcd.c: 45:     TRISE2 = 0;
  2517     034B  1109               	bcf	9,2	;volatile
  2518     034C                     l1139:
  2519                           
  2520                           ;clcd.c: 46:     TRISE1 = 0;
  2521     034C  1089               	bcf	9,1	;volatile
  2522     034D                     l1141:
  2523                           
  2524                           ;clcd.c: 48:     init_display_controller();
  2525     034D  120A  118A  240E  120A  118A  	fcall	_init_display_controller
  2526     0352                     l23:
  2527     0352  0008               	return
  2528     0353                     __end_of_init_clcd:
  2529                           
  2530                           	psect	text11
  2531     040E                     __ptext11:	
  2532 ;; *************** function _init_display_controller *****************
  2533 ;; Defined at:
  2534 ;;		line 20 in file "clcd.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          2       0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 1
  2555 ;; This function calls:
  2556 ;;		_clcd_write
  2557 ;; This function is called by:
  2558 ;;		_init_clcd
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562     040E                     _init_display_controller:	
  2563                           ;psect for function _init_display_controller
  2564                           
  2565     040E                     l1115:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  2568                           
  2569                           
  2570                           ;clcd.c: 22:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2571     040E  30C3               	movlw	195
  2572     040F  00F5               	movwf	??_init_display_controller+1
  2573     0410  30CD               	movlw	205
  2574     0411  00F4               	movwf	??_init_display_controller
  2575     0412                     u1197:
  2576     0412  0BF4               	decfsz	??_init_display_controller,f
  2577     0413  2C12               	goto	u1197
  2578     0414  0BF5               	decfsz	??_init_display_controller+1,f
  2579     0415  2C12               	goto	u1197
  2580     0416                     l1117:
  2581                           
  2582                           ;clcd.c: 25:     clcd_write(0x33, 0);
  2583     0416  01F0               	clrf	clcd_write@mode
  2584     0417  3033               	movlw	51
  2585     0418  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2586     041D                     l1119:
  2587                           
  2588                           ;clcd.c: 26:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2589     041D  301B               	movlw	27
  2590     041E  00F5               	movwf	??_init_display_controller+1
  2591     041F  309E               	movlw	158
  2592     0420  00F4               	movwf	??_init_display_controller
  2593     0421                     u1207:
  2594     0421  0BF4               	decfsz	??_init_display_controller,f
  2595     0422  2C21               	goto	u1207
  2596     0423  0BF5               	decfsz	??_init_display_controller+1,f
  2597     0424  2C21               	goto	u1207
  2598     0425  0000               	nop
  2599                           
  2600                           ;clcd.c: 27:     clcd_write(0x33, 0);
  2601     0426  01F0               	clrf	clcd_write@mode
  2602     0427  3033               	movlw	51
  2603     0428  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2604     042D                     l1121:
  2605                           
  2606                           ;clcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2607     042D  30A6               	movlw	166
  2608     042E  00F4               	movwf	??_init_display_controller
  2609     042F                     u1217:
  2610     042F  0BF4               	decfsz	??_init_display_controller,f
  2611     0430  2C2F               	goto	u1217
  2612     0431  0000               	nop
  2613     0432                     l1123:
  2614                           
  2615                           ;clcd.c: 29:     clcd_write(0x33, 0);
  2616     0432  01F0               	clrf	clcd_write@mode
  2617     0433  3033               	movlw	51
  2618     0434  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2619     0439                     l1125:
  2620                           
  2621                           ;clcd.c: 30:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2622     0439  2C3A               	nop2	;2 cycle nop
  2623     043A  2C3B               	nop2	;2 cycle nop
  2624     043B  0000               	nop
  2625     043C                     l1127:
  2626                           
  2627                           ;clcd.c: 32:     clcd_write(0x38, 0);
  2628     043C  01F0               	clrf	clcd_write@mode
  2629     043D  3038               	movlw	56
  2630     043E  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2631     0443                     l1129:
  2632                           
  2633                           ;clcd.c: 33:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2634     0443  30A6               	movlw	166
  2635     0444  00F4               	movwf	??_init_display_controller
  2636     0445                     u1227:
  2637     0445  0BF4               	decfsz	??_init_display_controller,f
  2638     0446  2C45               	goto	u1227
  2639     0447  0000               	nop
  2640                           
  2641                           ;clcd.c: 34:     clcd_write(0x01, 0);
  2642     0448  01F0               	clrf	clcd_write@mode
  2643     0449  3001               	movlw	1
  2644     044A  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2645     044F                     l1131:
  2646                           
  2647                           ;clcd.c: 35:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2648     044F  3004               	movlw	4
  2649     0450  00F5               	movwf	??_init_display_controller+1
  2650     0451  303D               	movlw	61
  2651     0452  00F4               	movwf	??_init_display_controller
  2652     0453                     u1237:
  2653     0453  0BF4               	decfsz	??_init_display_controller,f
  2654     0454  2C53               	goto	u1237
  2655     0455  0BF5               	decfsz	??_init_display_controller+1,f
  2656     0456  2C53               	goto	u1237
  2657     0457  2C58               	nop2
  2658     0458                     l1133:
  2659                           
  2660                           ;clcd.c: 36:     clcd_write(0x0C, 0);
  2661     0458  01F0               	clrf	clcd_write@mode
  2662     0459  300C               	movlw	12
  2663     045A  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2664                           
  2665                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2666     045F  30A6               	movlw	166
  2667     0460  00F4               	movwf	??_init_display_controller
  2668     0461                     u1247:
  2669     0461  0BF4               	decfsz	??_init_display_controller,f
  2670     0462  2C61               	goto	u1247
  2671     0463  0000               	nop
  2672     0464                     l20:
  2673     0464  0008               	return
  2674     0465                     __end_of_init_display_controller:
  2675                           
  2676                           	psect	text12
  2677     03E9                     __ptext12:	
  2678 ;; *************** function _clcd_print *****************
  2679 ;; Defined at:
  2680 ;;		line 56 in file "clcd.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  str             1    4[COMMON] PTR const unsigned char 
  2683 ;;		 -> STR_2(5), STR_1(15), 
  2684 ;;  addr            1    5[COMMON] unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         2       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0
  2699 ;;      Totals:         2       0       0       0       0
  2700 ;;Total ram usage:        2 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 1
  2703 ;; This function calls:
  2704 ;;		_clcd_write
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710     03E9                     _clcd_print:	
  2711                           ;psect for function _clcd_print
  2712                           
  2713     03E9                     l1325:	
  2714                           ;incstack = 0
  2715                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2716                           
  2717                           
  2718                           ;clcd.c: 57:     clcd_write(addr, 0);
  2719     03E9  01F0               	clrf	clcd_write@mode
  2720     03EA  0875               	movf	clcd_print@addr,w
  2721     03EB  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2722                           
  2723                           ;clcd.c: 59:     while (*str != '\0') {
  2724     03F0  2C01               	goto	l1331
  2725     03F1                     l1327:
  2726                           
  2727                           ;clcd.c: 60:         clcd_write(*str, 1);
  2728     03F1  01F0               	clrf	clcd_write@mode
  2729     03F2  0AF0               	incf	clcd_write@mode,f
  2730     03F3  0874               	movf	clcd_print@str,w
  2731     03F4  0084               	movwf	4
  2732     03F5  120A  118A  2003  120A  118A  	fcall	stringdir
  2733     03FA  120A  118A  23A6  120A  118A  	fcall	_clcd_write
  2734     03FF                     l1329:
  2735                           
  2736                           ;clcd.c: 61:         str++;
  2737     03FF  3001               	movlw	1
  2738     0400  07F4               	addwf	clcd_print@str,f
  2739     0401                     l1331:
  2740                           
  2741                           ;clcd.c: 59:     while (*str != '\0') {
  2742     0401  0874               	movf	clcd_print@str,w
  2743     0402  0084               	movwf	4
  2744     0403  120A  118A  2003  120A  118A  	fcall	stringdir
  2745     0408  3A00               	xorlw	0
  2746     0409  1D03               	skipz
  2747     040A  2C0C               	goto	u971
  2748     040B  2C0D               	goto	u970
  2749     040C                     u971:
  2750     040C  2BF1               	goto	l1327
  2751     040D                     u970:
  2752     040D                     l32:
  2753     040D  0008               	return
  2754     040E                     __end_of_clcd_print:
  2755                           
  2756                           	psect	text13
  2757     03A6                     __ptext13:	
  2758 ;; *************** function _clcd_write *****************
  2759 ;; Defined at:
  2760 ;;		line 9 in file "clcd.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  byte            1    wreg     unsigned char 
  2763 ;;  mode            1    0[COMMON] unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  byte            1    3[COMMON] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         1       0       0       0       0
  2776 ;;      Locals:         1       0       0       0       0
  2777 ;;      Temps:          2       0       0       0       0
  2778 ;;      Totals:         4       0       0       0       0
  2779 ;;Total ram usage:        4 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_init_display_controller
  2785 ;;		_clcd_putch
  2786 ;;		_clcd_print
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790     03A6                     _clcd_write:	
  2791                           ;psect for function _clcd_write
  2792                           
  2793                           
  2794                           ;incstack = 0
  2795                           ; Regs used in _clcd_write: [wreg]
  2796                           ;clcd_write@byte stored from wreg
  2797     03A6  00F3               	movwf	clcd_write@byte
  2798     03A7                     l1107:
  2799                           
  2800                           ;clcd.c: 10:     RE2 = mode;
  2801     03A7  1870               	btfsc	clcd_write@mode,0
  2802     03A8  2BAA               	goto	u601
  2803     03A9  2BAE               	goto	u600
  2804     03AA                     u601:
  2805     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2806     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2807     03AC  1509               	bsf	9,2	;volatile
  2808     03AD  2BB1               	goto	u614
  2809     03AE                     u600:
  2810     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2811     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2812     03B0  1109               	bcf	9,2	;volatile
  2813     03B1                     u614:
  2814     03B1                     l1109:
  2815                           
  2816                           ;clcd.c: 11:     PORTD = byte;
  2817     03B1  0873               	movf	clcd_write@byte,w
  2818     03B2  0088               	movwf	8	;volatile
  2819     03B3                     l1111:
  2820                           
  2821                           ;clcd.c: 13:     RE1 = 1;
  2822     03B3  1489               	bsf	9,1	;volatile
  2823                           
  2824                           ;clcd.c: 14:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2825     03B4  30A6               	movlw	166
  2826     03B5  00F1               	movwf	??_clcd_write
  2827     03B6                     u1257:
  2828     03B6  0BF1               	decfsz	??_clcd_write,f
  2829     03B7  2BB6               	goto	u1257
  2830     03B8  0000               	nop
  2831     03B9                     l1113:
  2832                           
  2833                           ;clcd.c: 15:     RE1 = 0;
  2834     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2835     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2836     03BB  1089               	bcf	9,1	;volatile
  2837                           
  2838                           ;clcd.c: 17:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2839     03BC  301B               	movlw	27
  2840     03BD  00F2               	movwf	??_clcd_write+1
  2841     03BE  309E               	movlw	158
  2842     03BF  00F1               	movwf	??_clcd_write
  2843     03C0                     u1267:
  2844     03C0  0BF1               	decfsz	??_clcd_write,f
  2845     03C1  2BC0               	goto	u1267
  2846     03C2  0BF2               	decfsz	??_clcd_write+1,f
  2847     03C3  2BC0               	goto	u1267
  2848     03C4  0000               	nop
  2849     03C5                     l17:
  2850     03C5  0008               	return
  2851     03C6                     __end_of_clcd_write:
  2852     0002                     ___latbits      equ	2
  2853     007E                     btemp           set	126	;btemp
  2854     007E                     wtemp0          set	126
  2855                           
  2856                           	psect	config
  2857                           
  2858                           ;Config register CONFIG @ 0x2007
  2859                           ;	Oscillator Selection bits
  2860                           ;	FOSC = 0x3, unprogrammed default
  2861                           ;	Watchdog Timer Enable bit
  2862                           ;	WDTE = OFF, WDT disabled
  2863                           ;	Power-up Timer Enable bit
  2864                           ;	PWRTE = 0x1, unprogrammed default
  2865                           ;	Brown-out Reset Enable bit
  2866                           ;	BOREN = 0x1, unprogrammed default
  2867                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2868                           ;	LVP = 0x1, unprogrammed default
  2869                           ;	Data EEPROM Memory Code Protection bit
  2870                           ;	CPD = 0x1, unprogrammed default
  2871                           ;	Flash Program Memory Write Enable bits
  2872                           ;	WRT = 0x3, unprogrammed default
  2873                           ;	In-Circuit Debugger Mode bit
  2874                           ;	DEBUG = 0x1, unprogrammed default
  2875                           ;	Flash Program Memory Code Protection bit
  2876                           ;	CP = 0x1, unprogrammed default
  2877     2007                     	org	8199
  2878     2007  3FFB               	dw	16379

Data Sizes:
    Strings     20
    Constant    0
    Data        11
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     16      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[5]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 10
		 -> msg(BANK0[10]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> msg(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_update_clcd_msg
    _update_clcd_msg->___awdiv
    _clcd_putch->_clcd_write
    _read_matrix_keypad->_scan_keypad
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    2483
                                              0 BANK0     16    16      0
                            ___awdiv
                         _clcd_print
                         _clcd_putch
                        _init_config
                 _read_matrix_keypad
                             _strlen
                    _update_clcd_msg
 ---------------------------------------------------------------------------------
 (1) _update_clcd_msg                                      4     2      2    1023
                                              8 COMMON     4     2      2
                            ___awdiv
                            ___awmod
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     115
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     308
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _strlen                                               3     1      2      91
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     210
                                              2 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0      61
                          _init_clcd
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0      61
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0      61
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           2     0      2     132
                                              4 COMMON     2     0      2
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1      61
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
   _read_matrix_keypad
     _scan_keypad
   _strlen
   _update_clcd_msg
     ___awdiv
     ___awmod
     _clcd_putch

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     16      29     36.2%
BITBANK0            80      0       0      0.0%
COMMON              14     12      13     92.9%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      42      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Dec 25 20:21:12 2024

                              pc 0002                   clcd_print@addr 0075                               l20 0464  
                             l23 0352                               l32 040D                               l17 03C5  
                             l26 037E                               l51 035D                               l70 0709  
                             l80 07E1                               l58 067F                     ___awdiv@sign 0075  
                             fsr 0004               _init_matrix_keypad 035E                  _update_clcd_msg 05CB  
                            l120 053F                              l121 05CA                              l114 036D  
                            l130 0575                              l122 054B                              l131 056F  
                            l123 0545                              l119 0537                              l144 05B5  
                            l136 058B                              l128 0561                              l145 05BD  
                            l137 0593                              l129 0569                              l138 059F  
                            l147 05C3                              l139 0599                              l155 03E8  
                            l411 04BB                              l707 03A5                              l398 051E  
                            _RB0 0030                              _RB1 0031                              _RB2 0032  
                            _RD0 0040                              _RD1 0041                              _RD2 0042  
                            _RE1 0049                              _RD3 0043                              _RE2 004A  
                            u600 03AE                              u601 03AA                              u700 058B  
                            u620 0537                              u701 058A                              u621 0536  
                            u614 03B1                              u710 0591                              u630 053D  
                            u711 0590                              u631 053C                              u720 0597  
                            u640 0543                              u800 04DB                              u721 0596  
                            u641 0542                              u801 04DA                              u730 059D  
                            u650 0549                              u731 059C                              u651 0548  
                            u740 05B5                              u660 0561                              u820 04EB  
                            u900 0480                              u741 05B4                              u661 0560  
                            u821 04EA                              u901 047F                              u750 05BB  
                            u670 0567                              u751 05BA                              u671 0566  
                            u815 04DF                              u760 05C1                              u680 056D  
                            u840 04FC                              u920 0490                              u761 05C0  
                            u681 056C                              u841 04FB                              u921 048F  
                            u770 05C7                              u690 0573                              u930 049A  
                            u771 05C6                              u691 0572                              u835 04EC  
                            u931 0499                              u915 0484                              u860 0510  
                            u780 04C1                              u861 050F                              u845 04F8  
                            u781 04C0                              u870 0515                              u790 04CC  
                            u950 04AD                              u871 0514                              u855 0504  
                            u791 04CB                              u951 04AC                              u935 0496  
                            u960 04B2                              u880 046A                              u961 04B1  
                            u945 04A1                              u881 0469                              u970 040D  
                            u890 0475                              u971 040C                              u891 0474  
                            u980 05CF                              u981 05CE                              u990 05DE  
                            u991 05DD                              u995 05DA                              _msg 0030  
                 clcd_putch@addr 0074                              fsr0 0004                   clcd_putch@data 0075  
                            indf 0000                     ___awmod@sign 0075              ?_init_matrix_keypad 0070  
                           l1111 03B3                             l1113 03B9                             l1121 042D  
                           l1201 057D                             l1107 03A7                             l1131 044F  
                           l1123 0432                             l1115 040E                             l1203 0591  
                           l1109 03B1                             l1133 0458                             l1125 0439  
                           l1117 0416                             l1141 034D                             l1221 05A7  
                           l1301 0480                             l1127 043C                             l1119 041D  
                           l1135 0348                             l1151 036A                             l1223 05BB  
                           l1215 059D                             l1311 049A                             l1303 0483  
                           l1143 036F                             l1129 0443                             l1137 034B  
                           l1153 036B                             l1145 035E                             l1209 0597  
                           l1161 0529                             l1401 0395                             l1321 04B7  
                           l1313 04A0                             l1305 048A                             l1331 0401  
                           l1139 034C                             l1155 036C                             l1147 0366  
                           l1235 05C7                             l1219 05A3                             l1163 053D  
                           l1403 0397                             l1251 04C8                             l1243 04BC  
                           l1315 04A7                             l1307 048C                             l1411 0685  
                           l1325 03E9                             l1149 0367                             l1333 0353  
                           l1229 05C1                             l1181 0553                             l1157 051F  
                           l1405 039F                             l1261 04DB                             l1253 04CC  
                           l1245 04BD                             l1309 0490                             l1317 04AD  
                           l1341 05DE                             l1501 07C2                             l1421 06A1  
                           l1413 068E                             l1327 03F1                             l1239 05C9  
                           l1183 0567                             l1175 0549                             l1159 0525  
                           l1271 04FC                             l1263 04DE                             l1255 04D1  
                           l1247 04C1                             l1319 04B2                             l1351 0626  
                           l1343 05E0                             l1335 05CB                             l1503 07D8  
                           l1431 06CD                             l1423 06AC                             l1415 0697  
                           l1329 03FF                             l1169 0543                             l1281 0515  
                           l1273 0502                             l1265 04E5                             l1257 04D3  
                           l1249 04C6                             l1353 0638                             l1345 05F2  
                           l1337 05CF                             l1441 06F7                             l1433 06D1  
                           l1425 06B2                             l1417 069B                             l1409 0680  
                           l1195 0573                             l1179 054F                             l1371 03CD  
                           l1283 051A                             l1275 0503                             l1267 04E7  
                           l1259 04D5                             l1291 046A                             l1363 065F  
                           l1355 0649                             l1347 0603                             l1339 05D1  
                           l1451 0710                             l1427 06B7                             l1435 06DB  
                           l1419 069F                             l1189 056D                             l1381 03D9  
                           l1373 03D2                             l1277 050A                             l1269 04EB  
                           l1293 046F                             l1365 066C                             l1357 065B  
                           l1349 0615                             l1461 0734                             l1437 06E1  
                           l1445 06FE                             l1429 06C4                             l1199 0579  
                           l1383 03DE                             l1391 03E0                             l1279 0510  
                           l1295 0471                             l1287 0465                             l1367 0672  
                           l1471 0753                             l1463 0741                             l1455 0724  
                           l1447 0704                             l1439 06EE                             l1393 03E5  
                           l1369 03C7                             l1297 0475                             l1289 0466  
                           l1481 0782                             l1473 075B                             l1465 0747  
                           l1457 072A                             l1449 070A                             l1395 03E7  
                           l1379 03D4                             l1299 047A                             l1491 079C  
                           l1467 074D                             l1459 072C                             l1493 079E  
                           l1485 078B                             l1477 0769                             l1469 074F  
                           l1399 0392                             l1495 07A1                             l1479 0776  
                           l1487 0790                             l1497 07AE                             l1489 0796  
                           l1499 07BA                             STR_1 0009                             STR_2 0018  
                           u1000 067F                             u1001 067E                             u1010 03D2  
                           u1011 03D1                             u1020 03D9                             u1100 06EE  
                           u1021 03D8                             u1005 067B                             u1101 06ED  
                           u1030 03DE                             u1110 0704                             u1031 03DD  
                           u1111 0703                             u1040 03E5                             u1120 0710  
                           u1041 03E4                             u1121 070F                             u1105 06EA  
                           u1050 039F                             u1130 072A                             u1051 039E  
                           u1131 0729                             u1140 0734                             u1060 06B2  
                           u1141 0733                             u1061 06B1                             u1150 0747  
                           u1070 06B7                             u1207 0421                             u1151 0746  
                           u1071 06B6                             u1160 0768                             u1080 06C4  
                           u1217 042F                             u1161 0767                             u1081 06C3  
                           u1170 0796                             u1090 06E1                             u1227 0445  
                           u1171 0795                             u1091 06E0                             u1180 07D8  
                           u1237 0453                             u1181 07D7                             u1165 0764  
                           u1085 06C0                             u1247 0461                             u1257 03B6  
                           u1185 07D4                             u1267 03C0                             u1197 0412  
                           _main 0680                             _temp 003C                             btemp 007E  
                           start 0000             ??_init_matrix_keypad 0070                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                  __end_of___awdiv 051F  
                __end_of___awmod 04BC                  ___awdiv@divisor 0070                     ?_init_config 0070  
                ___awdiv@counter 0074                            _PORTD 0008                            _TRISB 0086  
                          _TRISD 0088                            _nRBPU 040F               _read_matrix_keypad 03C6  
                          main@i 002D                            pclath 000A              ?_read_matrix_keypad 0070  
                          status 0003                            wtemp0 007E                     ?_scan_keypad 0070  
                __initialization 07E5          __end_of_update_clcd_msg 0680                     __end_of_main 07E5  
           ??_read_matrix_keypad 0072                           ??_main 0020                 ___awdiv@dividend 0072  
                         _TRISE1 0449                           _TRISE2 044A          _init_display_controller 040E  
                      ??___awdiv 0074                        ??___awmod 0074                 ___awdiv@quotient 0076  
                ___awmod@divisor 0070                  ___awmod@counter 0074                           _strlen 0392  
                   __pdataCOMMON 007C                 update_clcd_msg@i 007A          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070                     __pidataBANK0 033E                 ?_update_clcd_msg 0078  
                     __pbssBANK0 003A        ??_init_display_controller 0074                       _clcd_print 03E9  
                     _clcd_putch 036E                       _clcd_write 03A6                       __pmaintext 0680  
                        ?_strlen 0070                       __stringtab 0003                          ___awdiv 04BC  
                        ___awmod 0465                main@right_marquee 0025                          __ptext1 05CB  
                        __ptext2 036E                          __ptext3 0465                          __ptext4 04BC  
                        __ptext5 0392                          __ptext6 03C6                          __ptext7 051F  
                        __ptext8 0353                          __ptext9 035E  __end_of_init_display_controller 0465  
              __end_of_init_clcd 0353                 ___awmod@dividend 0072                          main@len 0029  
                        main@key 002F             end_of_initialization 07FC                 main@left_marquee 0027  
                    ?_clcd_print 0074                      ?_clcd_putch 0074                      ?_clcd_write 0070  
                        strlen@a 0072                          strlen@s 0070                    clcd_print@str 0074  
                  __pidataCOMMON 033D                   __end_of_strlen 03A6              start_initialization 07E5  
                   scan_keypad@i 0070           read_matrix_keypad@mode 0072           read_matrix_keypad@once 007C  
                     init_fetch0 037F                      __pdataBANK0 0030                         ??_strlen 0072  
                  ??_init_config 0076                        ___latbits 0002                    __pcstackBANK0 0020  
                  ??_scan_keypad 0070                         ?___awdiv 0070                         ?___awmod 0070  
                      __pstrings 0003                        _init_clcd 0348              __end_of_init_config 035E  
       ?_init_display_controller 0070                     ??_clcd_print 0076                     ??_clcd_putch 0075  
     __end_of_init_matrix_keypad 036E                     ??_clcd_write 0071              __end_of_scan_keypad 05CB  
                    __stringbase 0008                        main@count 003A               __end_of_clcd_print 040E  
             __end_of_clcd_putch 037F               __end_of_clcd_write 03C6                       ?_init_clcd 0070  
              ??_update_clcd_msg 007A            read_matrix_keypad@key 0073                main@run_edit_flag 0023  
     __end_of_read_matrix_keypad 03E9               __end_of__stringtab 0009                      _init_config 0353  
                       __ptext10 0348                         __ptext11 040E                         __ptext12 03E9  
                       __ptext13 03A6             update_clcd_msg@count 0078                      _scan_keypad 051F  
                       main@i_89 002B                         init_ram0 0383                      ??_init_clcd 0076  
                      stringcode 0003                         stringdir 0003                         stringtab 0003  
