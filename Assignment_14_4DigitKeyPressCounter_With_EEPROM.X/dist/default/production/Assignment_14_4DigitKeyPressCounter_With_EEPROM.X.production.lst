

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Dec 25 20:18:49 2024

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0004                     fsr             equ	4
    70     0004                     fsr0            equ	4
    71     0000                     indf            equ	0
    72     0000                     indf0           equ	0
    73     0002                     pc              equ	2
    74     0002                     pcl             equ	2
    75     000A                     pclath          equ	10
    76     0003                     status          equ	3
    77     0000                     INDF            equ	0	;# 
    78     0001                     TMR0            equ	1	;# 
    79     0002                     PCL             equ	2	;# 
    80     0003                     STATUS          equ	3	;# 
    81     0004                     FSR             equ	4	;# 
    82     0005                     PORTA           equ	5	;# 
    83     0006                     PORTB           equ	6	;# 
    84     0007                     PORTC           equ	7	;# 
    85     0008                     PORTD           equ	8	;# 
    86     0009                     PORTE           equ	9	;# 
    87     000A                     PCLATH          equ	10	;# 
    88     000B                     INTCON          equ	11	;# 
    89     000C                     PIR1            equ	12	;# 
    90     000D                     PIR2            equ	13	;# 
    91     000E                     TMR1            equ	14	;# 
    92     000E                     TMR1L           equ	14	;# 
    93     000F                     TMR1H           equ	15	;# 
    94     0010                     T1CON           equ	16	;# 
    95     0011                     TMR2            equ	17	;# 
    96     0012                     T2CON           equ	18	;# 
    97     0013                     SSPBUF          equ	19	;# 
    98     0014                     SSPCON          equ	20	;# 
    99     0015                     CCPR1           equ	21	;# 
   100     0015                     CCPR1L          equ	21	;# 
   101     0016                     CCPR1H          equ	22	;# 
   102     0017                     CCP1CON         equ	23	;# 
   103     0018                     RCSTA           equ	24	;# 
   104     0019                     TXREG           equ	25	;# 
   105     001A                     RCREG           equ	26	;# 
   106     001B                     CCPR2           equ	27	;# 
   107     001B                     CCPR2L          equ	27	;# 
   108     001C                     CCPR2H          equ	28	;# 
   109     001D                     CCP2CON         equ	29	;# 
   110     001E                     ADRESH          equ	30	;# 
   111     001F                     ADCON0          equ	31	;# 
   112     0081                     OPTION_REG      equ	129	;# 
   113     0085                     TRISA           equ	133	;# 
   114     0086                     TRISB           equ	134	;# 
   115     0087                     TRISC           equ	135	;# 
   116     0088                     TRISD           equ	136	;# 
   117     0089                     TRISE           equ	137	;# 
   118     008C                     PIE1            equ	140	;# 
   119     008D                     PIE2            equ	141	;# 
   120     008E                     PCON            equ	142	;# 
   121     0091                     SSPCON2         equ	145	;# 
   122     0092                     PR2             equ	146	;# 
   123     0093                     SSPADD          equ	147	;# 
   124     0094                     SSPSTAT         equ	148	;# 
   125     0098                     TXSTA           equ	152	;# 
   126     0099                     SPBRG           equ	153	;# 
   127     009C                     CMCON           equ	156	;# 
   128     009D                     CVRCON          equ	157	;# 
   129     009E                     ADRESL          equ	158	;# 
   130     009F                     ADCON1          equ	159	;# 
   131     010C                     EEDATA          equ	268	;# 
   132     010D                     EEADR           equ	269	;# 
   133     010E                     EEDATH          equ	270	;# 
   134     010F                     EEADRH          equ	271	;# 
   135     018C                     EECON1          equ	396	;# 
   136     018D                     EECON2          equ	397	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     PORTA           equ	5	;# 
   143     0006                     PORTB           equ	6	;# 
   144     0007                     PORTC           equ	7	;# 
   145     0008                     PORTD           equ	8	;# 
   146     0009                     PORTE           equ	9	;# 
   147     000A                     PCLATH          equ	10	;# 
   148     000B                     INTCON          equ	11	;# 
   149     000C                     PIR1            equ	12	;# 
   150     000D                     PIR2            equ	13	;# 
   151     000E                     TMR1            equ	14	;# 
   152     000E                     TMR1L           equ	14	;# 
   153     000F                     TMR1H           equ	15	;# 
   154     0010                     T1CON           equ	16	;# 
   155     0011                     TMR2            equ	17	;# 
   156     0012                     T2CON           equ	18	;# 
   157     0013                     SSPBUF          equ	19	;# 
   158     0014                     SSPCON          equ	20	;# 
   159     0015                     CCPR1           equ	21	;# 
   160     0015                     CCPR1L          equ	21	;# 
   161     0016                     CCPR1H          equ	22	;# 
   162     0017                     CCP1CON         equ	23	;# 
   163     0018                     RCSTA           equ	24	;# 
   164     0019                     TXREG           equ	25	;# 
   165     001A                     RCREG           equ	26	;# 
   166     001B                     CCPR2           equ	27	;# 
   167     001B                     CCPR2L          equ	27	;# 
   168     001C                     CCPR2H          equ	28	;# 
   169     001D                     CCP2CON         equ	29	;# 
   170     001E                     ADRESH          equ	30	;# 
   171     001F                     ADCON0          equ	31	;# 
   172     0081                     OPTION_REG      equ	129	;# 
   173     0085                     TRISA           equ	133	;# 
   174     0086                     TRISB           equ	134	;# 
   175     0087                     TRISC           equ	135	;# 
   176     0088                     TRISD           equ	136	;# 
   177     0089                     TRISE           equ	137	;# 
   178     008C                     PIE1            equ	140	;# 
   179     008D                     PIE2            equ	141	;# 
   180     008E                     PCON            equ	142	;# 
   181     0091                     SSPCON2         equ	145	;# 
   182     0092                     PR2             equ	146	;# 
   183     0093                     SSPADD          equ	147	;# 
   184     0094                     SSPSTAT         equ	148	;# 
   185     0098                     TXSTA           equ	152	;# 
   186     0099                     SPBRG           equ	153	;# 
   187     009C                     CMCON           equ	156	;# 
   188     009D                     CVRCON          equ	157	;# 
   189     009E                     ADRESL          equ	158	;# 
   190     009F                     ADCON1          equ	159	;# 
   191     010C                     EEDATA          equ	268	;# 
   192     010D                     EEADR           equ	269	;# 
   193     010E                     EEDATH          equ	270	;# 
   194     010F                     EEADRH          equ	271	;# 
   195     018C                     EECON1          equ	396	;# 
   196     018D                     EECON2          equ	397	;# 
   197     0000                     INDF            equ	0	;# 
   198     0001                     TMR0            equ	1	;# 
   199     0002                     PCL             equ	2	;# 
   200     0003                     STATUS          equ	3	;# 
   201     0004                     FSR             equ	4	;# 
   202     0005                     PORTA           equ	5	;# 
   203     0006                     PORTB           equ	6	;# 
   204     0007                     PORTC           equ	7	;# 
   205     0008                     PORTD           equ	8	;# 
   206     0009                     PORTE           equ	9	;# 
   207     000A                     PCLATH          equ	10	;# 
   208     000B                     INTCON          equ	11	;# 
   209     000C                     PIR1            equ	12	;# 
   210     000D                     PIR2            equ	13	;# 
   211     000E                     TMR1            equ	14	;# 
   212     000E                     TMR1L           equ	14	;# 
   213     000F                     TMR1H           equ	15	;# 
   214     0010                     T1CON           equ	16	;# 
   215     0011                     TMR2            equ	17	;# 
   216     0012                     T2CON           equ	18	;# 
   217     0013                     SSPBUF          equ	19	;# 
   218     0014                     SSPCON          equ	20	;# 
   219     0015                     CCPR1           equ	21	;# 
   220     0015                     CCPR1L          equ	21	;# 
   221     0016                     CCPR1H          equ	22	;# 
   222     0017                     CCP1CON         equ	23	;# 
   223     0018                     RCSTA           equ	24	;# 
   224     0019                     TXREG           equ	25	;# 
   225     001A                     RCREG           equ	26	;# 
   226     001B                     CCPR2           equ	27	;# 
   227     001B                     CCPR2L          equ	27	;# 
   228     001C                     CCPR2H          equ	28	;# 
   229     001D                     CCP2CON         equ	29	;# 
   230     001E                     ADRESH          equ	30	;# 
   231     001F                     ADCON0          equ	31	;# 
   232     0081                     OPTION_REG      equ	129	;# 
   233     0085                     TRISA           equ	133	;# 
   234     0086                     TRISB           equ	134	;# 
   235     0087                     TRISC           equ	135	;# 
   236     0088                     TRISD           equ	136	;# 
   237     0089                     TRISE           equ	137	;# 
   238     008C                     PIE1            equ	140	;# 
   239     008D                     PIE2            equ	141	;# 
   240     008E                     PCON            equ	142	;# 
   241     0091                     SSPCON2         equ	145	;# 
   242     0092                     PR2             equ	146	;# 
   243     0093                     SSPADD          equ	147	;# 
   244     0094                     SSPSTAT         equ	148	;# 
   245     0098                     TXSTA           equ	152	;# 
   246     0099                     SPBRG           equ	153	;# 
   247     009C                     CMCON           equ	156	;# 
   248     009D                     CVRCON          equ	157	;# 
   249     009E                     ADRESL          equ	158	;# 
   250     009F                     ADCON1          equ	159	;# 
   251     010C                     EEDATA          equ	268	;# 
   252     010D                     EEADR           equ	269	;# 
   253     010E                     EEDATH          equ	270	;# 
   254     010F                     EEADRH          equ	271	;# 
   255     018C                     EECON1          equ	396	;# 
   256     018D                     EECON2          equ	397	;# 
   257     0000                     INDF            equ	0	;# 
   258     0001                     TMR0            equ	1	;# 
   259     0002                     PCL             equ	2	;# 
   260     0003                     STATUS          equ	3	;# 
   261     0004                     FSR             equ	4	;# 
   262     0005                     PORTA           equ	5	;# 
   263     0006                     PORTB           equ	6	;# 
   264     0007                     PORTC           equ	7	;# 
   265     0008                     PORTD           equ	8	;# 
   266     0009                     PORTE           equ	9	;# 
   267     000A                     PCLATH          equ	10	;# 
   268     000B                     INTCON          equ	11	;# 
   269     000C                     PIR1            equ	12	;# 
   270     000D                     PIR2            equ	13	;# 
   271     000E                     TMR1            equ	14	;# 
   272     000E                     TMR1L           equ	14	;# 
   273     000F                     TMR1H           equ	15	;# 
   274     0010                     T1CON           equ	16	;# 
   275     0011                     TMR2            equ	17	;# 
   276     0012                     T2CON           equ	18	;# 
   277     0013                     SSPBUF          equ	19	;# 
   278     0014                     SSPCON          equ	20	;# 
   279     0015                     CCPR1           equ	21	;# 
   280     0015                     CCPR1L          equ	21	;# 
   281     0016                     CCPR1H          equ	22	;# 
   282     0017                     CCP1CON         equ	23	;# 
   283     0018                     RCSTA           equ	24	;# 
   284     0019                     TXREG           equ	25	;# 
   285     001A                     RCREG           equ	26	;# 
   286     001B                     CCPR2           equ	27	;# 
   287     001B                     CCPR2L          equ	27	;# 
   288     001C                     CCPR2H          equ	28	;# 
   289     001D                     CCP2CON         equ	29	;# 
   290     001E                     ADRESH          equ	30	;# 
   291     001F                     ADCON0          equ	31	;# 
   292     0081                     OPTION_REG      equ	129	;# 
   293     0085                     TRISA           equ	133	;# 
   294     0086                     TRISB           equ	134	;# 
   295     0087                     TRISC           equ	135	;# 
   296     0088                     TRISD           equ	136	;# 
   297     0089                     TRISE           equ	137	;# 
   298     008C                     PIE1            equ	140	;# 
   299     008D                     PIE2            equ	141	;# 
   300     008E                     PCON            equ	142	;# 
   301     0091                     SSPCON2         equ	145	;# 
   302     0092                     PR2             equ	146	;# 
   303     0093                     SSPADD          equ	147	;# 
   304     0094                     SSPSTAT         equ	148	;# 
   305     0098                     TXSTA           equ	152	;# 
   306     0099                     SPBRG           equ	153	;# 
   307     009C                     CMCON           equ	156	;# 
   308     009D                     CVRCON          equ	157	;# 
   309     009E                     ADRESL          equ	158	;# 
   310     009F                     ADCON1          equ	159	;# 
   311     010C                     EEDATA          equ	268	;# 
   312     010D                     EEADR           equ	269	;# 
   313     010E                     EEDATH          equ	270	;# 
   314     010F                     EEADRH          equ	271	;# 
   315     018C                     EECON1          equ	396	;# 
   316     018D                     EECON2          equ	397	;# 
   317     0000                     INDF            equ	0	;# 
   318     0001                     TMR0            equ	1	;# 
   319     0002                     PCL             equ	2	;# 
   320     0003                     STATUS          equ	3	;# 
   321     0004                     FSR             equ	4	;# 
   322     0005                     PORTA           equ	5	;# 
   323     0006                     PORTB           equ	6	;# 
   324     0007                     PORTC           equ	7	;# 
   325     0008                     PORTD           equ	8	;# 
   326     0009                     PORTE           equ	9	;# 
   327     000A                     PCLATH          equ	10	;# 
   328     000B                     INTCON          equ	11	;# 
   329     000C                     PIR1            equ	12	;# 
   330     000D                     PIR2            equ	13	;# 
   331     000E                     TMR1            equ	14	;# 
   332     000E                     TMR1L           equ	14	;# 
   333     000F                     TMR1H           equ	15	;# 
   334     0010                     T1CON           equ	16	;# 
   335     0011                     TMR2            equ	17	;# 
   336     0012                     T2CON           equ	18	;# 
   337     0013                     SSPBUF          equ	19	;# 
   338     0014                     SSPCON          equ	20	;# 
   339     0015                     CCPR1           equ	21	;# 
   340     0015                     CCPR1L          equ	21	;# 
   341     0016                     CCPR1H          equ	22	;# 
   342     0017                     CCP1CON         equ	23	;# 
   343     0018                     RCSTA           equ	24	;# 
   344     0019                     TXREG           equ	25	;# 
   345     001A                     RCREG           equ	26	;# 
   346     001B                     CCPR2           equ	27	;# 
   347     001B                     CCPR2L          equ	27	;# 
   348     001C                     CCPR2H          equ	28	;# 
   349     001D                     CCP2CON         equ	29	;# 
   350     001E                     ADRESH          equ	30	;# 
   351     001F                     ADCON0          equ	31	;# 
   352     0081                     OPTION_REG      equ	129	;# 
   353     0085                     TRISA           equ	133	;# 
   354     0086                     TRISB           equ	134	;# 
   355     0087                     TRISC           equ	135	;# 
   356     0088                     TRISD           equ	136	;# 
   357     0089                     TRISE           equ	137	;# 
   358     008C                     PIE1            equ	140	;# 
   359     008D                     PIE2            equ	141	;# 
   360     008E                     PCON            equ	142	;# 
   361     0091                     SSPCON2         equ	145	;# 
   362     0092                     PR2             equ	146	;# 
   363     0093                     SSPADD          equ	147	;# 
   364     0094                     SSPSTAT         equ	148	;# 
   365     0098                     TXSTA           equ	152	;# 
   366     0099                     SPBRG           equ	153	;# 
   367     009C                     CMCON           equ	156	;# 
   368     009D                     CVRCON          equ	157	;# 
   369     009E                     ADRESL          equ	158	;# 
   370     009F                     ADCON1          equ	159	;# 
   371     010C                     EEDATA          equ	268	;# 
   372     010D                     EEADR           equ	269	;# 
   373     010E                     EEDATH          equ	270	;# 
   374     010F                     EEADRH          equ	271	;# 
   375     018C                     EECON1          equ	396	;# 
   376     018D                     EECON2          equ	397	;# 
   377     0000                     INDF            equ	0	;# 
   378     0001                     TMR0            equ	1	;# 
   379     0002                     PCL             equ	2	;# 
   380     0003                     STATUS          equ	3	;# 
   381     0004                     FSR             equ	4	;# 
   382     0005                     PORTA           equ	5	;# 
   383     0006                     PORTB           equ	6	;# 
   384     0007                     PORTC           equ	7	;# 
   385     0008                     PORTD           equ	8	;# 
   386     0009                     PORTE           equ	9	;# 
   387     000A                     PCLATH          equ	10	;# 
   388     000B                     INTCON          equ	11	;# 
   389     000C                     PIR1            equ	12	;# 
   390     000D                     PIR2            equ	13	;# 
   391     000E                     TMR1            equ	14	;# 
   392     000E                     TMR1L           equ	14	;# 
   393     000F                     TMR1H           equ	15	;# 
   394     0010                     T1CON           equ	16	;# 
   395     0011                     TMR2            equ	17	;# 
   396     0012                     T2CON           equ	18	;# 
   397     0013                     SSPBUF          equ	19	;# 
   398     0014                     SSPCON          equ	20	;# 
   399     0015                     CCPR1           equ	21	;# 
   400     0015                     CCPR1L          equ	21	;# 
   401     0016                     CCPR1H          equ	22	;# 
   402     0017                     CCP1CON         equ	23	;# 
   403     0018                     RCSTA           equ	24	;# 
   404     0019                     TXREG           equ	25	;# 
   405     001A                     RCREG           equ	26	;# 
   406     001B                     CCPR2           equ	27	;# 
   407     001B                     CCPR2L          equ	27	;# 
   408     001C                     CCPR2H          equ	28	;# 
   409     001D                     CCP2CON         equ	29	;# 
   410     001E                     ADRESH          equ	30	;# 
   411     001F                     ADCON0          equ	31	;# 
   412     0081                     OPTION_REG      equ	129	;# 
   413     0085                     TRISA           equ	133	;# 
   414     0086                     TRISB           equ	134	;# 
   415     0087                     TRISC           equ	135	;# 
   416     0088                     TRISD           equ	136	;# 
   417     0089                     TRISE           equ	137	;# 
   418     008C                     PIE1            equ	140	;# 
   419     008D                     PIE2            equ	141	;# 
   420     008E                     PCON            equ	142	;# 
   421     0091                     SSPCON2         equ	145	;# 
   422     0092                     PR2             equ	146	;# 
   423     0093                     SSPADD          equ	147	;# 
   424     0094                     SSPSTAT         equ	148	;# 
   425     0098                     TXSTA           equ	152	;# 
   426     0099                     SPBRG           equ	153	;# 
   427     009C                     CMCON           equ	156	;# 
   428     009D                     CVRCON          equ	157	;# 
   429     009E                     ADRESL          equ	158	;# 
   430     009F                     ADCON1          equ	159	;# 
   431     010C                     EEDATA          equ	268	;# 
   432     010D                     EEADR           equ	269	;# 
   433     010E                     EEDATH          equ	270	;# 
   434     010F                     EEADRH          equ	271	;# 
   435     018C                     EECON1          equ	396	;# 
   436     018D                     EECON2          equ	397	;# 
   437                           
   438                           	psect	idataBANK0
   439     0399                     __pidataBANK0:
   440                           
   441                           ;initializer for _digits
   442     0399  343F               	retlw	63
   443     039A  3406               	retlw	6
   444     039B  345B               	retlw	91
   445     039C  344F               	retlw	79
   446     039D  3466               	retlw	102
   447     039E  346D               	retlw	109
   448     039F  347D               	retlw	125
   449     03A0  3407               	retlw	7
   450     03A1  347F               	retlw	127
   451     03A2  346F               	retlw	111
   452                           
   453                           ;initializer for _ssd
   454     03A3  343F               	retlw	63
   455     03A4  343F               	retlw	63
   456     03A5  343F               	retlw	63
   457     03A6  343F               	retlw	63
   458     0013                     _SSPBUF         set	19
   459     0008                     _PORTD          set	8
   460     0005                     _PORTA          set	5
   461     0006                     _PORTB          set	6
   462     00A5                     _SSPEN          set	165
   463     00A3                     _SSPM3          set	163
   464     0091                     _SSPCON2        set	145
   465     0093                     _SSPADD         set	147
   466     0085                     _TRISA          set	133
   467     0088                     _TRISD          set	136
   468     0086                     _TRISB          set	134
   469     048E                     _ACKSTAT        set	1166
   470     048C                     _ACKEN          set	1164
   471     048D                     _ACKDT          set	1165
   472     048B                     _RCEN           set	1163
   473     048A                     _PEN            set	1162
   474     0489                     _RSEN           set	1161
   475     0488                     _SEN            set	1160
   476     04A2                     _R_nW           set	1186
   477                           
   478                           	psect	cinit
   479     07EA                     start_initialization:	
   480                           ; #config settings
   481                           
   482     07EA                     __initialization:
   483                           
   484                           ; Initialize objects allocated to BANK0
   485     07EA  1383               	bcf	3,7	;select IRP bank0
   486     07EB  3045               	movlw	low (__pdataBANK0+14)
   487     07EC  00FD               	movwf	btemp+-1
   488     07ED  3003               	movlw	high __pidataBANK0
   489     07EE  00FE               	movwf	btemp
   490     07EF  3099               	movlw	low __pidataBANK0
   491     07F0  00FF               	movwf	btemp+1
   492     07F1  3037               	movlw	low __pdataBANK0
   493     07F2  0084               	movwf	4
   494     07F3  120A  118A  23BB  120A  118A  	fcall	init_ram0
   495                           
   496                           ; Clear objects allocated to BANK0
   497     07F8  01C5               	clrf	__pbssBANK0& (0+127)
   498     07F9  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   499     07FA  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   500     07FB  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   501     07FC                     end_of_initialization:	
   502                           ;End of C runtime variable initialization code
   503                           
   504     07FC                     __end_of__initialization:
   505     07FC  0183               	clrf	3
   506     07FD  120A  118A  2E7E   	ljmp	_main	;jump to C main() function
   507                           
   508                           	psect	bssBANK0
   509     0045                     __pbssBANK0:
   510     0045                     main@count:
   511     0045                     	ds	2
   512     0047                     main@key_pressed_time:
   513     0047                     	ds	2
   514                           
   515                           	psect	dataBANK0
   516     0037                     __pdataBANK0:
   517     0037                     _digits:
   518     0037                     	ds	10
   519     0041                     _ssd:
   520     0041                     	ds	4
   521                           
   522                           	psect	inittext
   523     03B7                     init_fetch0:	
   524                           ;	Called with low address in FSR and high address in W
   525                           
   526     03B7  087E               	movf	btemp,w
   527     03B8  008A               	movwf	10
   528     03B9  087F               	movf	btemp+1,w
   529     03BA  0082               	movwf	2
   530     03BB                     init_ram0:	
   531                           ;Called with:
   532                           ;	high address of idata address in btemp 
   533                           ;	low address of idata address in btemp+1 
   534                           ;	low address of data in FSR
   535                           ;	high address + 1 of data in btemp-1
   536                           
   537     03BB  120A  118A  23B7  120A  118A  	fcall	init_fetch0
   538     03C0  0080               	movwf	0
   539     03C1  0A84               	incf	4,f
   540     03C2  0804               	movf	4,w
   541     03C3  067D               	xorwf	btemp+-1,w
   542     03C4  1903               	btfsc	3,2
   543     03C5  3400               	retlw	0
   544     03C6  0AFF               	incf	btemp+1,f
   545     03C7  1903               	btfsc	3,2
   546     03C8  0AFE               	incf	btemp,f
   547     03C9  2BBB               	goto	init_ram0
   548                           
   549                           	psect	cstackCOMMON
   550     0070                     __pcstackCOMMON:
   551     0070                     ?_init_ssd:
   552     0070                     ?_init_digital_keypad:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_read_ext_eeprom:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_display_ssd:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_read_digital_keypad:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_display:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_i2c_start:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_i2c_stop:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_i2c_rep_start:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_i2c_read:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_init_config:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_main:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_i2c_wait_for_idle:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_i2c_write:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?___lwdiv:	
   592                           ; 2 bytes @ 0x0
   593                           
   594     0070                     ?___lldiv:	
   595                           ; 2 bytes @ 0x0
   596                           
   597     0070                     display@data:	
   598                           ; 4 bytes @ 0x0
   599                           
   600     0070                     i2c_read@ack:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     i2c_write@data:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     display_ssd@count:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ___lwdiv@divisor:	
   610                           ; 2 bytes @ 0x0
   611                           
   612     0070                     ___lldiv@divisor:	
   613                           ; 2 bytes @ 0x0
   614                           
   615     0070                     ??_init_ssd:	
   616                           ; 4 bytes @ 0x0
   617                           
   618     0070                     ??_init_digital_keypad:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ??_read_digital_keypad:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ??_i2c_start:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ??_i2c_write:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ??_i2c_stop:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ??_i2c_rep_start:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ??_i2c_read:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ??_i2c_wait_for_idle:	
   640                           ; 1 bytes @ 0x0
   641                           
   642                           
   643                           ; 1 bytes @ 0x0
   644     0070                     	ds	1
   645     0071                     i2c_read@data:
   646     0071                     ??_display:	
   647                           ; 1 bytes @ 0x1
   648                           
   649                           
   650                           ; 1 bytes @ 0x1
   651     0071                     	ds	1
   652     0072                     read_ext_eeprom@address:
   653     0072                     ___lwdiv@dividend:	
   654                           ; 1 bytes @ 0x2
   655                           
   656     0072                     ??_read_ext_eeprom:	
   657                           ; 2 bytes @ 0x2
   658                           
   659     0072                     ??_display_ssd:	
   660                           ; 1 bytes @ 0x2
   661                           
   662                           
   663                           ; 1 bytes @ 0x2
   664     0072                     	ds	1
   665     0073                     read_ext_eeprom@data:
   666                           
   667                           ; 1 bytes @ 0x3
   668     0073                     	ds	1
   669     0074                     ?___wmul:
   670     0074                     ___wmul@multiplier:	
   671                           ; 2 bytes @ 0x4
   672                           
   673     0074                     ___lwdiv@quotient:	
   674                           ; 2 bytes @ 0x4
   675                           
   676     0074                     ___lldiv@dividend:	
   677                           ; 2 bytes @ 0x4
   678                           
   679     0074                     ??___lwdiv:	
   680                           ; 4 bytes @ 0x4
   681                           
   682                           
   683                           ; 1 bytes @ 0x4
   684     0074                     	ds	1
   685     0075                     display@wait:
   686                           
   687                           ; 4 bytes @ 0x5
   688     0075                     	ds	1
   689     0076                     ___lwdiv@counter:
   690     0076                     ___wmul@multiplicand:	
   691                           ; 1 bytes @ 0x6
   692                           
   693                           
   694                           ; 2 bytes @ 0x6
   695     0076                     	ds	1
   696     0077                     ?___lwmod:
   697     0077                     ___lwmod@divisor:	
   698                           ; 2 bytes @ 0x7
   699                           
   700                           
   701                           ; 2 bytes @ 0x7
   702     0077                     	ds	1
   703     0078                     ___wmul@product:
   704     0078                     ??___wmul:	
   705                           ; 2 bytes @ 0x8
   706                           
   707     0078                     ??___lldiv:	
   708                           ; 1 bytes @ 0x8
   709                           
   710                           
   711                           ; 1 bytes @ 0x8
   712     0078                     	ds	1
   713     0079                     display@digit:
   714     0079                     ___lwmod@dividend:	
   715                           ; 1 bytes @ 0x9
   716                           
   717     0079                     ___lldiv@quotient:	
   718                           ; 2 bytes @ 0x9
   719                           
   720                           
   721                           ; 4 bytes @ 0x9
   722     0079                     	ds	2
   723     007B                     ___lwmod@counter:
   724     007B                     ??___lwmod:	
   725                           ; 1 bytes @ 0xB
   726                           
   727                           
   728                           ; 1 bytes @ 0xB
   729     007B                     	ds	1
   730     007C                     ?_write_ext_eeprom:
   731     007C                     write_ext_eeprom@data:	
   732                           ; 1 bytes @ 0xC
   733                           
   734                           
   735                           ; 1 bytes @ 0xC
   736     007C                     	ds	1
   737     007D                     ___lldiv@counter:
   738     007D                     ??_write_ext_eeprom:	
   739                           ; 1 bytes @ 0xD
   740                           
   741     007D                     ??_eeprom_test:	
   742                           ; 1 bytes @ 0xD
   743                           
   744                           
   745                           ; 1 bytes @ 0xD
   746     007D                     	ds	1
   747     007E                     ??_init_config:
   748                           
   749                           	psect	cstackBANK0
   750     0020                     __pcstackBANK0:	
   751                           ; 1 bytes @ 0xE
   752                           
   753     0020                     ?_init_i2c:
   754     0020                     write_ext_eeprom@wait:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0020                     init_i2c@baud:	
   758                           ; 4 bytes @ 0x0
   759                           
   760                           
   761                           ; 4 bytes @ 0x0
   762     0020                     	ds	4
   763     0024                     write_ext_eeprom@address:
   764     0024                     ??_init_i2c:	
   765                           ; 1 bytes @ 0x4
   766                           
   767                           
   768                           ; 1 bytes @ 0x4
   769     0024                     	ds	1
   770     0025                     ?_eeprom_test:
   771     0025                     eeprom_test@count:	
   772                           ; 1 bytes @ 0x5
   773                           
   774                           
   775                           ; 2 bytes @ 0x5
   776     0025                     	ds	3
   777     0028                     ??_main:
   778                           
   779                           ; 1 bytes @ 0x8
   780     0028                     	ds	12
   781     0034                     main@once:
   782                           
   783                           ; 2 bytes @ 0x14
   784     0034                     	ds	2
   785     0036                     main@key:
   786                           
   787                           ; 1 bytes @ 0x16
   788     0036                     	ds	1
   789                           
   790                           	psect	maintext
   791     067E                     __pmaintext:	
   792 ;;
   793 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   794 ;;
   795 ;; *************** function _main *****************
   796 ;; Defined at:
   797 ;;		line 35 in file "main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  once            2   20[BANK0 ] int 
   802 ;;  key             1   22[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : B00/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       0       0       0       0
   813 ;;      Locals:         0       3       0       0       0
   814 ;;      Temps:          0      12       0       0       0
   815 ;;      Totals:         0      15       0       0       0
   816 ;;Total ram usage:       15 bytes
   817 ;; Hardware stack levels required when called: 4
   818 ;; This function calls:
   819 ;;		___lwdiv
   820 ;;		___lwmod
   821 ;;		___wmul
   822 ;;		_display
   823 ;;		_display_ssd
   824 ;;		_eeprom_test
   825 ;;		_init_config
   826 ;;		_read_digital_keypad
   827 ;;		_read_ext_eeprom
   828 ;; This function is called by:
   829 ;;		Startup code after reset
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833     067E                     _main:	
   834                           ;psect for function _main
   835                           
   836     067E                     l1132:	
   837                           ;incstack = 0
   838                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   839                           
   840                           
   841                           ;main.c: 37: ;main.c: 38:         key = read_digital_keypad();;main.c: 39: 
   842     067E  1283               	bcf	3,5	;RP0=0, select bank0
   843     067F  1303               	bcf	3,6	;RP1=0, select bank0
   844     0680  01B4               	clrf	main@once
   845     0681  01B5               	clrf	main@once+1
   846     0682                     l1134:
   847                           
   848                           ;main.c: 40: ;main.c: 42:             key_pressed_time++;
   849     0682  120A  118A  23CA  120A  118A  	fcall	_init_config
   850     0687                     l1136:
   851                           
   852                           ;main.c: 44:         if (key == 1 && key_pressed_time > 100)
   853     0687  3000               	movlw	0
   854     0688  120A  118A  242A  120A  118A  	fcall	_read_ext_eeprom
   855     068D  3A01               	xorlw	1
   856     068E  1D03               	skipz
   857     068F  2E91               	goto	u811
   858     0690  2E92               	goto	u810
   859     0691                     u811:
   860     0691  2F01               	goto	l1140
   861     0692                     u810:
   862     0692                     l1138:
   863                           
   864                           ;main.c: 45:         {
   865     0692  3001               	movlw	1
   866     0693  120A  118A  242A  120A  118A  	fcall	_read_ext_eeprom
   867     0698  1283               	bcf	3,5	;RP0=0, select bank0
   868     0699  1303               	bcf	3,6	;RP1=0, select bank0
   869     069A  00A8               	movwf	??_main
   870     069B  01A9               	clrf	??_main+1
   871     069C  0828               	movf	??_main,w
   872     069D  00F4               	movwf	___wmul@multiplier
   873     069E  0829               	movf	??_main+1,w
   874     069F  00F5               	movwf	___wmul@multiplier+1
   875     06A0  30E8               	movlw	232
   876     06A1  00F6               	movwf	___wmul@multiplicand
   877     06A2  3003               	movlw	3
   878     06A3  00F7               	movwf	___wmul@multiplicand+1
   879     06A4  120A  118A  2405  120A  118A  	fcall	___wmul
   880     06A9  0874               	movf	?___wmul,w
   881     06AA  1283               	bcf	3,5	;RP0=0, select bank0
   882     06AB  1303               	bcf	3,6	;RP1=0, select bank0
   883     06AC  00AA               	movwf	??_main+2
   884     06AD  0875               	movf	?___wmul+1,w
   885     06AE  00AB               	movwf	??_main+3
   886     06AF  3002               	movlw	2
   887     06B0  120A  118A  242A  120A  118A  	fcall	_read_ext_eeprom
   888     06B5  1283               	bcf	3,5	;RP0=0, select bank0
   889     06B6  1303               	bcf	3,6	;RP1=0, select bank0
   890     06B7  00AC               	movwf	??_main+4
   891     06B8  01AD               	clrf	??_main+5
   892     06B9  082C               	movf	??_main+4,w
   893     06BA  00F4               	movwf	___wmul@multiplier
   894     06BB  082D               	movf	??_main+5,w
   895     06BC  00F5               	movwf	___wmul@multiplier+1
   896     06BD  3064               	movlw	100
   897     06BE  00F6               	movwf	___wmul@multiplicand
   898     06BF  3000               	movlw	0
   899     06C0  00F7               	movwf	___wmul@multiplicand+1
   900     06C1  120A  118A  2405  120A  118A  	fcall	___wmul
   901     06C6  0874               	movf	?___wmul,w
   902     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   903     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   904     06C9  072A               	addwf	??_main+2,w
   905     06CA  00AE               	movwf	??_main+6
   906     06CB  0875               	movf	?___wmul+1,w
   907     06CC  1803               	skipnc
   908     06CD  0A75               	incf	?___wmul+1,w
   909     06CE  072B               	addwf	??_main+3,w
   910     06CF  00AF               	movwf	??_main+7
   911     06D0  3003               	movlw	3
   912     06D1  120A  118A  242A  120A  118A  	fcall	_read_ext_eeprom
   913     06D6  1283               	bcf	3,5	;RP0=0, select bank0
   914     06D7  1303               	bcf	3,6	;RP1=0, select bank0
   915     06D8  00B0               	movwf	??_main+8
   916     06D9  01B1               	clrf	??_main+9
   917     06DA  0830               	movf	??_main+8,w
   918     06DB  00F4               	movwf	___wmul@multiplier
   919     06DC  0831               	movf	??_main+9,w
   920     06DD  00F5               	movwf	___wmul@multiplier+1
   921     06DE  300A               	movlw	10
   922     06DF  00F6               	movwf	___wmul@multiplicand
   923     06E0  3000               	movlw	0
   924     06E1  00F7               	movwf	___wmul@multiplicand+1
   925     06E2  120A  118A  2405  120A  118A  	fcall	___wmul
   926     06E7  0874               	movf	?___wmul,w
   927     06E8  1283               	bcf	3,5	;RP0=0, select bank0
   928     06E9  1303               	bcf	3,6	;RP1=0, select bank0
   929     06EA  072E               	addwf	??_main+6,w
   930     06EB  00B2               	movwf	??_main+10
   931     06EC  0875               	movf	?___wmul+1,w
   932     06ED  1803               	skipnc
   933     06EE  0A75               	incf	?___wmul+1,w
   934     06EF  072F               	addwf	??_main+7,w
   935     06F0  00B3               	movwf	??_main+11
   936     06F1  3004               	movlw	4
   937     06F2  120A  118A  242A  120A  118A  	fcall	_read_ext_eeprom
   938     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   939     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   940     06F9  0732               	addwf	??_main+10,w
   941     06FA  00C5               	movwf	main@count
   942     06FB  3000               	movlw	0
   943     06FC  1803               	skipnc
   944     06FD  3001               	movlw	1
   945     06FE  0733               	addwf	??_main+11,w
   946     06FF  00C6               	movwf	main@count+1
   947                           
   948                           ;main.c: 46:             count = 0;
   949     0700  2F05               	goto	l1142
   950     0701                     l1140:
   951                           
   952                           ;main.c: 47:             once = 1;
   953     0701  1283               	bcf	3,5	;RP0=0, select bank0
   954     0702  1303               	bcf	3,6	;RP1=0, select bank0
   955     0703  01C5               	clrf	main@count
   956     0704  01C6               	clrf	main@count+1
   957     0705                     l1142:
   958                           
   959                           ;main.c: 49:         if ((!key) && (once == 1)) {
   960     0705  0846               	movf	main@count+1,w
   961     0706  00F1               	movwf	display_ssd@count+1
   962     0707  0845               	movf	main@count,w
   963     0708  00F0               	movwf	display_ssd@count
   964     0709  120A  118A  2353  120A  118A  	fcall	_display_ssd
   965     070E                     l1144:
   966                           
   967                           ;main.c: 53:         if ((!key) && (key_pressed_time > 0 && key_pressed_time < 100)) {
   968     070E  120A  118A  23A7  120A  118A  	fcall	_read_digital_keypad
   969     0713  1283               	bcf	3,5	;RP0=0, select bank0
   970     0714  1303               	bcf	3,6	;RP1=0, select bank0
   971     0715  00B6               	movwf	main@key
   972     0716                     l1146:
   973                           
   974                           ;main.c: 56:         }
   975     0716  0336               	decf	main@key,w
   976     0717  1D03               	btfss	3,2
   977     0718  2F1A               	goto	u821
   978     0719  2F1B               	goto	u820
   979     071A                     u821:
   980     071A  2F21               	goto	l1150
   981     071B                     u820:
   982     071B                     l1148:
   983                           
   984                           ;main.c: 57:         if (key == 2) {
   985     071B  3001               	movlw	1
   986     071C  07C7               	addwf	main@key_pressed_time,f
   987     071D  1803               	skipnc
   988     071E  0AC8               	incf	main@key_pressed_time+1,f
   989     071F  3000               	movlw	0
   990     0720  07C8               	addwf	main@key_pressed_time+1,f
   991     0721                     l1150:
   992                           
   993                           ;main.c: 59:         }
   994     0721  0336               	decf	main@key,w
   995     0722  1D03               	btfss	3,2
   996     0723  2F25               	goto	u831
   997     0724  2F26               	goto	u830
   998     0725                     u831:
   999     0725  2F35               	goto	l1158
  1000     0726                     u830:
  1001     0726                     l1152:
  1002     0726  3000               	movlw	0
  1003     0727  0248               	subwf	main@key_pressed_time+1,w
  1004     0728  3065               	movlw	101
  1005     0729  1903               	skipnz
  1006     072A  0247               	subwf	main@key_pressed_time,w
  1007     072B  1C03               	skipc
  1008     072C  2F2E               	goto	u841
  1009     072D  2F2F               	goto	u840
  1010     072E                     u841:
  1011     072E  2F35               	goto	l1158
  1012     072F                     u840:
  1013     072F                     l1154:
  1014                           
  1015                           ;main.c: 60: ;main.c: 61: 
  1016     072F  01C5               	clrf	main@count
  1017     0730  01C6               	clrf	main@count+1
  1018     0731                     l1156:
  1019                           
  1020                           ;main.c: 62:         ssd[0] = digits[count / 1000];
  1021     0731  3001               	movlw	1
  1022     0732  00B4               	movwf	main@once
  1023     0733  3000               	movlw	0
  1024     0734  00B5               	movwf	main@once+1
  1025     0735                     l1158:
  1026                           
  1027                           ;main.c: 64:         ssd[2] = digits[(count / 10) % 10];
  1028     0735  0836               	movf	main@key,w
  1029     0736  1D03               	btfss	3,2
  1030     0737  2F39               	goto	u851
  1031     0738  2F3A               	goto	u850
  1032     0739                     u851:
  1033     0739  2F44               	goto	l1164
  1034     073A                     u850:
  1035     073A                     l1160:
  1036     073A  0334               	decf	main@once,w
  1037     073B  0435               	iorwf	main@once+1,w
  1038     073C  1D03               	btfss	3,2
  1039     073D  2F3F               	goto	u861
  1040     073E  2F40               	goto	u860
  1041     073F                     u861:
  1042     073F  2F44               	goto	l1164
  1043     0740                     u860:
  1044     0740                     l1162:
  1045                           
  1046                           ;main.c: 65:         ssd[3] = digits[count % 10];
  1047     0740  01C7               	clrf	main@key_pressed_time
  1048     0741  01C8               	clrf	main@key_pressed_time+1
  1049                           
  1050                           ;main.c: 66: 
  1051     0742  01B4               	clrf	main@once
  1052     0743  01B5               	clrf	main@once+1
  1053     0744                     l1164:
  1054                           
  1055                           ;main.c: 68:     }
  1056     0744  0836               	movf	main@key,w
  1057     0745  1D03               	btfss	3,2
  1058     0746  2F48               	goto	u871
  1059     0747  2F49               	goto	u870
  1060     0748                     u871:
  1061     0748  2F60               	goto	l1174
  1062     0749                     u870:
  1063     0749                     l1166:
  1064     0749  0847               	movf	main@key_pressed_time,w
  1065     074A  0448               	iorwf	main@key_pressed_time+1,w
  1066     074B  1903               	btfsc	3,2
  1067     074C  2F4E               	goto	u881
  1068     074D  2F4F               	goto	u880
  1069     074E                     u881:
  1070     074E  2F60               	goto	l1174
  1071     074F                     u880:
  1072     074F                     l1168:
  1073     074F  3000               	movlw	0
  1074     0750  0248               	subwf	main@key_pressed_time+1,w
  1075     0751  3064               	movlw	100
  1076     0752  1903               	skipnz
  1077     0753  0247               	subwf	main@key_pressed_time,w
  1078     0754  1803               	skipnc
  1079     0755  2F57               	goto	u891
  1080     0756  2F58               	goto	u890
  1081     0757                     u891:
  1082     0757  2F60               	goto	l1174
  1083     0758                     u890:
  1084     0758                     l1170:
  1085                           
  1086                           ;main.c: 69: }
  1087     0758  3001               	movlw	1
  1088     0759  07C5               	addwf	main@count,f
  1089     075A  1803               	skipnc
  1090     075B  0AC6               	incf	main@count+1,f
  1091     075C  3000               	movlw	0
  1092     075D  07C6               	addwf	main@count+1,f
  1093     075E                     l1172:
  1094     075E  01C7               	clrf	main@key_pressed_time
  1095     075F  01C8               	clrf	main@key_pressed_time+1
  1096     0760                     l1174:
  1097     0760  3002               	movlw	2
  1098     0761  0636               	xorwf	main@key,w
  1099     0762  1D03               	btfss	3,2
  1100     0763  2F65               	goto	u901
  1101     0764  2F66               	goto	u900
  1102     0765                     u901:
  1103     0765  2F6F               	goto	l1178
  1104     0766                     u900:
  1105     0766                     l1176:
  1106     0766  0846               	movf	main@count+1,w
  1107     0767  00A6               	movwf	eeprom_test@count+1
  1108     0768  0845               	movf	main@count,w
  1109     0769  00A5               	movwf	eeprom_test@count
  1110     076A  120A  118A  25FF  120A  118A  	fcall	_eeprom_test
  1111     076F                     l1178:
  1112     076F  30E8               	movlw	232
  1113     0770  00F0               	movwf	___lwdiv@divisor
  1114     0771  3003               	movlw	3
  1115     0772  00F1               	movwf	___lwdiv@divisor+1
  1116     0773  1283               	bcf	3,5	;RP0=0, select bank0
  1117     0774  1303               	bcf	3,6	;RP1=0, select bank0
  1118     0775  0846               	movf	main@count+1,w
  1119     0776  00F3               	movwf	___lwdiv@dividend+1
  1120     0777  0845               	movf	main@count,w
  1121     0778  00F2               	movwf	___lwdiv@dividend
  1122     0779  120A  118A  24BF  120A  118A  	fcall	___lwdiv
  1123     077E  0870               	movf	?___lwdiv,w
  1124     077F  3E37               	addlw	(low (_digits| 0))& (0+255)
  1125     0780  0084               	movwf	4
  1126     0781  1383               	bcf	3,7	;select IRP bank0
  1127     0782  0800               	movf	0,w
  1128     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1129     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1130     0785  00C1               	movwf	_ssd
  1131     0786                     l1180:
  1132     0786  300A               	movlw	10
  1133     0787  00F7               	movwf	___lwmod@divisor
  1134     0788  3000               	movlw	0
  1135     0789  00F8               	movwf	___lwmod@divisor+1
  1136     078A  3064               	movlw	100
  1137     078B  00F0               	movwf	___lwdiv@divisor
  1138     078C  3000               	movlw	0
  1139     078D  00F1               	movwf	___lwdiv@divisor+1
  1140     078E  0846               	movf	main@count+1,w
  1141     078F  00F3               	movwf	___lwdiv@dividend+1
  1142     0790  0845               	movf	main@count,w
  1143     0791  00F2               	movwf	___lwdiv@dividend
  1144     0792  120A  118A  24BF  120A  118A  	fcall	___lwdiv
  1145     0797  0871               	movf	?___lwdiv+1,w
  1146     0798  00FA               	movwf	___lwmod@dividend+1
  1147     0799  0870               	movf	?___lwdiv,w
  1148     079A  00F9               	movwf	___lwmod@dividend
  1149     079B  120A  118A  2487  120A  118A  	fcall	___lwmod
  1150     07A0  0877               	movf	?___lwmod,w
  1151     07A1  3E37               	addlw	(low (_digits| 0))& (0+255)
  1152     07A2  0084               	movwf	4
  1153     07A3  1383               	bcf	3,7	;select IRP bank0
  1154     07A4  0800               	movf	0,w
  1155     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1156     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1157     07A7  00C2               	movwf	_ssd+1
  1158     07A8                     l1182:
  1159     07A8  300A               	movlw	10
  1160     07A9  00F7               	movwf	___lwmod@divisor
  1161     07AA  3000               	movlw	0
  1162     07AB  00F8               	movwf	___lwmod@divisor+1
  1163     07AC  300A               	movlw	10
  1164     07AD  00F0               	movwf	___lwdiv@divisor
  1165     07AE  3000               	movlw	0
  1166     07AF  00F1               	movwf	___lwdiv@divisor+1
  1167     07B0  0846               	movf	main@count+1,w
  1168     07B1  00F3               	movwf	___lwdiv@dividend+1
  1169     07B2  0845               	movf	main@count,w
  1170     07B3  00F2               	movwf	___lwdiv@dividend
  1171     07B4  120A  118A  24BF  120A  118A  	fcall	___lwdiv
  1172     07B9  0871               	movf	?___lwdiv+1,w
  1173     07BA  00FA               	movwf	___lwmod@dividend+1
  1174     07BB  0870               	movf	?___lwdiv,w
  1175     07BC  00F9               	movwf	___lwmod@dividend
  1176     07BD  120A  118A  2487  120A  118A  	fcall	___lwmod
  1177     07C2  0877               	movf	?___lwmod,w
  1178     07C3  3E37               	addlw	(low (_digits| 0))& (0+255)
  1179     07C4  0084               	movwf	4
  1180     07C5  1383               	bcf	3,7	;select IRP bank0
  1181     07C6  0800               	movf	0,w
  1182     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1183     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1184     07C9  00C3               	movwf	_ssd+2
  1185     07CA                     l1184:
  1186     07CA  300A               	movlw	10
  1187     07CB  00F7               	movwf	___lwmod@divisor
  1188     07CC  3000               	movlw	0
  1189     07CD  00F8               	movwf	___lwmod@divisor+1
  1190     07CE  0846               	movf	main@count+1,w
  1191     07CF  00FA               	movwf	___lwmod@dividend+1
  1192     07D0  0845               	movf	main@count,w
  1193     07D1  00F9               	movwf	___lwmod@dividend
  1194     07D2  120A  118A  2487  120A  118A  	fcall	___lwmod
  1195     07D7  0877               	movf	?___lwmod,w
  1196     07D8  3E37               	addlw	(low (_digits| 0))& (0+255)
  1197     07D9  0084               	movwf	4
  1198     07DA  1383               	bcf	3,7	;select IRP bank0
  1199     07DB  0800               	movf	0,w
  1200     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1201     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1202     07DE  00C4               	movwf	_ssd+3
  1203     07DF                     l1186:
  1204     07DF  3041               	movlw	(low (_ssd| 0))& (0+255)
  1205     07E0  00F0               	movwf	display@data
  1206     07E1  120A  118A  2548  120A  118A  	fcall	_display
  1207     07E6  2F0E               	goto	l1144
  1208     07E7  120A  118A  2800   	ljmp	start
  1209     07EA                     __end_of_main:
  1210                           
  1211                           	psect	text1
  1212     042A                     __ptext1:	
  1213 ;; *************** function _read_ext_eeprom *****************
  1214 ;; Defined at:
  1215 ;;		line 20 in file "ext_eeprom.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  address         1    wreg     unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  address         1    2[COMMON] unsigned char 
  1220 ;;  data            1    3[COMMON] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         2       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         2       0       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 2
  1237 ;; This function calls:
  1238 ;;		_i2c_read
  1239 ;;		_i2c_rep_start
  1240 ;;		_i2c_start
  1241 ;;		_i2c_stop
  1242 ;;		_i2c_write
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248     042A                     _read_ext_eeprom:	
  1249                           ;psect for function _read_ext_eeprom
  1250                           
  1251                           
  1252                           ;incstack = 0
  1253                           ; Regs used in _read_ext_eeprom: [wreg+status,2+status,0+pclath+cstack]
  1254                           ;read_ext_eeprom@address stored from wreg
  1255     042A  00F2               	movwf	read_ext_eeprom@address
  1256     042B                     l1076:
  1257                           
  1258                           ;ext_eeprom.c: 21:     unsigned char data;;ext_eeprom.c: 23:     i2c_start();
  1259     042B  120A  118A  235A  120A  118A  	fcall	_i2c_start
  1260                           
  1261                           ;ext_eeprom.c: 24:     i2c_write(0xA0);
  1262     0430  30A0               	movlw	160
  1263     0431  120A  118A  2375  120A  118A  	fcall	_i2c_write
  1264                           
  1265                           ;ext_eeprom.c: 25:     i2c_write(address);
  1266     0436  0872               	movf	read_ext_eeprom@address,w
  1267     0437  120A  118A  2375  120A  118A  	fcall	_i2c_write
  1268                           
  1269                           ;ext_eeprom.c: 26:     i2c_rep_start();
  1270     043C  120A  118A  236C  120A  118A  	fcall	_i2c_rep_start
  1271                           
  1272                           ;ext_eeprom.c: 27:     i2c_write(0xA1);
  1273     0441  30A1               	movlw	161
  1274     0442  120A  118A  2375  120A  118A  	fcall	_i2c_write
  1275                           
  1276                           ;ext_eeprom.c: 29:     data = i2c_read(1);
  1277     0447  3001               	movlw	1
  1278     0448  120A  118A  23E4  120A  118A  	fcall	_i2c_read
  1279     044D  00F3               	movwf	read_ext_eeprom@data
  1280                           
  1281                           ;ext_eeprom.c: 32:     i2c_stop();
  1282     044E  120A  118A  2363  120A  118A  	fcall	_i2c_stop
  1283     0453                     l1078:
  1284                           
  1285                           ;ext_eeprom.c: 34:     return data;
  1286     0453  0873               	movf	read_ext_eeprom@data,w
  1287     0454                     l78:
  1288     0454  0008               	return
  1289     0455                     __end_of_read_ext_eeprom:
  1290                           
  1291                           	psect	text2
  1292     036C                     __ptext2:	
  1293 ;; *************** function _i2c_rep_start *****************
  1294 ;; Defined at:
  1295 ;;		line 29 in file "i2c.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, pclath, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1309 ;;      Params:         0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 1
  1316 ;; This function calls:
  1317 ;;		_i2c_wait_for_idle
  1318 ;; This function is called by:
  1319 ;;		_read_ext_eeprom
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323     036C                     _i2c_rep_start:	
  1324                           ;psect for function _i2c_rep_start
  1325                           
  1326     036C                     l1006:	
  1327                           ;incstack = 0
  1328                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  1329                           
  1330                           
  1331                           ;i2c.c: 32:     i2c_wait_for_idle();
  1332     036C  120A  118A  238C  120A  118A  	fcall	_i2c_wait_for_idle
  1333     0371                     l1008:
  1334                           
  1335                           ;i2c.c: 33:     RSEN = 1;
  1336     0371  1683               	bsf	3,5	;RP0=1, select bank1
  1337     0372  1303               	bcf	3,6	;RP1=0, select bank1
  1338     0373  1491               	bsf	17,1	;volatile
  1339     0374                     l141:
  1340     0374  0008               	return
  1341     0375                     __end_of_i2c_rep_start:
  1342                           
  1343                           	psect	text3
  1344     03E4                     __ptext3:	
  1345 ;; *************** function _i2c_read *****************
  1346 ;; Defined at:
  1347 ;;		line 42 in file "i2c.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  ack             1    wreg     unsigned char 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  ack             1    0[COMMON] unsigned char 
  1352 ;;  data            1    1[COMMON] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      unsigned char 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         2       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0
  1365 ;;      Totals:         2       0       0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 1
  1369 ;; This function calls:
  1370 ;;		_i2c_wait_for_idle
  1371 ;; This function is called by:
  1372 ;;		_read_ext_eeprom
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     03E4                     _i2c_read:	
  1377                           ;psect for function _i2c_read
  1378                           
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1382                           ;i2c_read@ack stored from wreg
  1383     03E4  00F0               	movwf	i2c_read@ack
  1384     03E5                     l1010:
  1385                           
  1386                           ;i2c.c: 43:     unsigned char data;;i2c.c: 44:     i2c_wait_for_idle();
  1387     03E5  120A  118A  238C  120A  118A  	fcall	_i2c_wait_for_idle
  1388     03EA                     l1012:
  1389                           
  1390                           ;i2c.c: 45:     RCEN = 1;
  1391     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1392     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  1393     03EC  1591               	bsf	17,3	;volatile
  1394                           
  1395                           ;i2c.c: 46:     i2c_wait_for_idle();
  1396     03ED  120A  118A  238C  120A  118A  	fcall	_i2c_wait_for_idle
  1397     03F2                     l1014:
  1398                           
  1399                           ;i2c.c: 47:     data = SSPBUF;
  1400     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1401     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1402     03F4  0813               	movf	19,w	;volatile
  1403     03F5  00F1               	movwf	i2c_read@data
  1404     03F6                     l1016:
  1405                           
  1406                           ;i2c.c: 48:     if (ack == 1) {
  1407     03F6  0370               	decf	i2c_read@ack,w
  1408     03F7  1D03               	btfss	3,2
  1409     03F8  2BFA               	goto	u571
  1410     03F9  2BFB               	goto	u570
  1411     03FA                     u571:
  1412     03FA  2BFF               	goto	l147
  1413     03FB                     u570:
  1414     03FB                     l1018:
  1415                           
  1416                           ;i2c.c: 49:         ACKDT = 1;
  1417     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1418     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  1419     03FD  1691               	bsf	17,5	;volatile
  1420                           
  1421                           ;i2c.c: 50:     } else {
  1422     03FE  2C02               	goto	l148
  1423     03FF                     l147:
  1424                           
  1425                           ;i2c.c: 51:         ACKDT = 0;
  1426     03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1427     0400  1303               	bcf	3,6	;RP1=0, select bank1
  1428     0401  1291               	bcf	17,5	;volatile
  1429     0402                     l148:	
  1430                           ;i2c.c: 52:     }
  1431                           
  1432                           
  1433                           ;i2c.c: 53:     ACKEN = 1;
  1434     0402  1611               	bsf	17,4	;volatile
  1435     0403                     l1020:
  1436                           
  1437                           ;i2c.c: 54:     return data;
  1438     0403  0871               	movf	i2c_read@data,w
  1439     0404                     l149:
  1440     0404  0008               	return
  1441     0405                     __end_of_i2c_read:
  1442                           
  1443                           	psect	text4
  1444     03A7                     __ptext4:	
  1445 ;; *************** function _read_digital_keypad *****************
  1446 ;; Defined at:
  1447 ;;		line 15 in file "digital_keypad.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      unsigned char 
  1454 ;; Registers used:
  1455 ;;		wreg
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0
  1464 ;;      Totals:         0       0       0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474     03A7                     _read_digital_keypad:	
  1475                           ;psect for function _read_digital_keypad
  1476                           
  1477     03A7                     l1082:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _read_digital_keypad: [wreg]
  1480                           
  1481                           
  1482                           ;digital_keypad.c: 17:     if ((PORTB & 0x01) == 0)
  1483     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1484     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1485     03A9  1806               	btfsc	6,0	;volatile
  1486     03AA  2BAC               	goto	u711
  1487     03AB  2BAD               	goto	u710
  1488     03AC                     u711:
  1489     03AC  2BAF               	goto	l55
  1490     03AD                     u710:
  1491     03AD                     l1084:
  1492                           
  1493                           ;digital_keypad.c: 18:         return 1;
  1494     03AD  3001               	movlw	1
  1495     03AE  2BB6               	goto	l56
  1496     03AF                     l55:	
  1497                           ;digital_keypad.c: 19:     else if ((PORTB & 0x02) == 0)
  1498                           
  1499     03AF  1886               	btfsc	6,1	;volatile
  1500     03B0  2BB2               	goto	u721
  1501     03B1  2BB3               	goto	u720
  1502     03B2                     u721:
  1503     03B2  2BB5               	goto	l1096
  1504     03B3                     u720:
  1505     03B3                     l1090:
  1506                           
  1507                           ;digital_keypad.c: 20:         return 2;
  1508     03B3  3002               	movlw	2
  1509     03B4  2BB6               	goto	l56
  1510     03B5                     l1096:
  1511                           
  1512                           ;digital_keypad.c: 22:         return 0;
  1513     03B5  3000               	movlw	0
  1514     03B6                     l56:
  1515     03B6  0008               	return
  1516     03B7                     __end_of_read_digital_keypad:
  1517                           
  1518                           	psect	text5
  1519     03CA                     __ptext5:	
  1520 ;; *************** function _init_config *****************
  1521 ;; Defined at:
  1522 ;;		line 25 in file "main.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 2
  1543 ;; This function calls:
  1544 ;;		_init_digital_keypad
  1545 ;;		_init_i2c
  1546 ;;		_init_ssd
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552     03CA                     _init_config:	
  1553                           ;psect for function _init_config
  1554                           
  1555     03CA                     l1074:	
  1556                           ;incstack = 0
  1557                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1558                           
  1559                           
  1560                           ;main.c: 26: 
  1561     03CA  120A  118A  2380  120A  118A  	fcall	_init_ssd
  1562                           
  1563                           ;main.c: 27:     init_config();
  1564     03CF  120A  118A  2354  120A  118A  	fcall	_init_digital_keypad
  1565                           
  1566                           ;main.c: 28: 
  1567     03D4  3000               	movlw	0
  1568     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1569     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1570     03D7  00A3               	movwf	init_i2c@baud+3
  1571     03D8  3001               	movlw	1
  1572     03D9  00A2               	movwf	init_i2c@baud+2
  1573     03DA  3086               	movlw	134
  1574     03DB  00A1               	movwf	init_i2c@baud+1
  1575     03DC  30A0               	movlw	160
  1576     03DD  00A0               	movwf	init_i2c@baud
  1577     03DE  120A  118A  2455  120A  118A  	fcall	_init_i2c
  1578     03E3                     l22:
  1579     03E3  0008               	return
  1580     03E4                     __end_of_init_config:
  1581                           
  1582                           	psect	text6
  1583     0380                     __ptext6:	
  1584 ;; *************** function _init_ssd *****************
  1585 ;; Defined at:
  1586 ;;		line 8 in file "ssd.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0
  1603 ;;      Totals:         0       0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_init_config
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613     0380                     _init_ssd:	
  1614                           ;psect for function _init_ssd
  1615                           
  1616     0380                     l992:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _init_ssd: [wreg+status,2]
  1619                           
  1620                           
  1621                           ;ssd.c: 10:     TRISD = 0x00;
  1622     0380  1683               	bsf	3,5	;RP0=1, select bank1
  1623     0381  1303               	bcf	3,6	;RP1=0, select bank1
  1624     0382  0188               	clrf	8	;volatile
  1625     0383                     l994:
  1626                           
  1627                           ;ssd.c: 13:     TRISA = TRISA & 0x03;
  1628     0383  0805               	movf	5,w	;volatile
  1629     0384  3903               	andlw	3
  1630     0385  0085               	movwf	5	;volatile
  1631     0386                     l996:
  1632                           
  1633                           ;ssd.c: 16:     PORTA = PORTA & 0x03;
  1634     0386  1283               	bcf	3,5	;RP0=0, select bank0
  1635     0387  1303               	bcf	3,6	;RP1=0, select bank0
  1636     0388  0805               	movf	5,w	;volatile
  1637     0389  3903               	andlw	3
  1638     038A  0085               	movwf	5	;volatile
  1639     038B                     l89:
  1640     038B  0008               	return
  1641     038C                     __end_of_init_ssd:
  1642                           
  1643                           	psect	text7
  1644     0455                     __ptext7:	
  1645 ;; *************** function _init_i2c *****************
  1646 ;; Defined at:
  1647 ;;		line 10 in file "i2c.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  baud            4    0[BANK0 ] unsigned long 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       4       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       4       0       0       0
  1664 ;;      Totals:         0       8       0       0       0
  1665 ;;Total ram usage:        8 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 1
  1668 ;; This function calls:
  1669 ;;		___lldiv
  1670 ;; This function is called by:
  1671 ;;		_init_config
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675     0455                     _init_i2c:	
  1676                           ;psect for function _init_i2c
  1677                           
  1678     0455                     l1000:	
  1679                           ;incstack = 0
  1680                           ; Regs used in _init_i2c: [wreg+status,2+status,0+pclath+cstack]
  1681                           
  1682                           
  1683                           ;i2c.c: 12:     SSPM3 = 1;
  1684     0455  1283               	bcf	3,5	;RP0=0, select bank0
  1685     0456  1303               	bcf	3,6	;RP1=0, select bank0
  1686     0457  1594               	bsf	20,3	;volatile
  1687     0458                     l1002:
  1688                           
  1689                           ;i2c.c: 14:     SSPADD = (unsigned char) (20000000 / (4 * baud)) - 1;
  1690     0458  0820               	movf	init_i2c@baud,w
  1691     0459  00A4               	movwf	??_init_i2c
  1692     045A  0821               	movf	init_i2c@baud+1,w
  1693     045B  00A5               	movwf	??_init_i2c+1
  1694     045C  0822               	movf	init_i2c@baud+2,w
  1695     045D  00A6               	movwf	??_init_i2c+2
  1696     045E  0823               	movf	init_i2c@baud+3,w
  1697     045F  00A7               	movwf	??_init_i2c+3
  1698     0460  3002               	movlw	2
  1699     0461                     u565:
  1700     0461  1003               	clrc
  1701     0462  0DA4               	rlf	??_init_i2c,f
  1702     0463  0DA5               	rlf	??_init_i2c+1,f
  1703     0464  0DA6               	rlf	??_init_i2c+2,f
  1704     0465  0DA7               	rlf	??_init_i2c+3,f
  1705     0466                     u560:
  1706     0466  3EFF               	addlw	-1
  1707     0467  1D03               	skipz
  1708     0468  2C61               	goto	u565
  1709     0469  0827               	movf	??_init_i2c+3,w
  1710     046A  00F3               	movwf	___lldiv@divisor+3
  1711     046B  0826               	movf	??_init_i2c+2,w
  1712     046C  00F2               	movwf	___lldiv@divisor+2
  1713     046D  0825               	movf	??_init_i2c+1,w
  1714     046E  00F1               	movwf	___lldiv@divisor+1
  1715     046F  0824               	movf	??_init_i2c,w
  1716     0470  00F0               	movwf	___lldiv@divisor
  1717     0471  3001               	movlw	1
  1718     0472  00F7               	movwf	___lldiv@dividend+3
  1719     0473  3031               	movlw	49
  1720     0474  00F6               	movwf	___lldiv@dividend+2
  1721     0475  302D               	movlw	45
  1722     0476  00F5               	movwf	___lldiv@dividend+1
  1723     0477  3000               	movlw	0
  1724     0478  00F4               	movwf	___lldiv@dividend
  1725     0479  120A  118A  259B  120A  118A  	fcall	___lldiv
  1726     047E  0870               	movf	?___lldiv,w
  1727     047F  3EFF               	addlw	255
  1728     0480  1683               	bsf	3,5	;RP0=1, select bank1
  1729     0481  1303               	bcf	3,6	;RP1=0, select bank1
  1730     0482  0093               	movwf	19	;volatile
  1731     0483                     l1004:
  1732                           
  1733                           ;i2c.c: 16:     SSPEN = 1;
  1734     0483  1283               	bcf	3,5	;RP0=0, select bank0
  1735     0484  1303               	bcf	3,6	;RP1=0, select bank0
  1736     0485  1694               	bsf	20,5	;volatile
  1737     0486                     l129:
  1738     0486  0008               	return
  1739     0487                     __end_of_init_i2c:
  1740                           
  1741                           	psect	text8
  1742     059B                     __ptext8:	
  1743 ;; *************** function ___lldiv *****************
  1744 ;; Defined at:
  1745 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  divisor         4    0[COMMON] unsigned long 
  1748 ;;  dividend        4    4[COMMON] unsigned long 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  quotient        4    9[COMMON] unsigned long 
  1751 ;;  counter         1   13[COMMON] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  4    0[COMMON] unsigned long 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         8       0       0       0       0
  1762 ;;      Locals:         5       0       0       0       0
  1763 ;;      Temps:          1       0       0       0       0
  1764 ;;      Totals:        14       0       0       0       0
  1765 ;;Total ram usage:       14 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_init_i2c
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     059B                     ___lldiv:	
  1775                           ;psect for function ___lldiv
  1776                           
  1777     059B                     l962:	
  1778                           ;incstack = 0
  1779                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1780                           
  1781     059B  3000               	movlw	0
  1782     059C  00FC               	movwf	___lldiv@quotient+3
  1783     059D  3000               	movlw	0
  1784     059E  00FB               	movwf	___lldiv@quotient+2
  1785     059F  3000               	movlw	0
  1786     05A0  00FA               	movwf	___lldiv@quotient+1
  1787     05A1  3000               	movlw	0
  1788     05A2  00F9               	movwf	___lldiv@quotient
  1789     05A3  0873               	movf	___lldiv@divisor+3,w
  1790     05A4  0472               	iorwf	___lldiv@divisor+2,w
  1791     05A5  0471               	iorwf	___lldiv@divisor+1,w
  1792     05A6  0470               	iorwf	___lldiv@divisor,w
  1793     05A7  1903               	skipnz
  1794     05A8  2DAA               	goto	u481
  1795     05A9  2DAB               	goto	u480
  1796     05AA                     u481:
  1797     05AA  2DF6               	goto	l982
  1798     05AB                     u480:
  1799     05AB                     l964:
  1800     05AB  3001               	movlw	1
  1801     05AC  00FD               	movwf	___lldiv@counter
  1802     05AD  2DB9               	goto	l968
  1803     05AE                     l966:
  1804     05AE  3001               	movlw	1
  1805     05AF  00F8               	movwf	??___lldiv
  1806     05B0                     u495:
  1807     05B0  1003               	clrc
  1808     05B1  0DF0               	rlf	___lldiv@divisor,f
  1809     05B2  0DF1               	rlf	___lldiv@divisor+1,f
  1810     05B3  0DF2               	rlf	___lldiv@divisor+2,f
  1811     05B4  0DF3               	rlf	___lldiv@divisor+3,f
  1812     05B5  0BF8               	decfsz	??___lldiv,f
  1813     05B6  2DB0               	goto	u495
  1814     05B7  3001               	movlw	1
  1815     05B8  07FD               	addwf	___lldiv@counter,f
  1816     05B9                     l968:
  1817     05B9  1FF3               	btfss	___lldiv@divisor+3,7
  1818     05BA  2DBC               	goto	u501
  1819     05BB  2DBD               	goto	u500
  1820     05BC                     u501:
  1821     05BC  2DAE               	goto	l966
  1822     05BD                     u500:
  1823     05BD                     l970:
  1824     05BD  3001               	movlw	1
  1825     05BE  00F8               	movwf	??___lldiv
  1826     05BF                     u515:
  1827     05BF  1003               	clrc
  1828     05C0  0DF9               	rlf	___lldiv@quotient,f
  1829     05C1  0DFA               	rlf	___lldiv@quotient+1,f
  1830     05C2  0DFB               	rlf	___lldiv@quotient+2,f
  1831     05C3  0DFC               	rlf	___lldiv@quotient+3,f
  1832     05C4  0BF8               	decfsz	??___lldiv,f
  1833     05C5  2DBF               	goto	u515
  1834     05C6                     l972:
  1835     05C6  0873               	movf	___lldiv@divisor+3,w
  1836     05C7  0277               	subwf	___lldiv@dividend+3,w
  1837     05C8  1D03               	skipz
  1838     05C9  2DD4               	goto	u525
  1839     05CA  0872               	movf	___lldiv@divisor+2,w
  1840     05CB  0276               	subwf	___lldiv@dividend+2,w
  1841     05CC  1D03               	skipz
  1842     05CD  2DD4               	goto	u525
  1843     05CE  0871               	movf	___lldiv@divisor+1,w
  1844     05CF  0275               	subwf	___lldiv@dividend+1,w
  1845     05D0  1D03               	skipz
  1846     05D1  2DD4               	goto	u525
  1847     05D2  0870               	movf	___lldiv@divisor,w
  1848     05D3  0274               	subwf	___lldiv@dividend,w
  1849     05D4                     u525:
  1850     05D4  1C03               	skipc
  1851     05D5  2DD7               	goto	u521
  1852     05D6  2DD8               	goto	u520
  1853     05D7                     u521:
  1854     05D7  2DE7               	goto	l978
  1855     05D8                     u520:
  1856     05D8                     l974:
  1857     05D8  0870               	movf	___lldiv@divisor,w
  1858     05D9  02F4               	subwf	___lldiv@dividend,f
  1859     05DA  0871               	movf	___lldiv@divisor+1,w
  1860     05DB  1C03               	skipc
  1861     05DC  0F71               	incfsz	___lldiv@divisor+1,w
  1862     05DD  02F5               	subwf	___lldiv@dividend+1,f
  1863     05DE  0872               	movf	___lldiv@divisor+2,w
  1864     05DF  1C03               	skipc
  1865     05E0  0F72               	incfsz	___lldiv@divisor+2,w
  1866     05E1  02F6               	subwf	___lldiv@dividend+2,f
  1867     05E2  0873               	movf	___lldiv@divisor+3,w
  1868     05E3  1C03               	skipc
  1869     05E4  0F73               	incfsz	___lldiv@divisor+3,w
  1870     05E5  02F7               	subwf	___lldiv@dividend+3,f
  1871     05E6                     l976:
  1872     05E6  1479               	bsf	___lldiv@quotient,0
  1873     05E7                     l978:
  1874     05E7  3001               	movlw	1
  1875     05E8                     u535:
  1876     05E8  1003               	clrc
  1877     05E9  0CF3               	rrf	___lldiv@divisor+3,f
  1878     05EA  0CF2               	rrf	___lldiv@divisor+2,f
  1879     05EB  0CF1               	rrf	___lldiv@divisor+1,f
  1880     05EC  0CF0               	rrf	___lldiv@divisor,f
  1881     05ED  3EFF               	addlw	-1
  1882     05EE  1D03               	skipz
  1883     05EF  2DE8               	goto	u535
  1884     05F0                     l980:
  1885     05F0  3001               	movlw	1
  1886     05F1  02FD               	subwf	___lldiv@counter,f
  1887     05F2  1D03               	btfss	3,2
  1888     05F3  2DF5               	goto	u541
  1889     05F4  2DF6               	goto	u540
  1890     05F5                     u541:
  1891     05F5  2DBD               	goto	l970
  1892     05F6                     u540:
  1893     05F6                     l982:
  1894     05F6  087C               	movf	___lldiv@quotient+3,w
  1895     05F7  00F3               	movwf	?___lldiv+3
  1896     05F8  087B               	movf	___lldiv@quotient+2,w
  1897     05F9  00F2               	movwf	?___lldiv+2
  1898     05FA  087A               	movf	___lldiv@quotient+1,w
  1899     05FB  00F1               	movwf	?___lldiv+1
  1900     05FC  0879               	movf	___lldiv@quotient,w
  1901     05FD  00F0               	movwf	?___lldiv
  1902     05FE                     l274:
  1903     05FE  0008               	return
  1904     05FF                     __end_of___lldiv:
  1905                           
  1906                           	psect	text9
  1907     0354                     __ptext9:	
  1908 ;; *************** function _init_digital_keypad *****************
  1909 ;; Defined at:
  1910 ;;		line 10 in file "digital_keypad.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_init_config
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937     0354                     _init_digital_keypad:	
  1938                           ;psect for function _init_digital_keypad
  1939                           
  1940     0354                     l998:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1943                           
  1944                           
  1945                           ;digital_keypad.c: 12:     TRISB = TRISB | 0x3F;
  1946     0354  1683               	bsf	3,5	;RP0=1, select bank1
  1947     0355  1303               	bcf	3,6	;RP1=0, select bank1
  1948     0356  0806               	movf	6,w	;volatile
  1949     0357  383F               	iorlw	63
  1950     0358  0086               	movwf	6	;volatile
  1951     0359                     l52:
  1952     0359  0008               	return
  1953     035A                     __end_of_init_digital_keypad:
  1954                           
  1955                           	psect	text10
  1956     05FF                     __ptext10:	
  1957 ;; *************** function _eeprom_test *****************
  1958 ;; Defined at:
  1959 ;;		line 15 in file "main.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  count           2    5[BANK0 ] unsigned int 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       2       0       0       0
  1974 ;;      Locals:         0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0
  1976 ;;      Totals:         0       2       0       0       0
  1977 ;;Total ram usage:        2 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 3
  1980 ;; This function calls:
  1981 ;;		___lwdiv
  1982 ;;		___lwmod
  1983 ;;		_write_ext_eeprom
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989     05FF                     _eeprom_test:	
  1990                           ;psect for function _eeprom_test
  1991                           
  1992     05FF                     l1072:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _eeprom_test: [wreg+status,2+status,0+pclath+cstack]
  1995                           
  1996                           
  1997                           ;main.c: 18: unsigned char ssd[4] = {0x3F, 0x3F, 0x3F, 0x3F};
  1998     05FF  30E8               	movlw	232
  1999     0600  00F0               	movwf	___lwdiv@divisor
  2000     0601  3003               	movlw	3
  2001     0602  00F1               	movwf	___lwdiv@divisor+1
  2002     0603  1283               	bcf	3,5	;RP0=0, select bank0
  2003     0604  1303               	bcf	3,6	;RP1=0, select bank0
  2004     0605  0826               	movf	eeprom_test@count+1,w
  2005     0606  00F3               	movwf	___lwdiv@dividend+1
  2006     0607  0825               	movf	eeprom_test@count,w
  2007     0608  00F2               	movwf	___lwdiv@dividend
  2008     0609  120A  118A  24BF  120A  118A  	fcall	___lwdiv
  2009     060E  0870               	movf	?___lwdiv,w
  2010     060F  00FC               	movwf	write_ext_eeprom@data
  2011     0610  3001               	movlw	1
  2012     0611  120A  118A  2501  120A  118A  	fcall	_write_ext_eeprom
  2013                           
  2014                           ;main.c: 19: 
  2015     0616  300A               	movlw	10
  2016     0617  00F7               	movwf	___lwmod@divisor
  2017     0618  3000               	movlw	0
  2018     0619  00F8               	movwf	___lwmod@divisor+1
  2019     061A  3064               	movlw	100
  2020     061B  00F0               	movwf	___lwdiv@divisor
  2021     061C  3000               	movlw	0
  2022     061D  00F1               	movwf	___lwdiv@divisor+1
  2023     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2024     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2025     0620  0826               	movf	eeprom_test@count+1,w
  2026     0621  00F3               	movwf	___lwdiv@dividend+1
  2027     0622  0825               	movf	eeprom_test@count,w
  2028     0623  00F2               	movwf	___lwdiv@dividend
  2029     0624  120A  118A  24BF  120A  118A  	fcall	___lwdiv
  2030     0629  0871               	movf	?___lwdiv+1,w
  2031     062A  00FA               	movwf	___lwmod@dividend+1
  2032     062B  0870               	movf	?___lwdiv,w
  2033     062C  00F9               	movwf	___lwmod@dividend
  2034     062D  120A  118A  2487  120A  118A  	fcall	___lwmod
  2035     0632  0877               	movf	?___lwmod,w
  2036     0633  00FC               	movwf	write_ext_eeprom@data
  2037     0634  3002               	movlw	2
  2038     0635  120A  118A  2501  120A  118A  	fcall	_write_ext_eeprom
  2039                           
  2040                           ;main.c: 20: void main(void) {
  2041     063A  300A               	movlw	10
  2042     063B  00F7               	movwf	___lwmod@divisor
  2043     063C  3000               	movlw	0
  2044     063D  00F8               	movwf	___lwmod@divisor+1
  2045     063E  300A               	movlw	10
  2046     063F  00F0               	movwf	___lwdiv@divisor
  2047     0640  3000               	movlw	0
  2048     0641  00F1               	movwf	___lwdiv@divisor+1
  2049     0642  1283               	bcf	3,5	;RP0=0, select bank0
  2050     0643  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0644  0826               	movf	eeprom_test@count+1,w
  2052     0645  00F3               	movwf	___lwdiv@dividend+1
  2053     0646  0825               	movf	eeprom_test@count,w
  2054     0647  00F2               	movwf	___lwdiv@dividend
  2055     0648  120A  118A  24BF  120A  118A  	fcall	___lwdiv
  2056     064D  0871               	movf	?___lwdiv+1,w
  2057     064E  00FA               	movwf	___lwmod@dividend+1
  2058     064F  0870               	movf	?___lwdiv,w
  2059     0650  00F9               	movwf	___lwmod@dividend
  2060     0651  120A  118A  2487  120A  118A  	fcall	___lwmod
  2061     0656  0877               	movf	?___lwmod,w
  2062     0657  00FC               	movwf	write_ext_eeprom@data
  2063     0658  3003               	movlw	3
  2064     0659  120A  118A  2501  120A  118A  	fcall	_write_ext_eeprom
  2065                           
  2066                           ;main.c: 21: 
  2067     065E  300A               	movlw	10
  2068     065F  00F7               	movwf	___lwmod@divisor
  2069     0660  3000               	movlw	0
  2070     0661  00F8               	movwf	___lwmod@divisor+1
  2071     0662  1283               	bcf	3,5	;RP0=0, select bank0
  2072     0663  1303               	bcf	3,6	;RP1=0, select bank0
  2073     0664  0826               	movf	eeprom_test@count+1,w
  2074     0665  00FA               	movwf	___lwmod@dividend+1
  2075     0666  0825               	movf	eeprom_test@count,w
  2076     0667  00F9               	movwf	___lwmod@dividend
  2077     0668  120A  118A  2487  120A  118A  	fcall	___lwmod
  2078     066D  0877               	movf	?___lwmod,w
  2079     066E  00FC               	movwf	write_ext_eeprom@data
  2080     066F  3004               	movlw	4
  2081     0670  120A  118A  2501  120A  118A  	fcall	_write_ext_eeprom
  2082                           
  2083                           ;main.c: 22:     unsigned char key;
  2084     0675  01FC               	clrf	write_ext_eeprom@data
  2085     0676  0AFC               	incf	write_ext_eeprom@data,f
  2086     0677  3000               	movlw	0
  2087     0678  120A  118A  2501  120A  118A  	fcall	_write_ext_eeprom
  2088     067D                     l19:
  2089     067D  0008               	return
  2090     067E                     __end_of_eeprom_test:
  2091                           
  2092                           	psect	text11
  2093     0501                     __ptext11:	
  2094 ;; *************** function _write_ext_eeprom *****************
  2095 ;; Defined at:
  2096 ;;		line 10 in file "ext_eeprom.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  address         1    wreg     unsigned char 
  2099 ;;  data            1   12[COMMON] unsigned char 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  address         1    4[BANK0 ] unsigned char 
  2102 ;;  wait            4    0[BANK0 ] long 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         1       0       0       0       0
  2113 ;;      Locals:         0       5       0       0       0
  2114 ;;      Temps:          0       0       0       0       0
  2115 ;;      Totals:         1       5       0       0       0
  2116 ;;Total ram usage:        6 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 2
  2119 ;; This function calls:
  2120 ;;		_i2c_start
  2121 ;;		_i2c_stop
  2122 ;;		_i2c_write
  2123 ;; This function is called by:
  2124 ;;		_eeprom_test
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128     0501                     _write_ext_eeprom:	
  2129                           ;psect for function _write_ext_eeprom
  2130                           
  2131                           
  2132                           ;incstack = 0
  2133                           ; Regs used in _write_ext_eeprom: [wreg+status,2+status,0+pclath+cstack]
  2134                           ;write_ext_eeprom@address stored from wreg
  2135     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2136     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2137     0503  00A4               	movwf	write_ext_eeprom@address
  2138     0504                     l986:
  2139                           
  2140                           ;ext_eeprom.c: 11:     i2c_start();
  2141     0504  120A  118A  235A  120A  118A  	fcall	_i2c_start
  2142                           
  2143                           ;ext_eeprom.c: 12:     i2c_write(0xA0);
  2144     0509  30A0               	movlw	160
  2145     050A  120A  118A  2375  120A  118A  	fcall	_i2c_write
  2146                           
  2147                           ;ext_eeprom.c: 13:     i2c_write(address);
  2148     050F  1283               	bcf	3,5	;RP0=0, select bank0
  2149     0510  1303               	bcf	3,6	;RP1=0, select bank0
  2150     0511  0824               	movf	write_ext_eeprom@address,w
  2151     0512  120A  118A  2375  120A  118A  	fcall	_i2c_write
  2152                           
  2153                           ;ext_eeprom.c: 14:     i2c_write(data);
  2154     0517  087C               	movf	write_ext_eeprom@data,w
  2155     0518  120A  118A  2375  120A  118A  	fcall	_i2c_write
  2156                           
  2157                           ;ext_eeprom.c: 15:     i2c_stop();
  2158     051D  120A  118A  2363  120A  118A  	fcall	_i2c_stop
  2159     0522                     l988:
  2160                           
  2161                           ;ext_eeprom.c: 17:     for (long int wait = 50000; wait--;);
  2162     0522  3000               	movlw	0
  2163     0523  1283               	bcf	3,5	;RP0=0, select bank0
  2164     0524  1303               	bcf	3,6	;RP1=0, select bank0
  2165     0525  00A3               	movwf	write_ext_eeprom@wait+3
  2166     0526  3000               	movlw	0
  2167     0527  00A2               	movwf	write_ext_eeprom@wait+2
  2168     0528  30C3               	movlw	195
  2169     0529  00A1               	movwf	write_ext_eeprom@wait+1
  2170     052A  3050               	movlw	80
  2171     052B  00A0               	movwf	write_ext_eeprom@wait
  2172     052C                     l990:
  2173     052C  30FF               	movlw	255
  2174     052D  1283               	bcf	3,5	;RP0=0, select bank0
  2175     052E  1303               	bcf	3,6	;RP1=0, select bank0
  2176     052F  07A0               	addwf	write_ext_eeprom@wait,f
  2177     0530  30FF               	movlw	255
  2178     0531  1C03               	skipc
  2179     0532  07A1               	addwf	write_ext_eeprom@wait+1,f
  2180     0533  30FF               	movlw	255
  2181     0534  1C03               	skipc
  2182     0535  07A2               	addwf	write_ext_eeprom@wait+2,f
  2183     0536  30FF               	movlw	255
  2184     0537  1C03               	skipc
  2185     0538  07A3               	addwf	write_ext_eeprom@wait+3,f
  2186     0539  0A20               	incf	write_ext_eeprom@wait,w
  2187     053A  1D03               	skipz
  2188     053B  2D46               	goto	u551
  2189     053C  0A21               	incf	write_ext_eeprom@wait+1,w
  2190     053D  1D03               	skipz
  2191     053E  2D46               	goto	u551
  2192     053F  0A22               	incf	write_ext_eeprom@wait+2,w
  2193     0540  1D03               	skipz
  2194     0541  2D46               	goto	u551
  2195     0542  0A23               	incf	write_ext_eeprom@wait+3,w
  2196     0543  1D03               	btfss	3,2
  2197     0544  2D46               	goto	u551
  2198     0545  2D47               	goto	u550
  2199     0546                     u551:
  2200     0546  2D2C               	goto	l990
  2201     0547                     u550:
  2202     0547                     l75:
  2203     0547  0008               	return
  2204     0548                     __end_of_write_ext_eeprom:
  2205                           
  2206                           	psect	text12
  2207     0375                     __ptext12:	
  2208 ;; *************** function _i2c_write *****************
  2209 ;; Defined at:
  2210 ;;		line 57 in file "i2c.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  data            1    wreg     unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  data            1    0[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2   63[None  ] int 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         1       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         1       0       0       0       0
  2228 ;;Total ram usage:        1 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 1
  2231 ;; This function calls:
  2232 ;;		_i2c_wait_for_idle
  2233 ;; This function is called by:
  2234 ;;		_write_ext_eeprom
  2235 ;;		_read_ext_eeprom
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239     0375                     _i2c_write:	
  2240                           ;psect for function _i2c_write
  2241                           
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2245                           ;i2c_write@data stored from wreg
  2246     0375  00F0               	movwf	i2c_write@data
  2247     0376                     l950:
  2248                           
  2249                           ;i2c.c: 58:     i2c_wait_for_idle();
  2250     0376  120A  118A  238C  120A  118A  	fcall	_i2c_wait_for_idle
  2251     037B                     l952:
  2252                           
  2253                           ;i2c.c: 59:     SSPBUF = data;
  2254     037B  0870               	movf	i2c_write@data,w
  2255     037C  1283               	bcf	3,5	;RP0=0, select bank0
  2256     037D  1303               	bcf	3,6	;RP1=0, select bank0
  2257     037E  0093               	movwf	19	;volatile
  2258     037F                     l954:
  2259     037F                     l152:	
  2260                           ;i2c.c: 60:     return !ACKSTAT;;	Return value of _i2c_write is never used
  2261                           
  2262     037F  0008               	return
  2263     0380                     __end_of_i2c_write:
  2264                           
  2265                           	psect	text13
  2266     0363                     __ptext13:	
  2267 ;; *************** function _i2c_stop *****************
  2268 ;; Defined at:
  2269 ;;		line 37 in file "i2c.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 1
  2290 ;; This function calls:
  2291 ;;		_i2c_wait_for_idle
  2292 ;; This function is called by:
  2293 ;;		_write_ext_eeprom
  2294 ;;		_read_ext_eeprom
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298     0363                     _i2c_stop:	
  2299                           ;psect for function _i2c_stop
  2300                           
  2301     0363                     l958:	
  2302                           ;incstack = 0
  2303                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  2304                           
  2305                           
  2306                           ;i2c.c: 38:     i2c_wait_for_idle();
  2307     0363  120A  118A  238C  120A  118A  	fcall	_i2c_wait_for_idle
  2308     0368                     l960:
  2309                           
  2310                           ;i2c.c: 39:     PEN = 1;
  2311     0368  1683               	bsf	3,5	;RP0=1, select bank1
  2312     0369  1303               	bcf	3,6	;RP1=0, select bank1
  2313     036A  1511               	bsf	17,2	;volatile
  2314     036B                     l144:
  2315     036B  0008               	return
  2316     036C                     __end_of_i2c_stop:
  2317                           
  2318                           	psect	text14
  2319     035A                     __ptext14:	
  2320 ;; *************** function _i2c_start *****************
  2321 ;; Defined at:
  2322 ;;		line 24 in file "i2c.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0
  2339 ;;      Totals:         0       0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 1
  2343 ;; This function calls:
  2344 ;;		_i2c_wait_for_idle
  2345 ;; This function is called by:
  2346 ;;		_write_ext_eeprom
  2347 ;;		_read_ext_eeprom
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     035A                     _i2c_start:	
  2352                           ;psect for function _i2c_start
  2353                           
  2354     035A                     l946:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2357                           
  2358                           
  2359                           ;i2c.c: 25:     i2c_wait_for_idle();
  2360     035A  120A  118A  238C  120A  118A  	fcall	_i2c_wait_for_idle
  2361     035F                     l948:
  2362                           
  2363                           ;i2c.c: 26:     SEN = 1;
  2364     035F  1683               	bsf	3,5	;RP0=1, select bank1
  2365     0360  1303               	bcf	3,6	;RP1=0, select bank1
  2366     0361  1411               	bsf	17,0	;volatile
  2367     0362                     l138:
  2368     0362  0008               	return
  2369     0363                     __end_of_i2c_start:
  2370                           
  2371                           	psect	text15
  2372     038C                     __ptext15:	
  2373 ;; *************** function _i2c_wait_for_idle *****************
  2374 ;; Defined at:
  2375 ;;		line 19 in file "i2c.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_i2c_start
  2399 ;;		_i2c_rep_start
  2400 ;;		_i2c_stop
  2401 ;;		_i2c_read
  2402 ;;		_i2c_write
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406     038C                     _i2c_wait_for_idle:	
  2407                           ;psect for function _i2c_wait_for_idle
  2408                           
  2409     038C                     l942:	
  2410                           ;incstack = 0
  2411                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  2412                           
  2413     038C                     l132:	
  2414                           ;i2c.c: 21:     while (R_nW || (SSPCON2 & 0x1F));
  2415                           
  2416     038C  1683               	bsf	3,5	;RP0=1, select bank1
  2417     038D  1303               	bcf	3,6	;RP1=0, select bank1
  2418     038E  1914               	btfsc	20,2	;volatile
  2419     038F  2B91               	goto	u461
  2420     0390  2B92               	goto	u460
  2421     0391                     u461:
  2422     0391  2B8C               	goto	l132
  2423     0392                     u460:
  2424     0392                     l944:
  2425     0392  0811               	movf	17,w	;volatile
  2426     0393  391F               	andlw	31
  2427     0394  1D03               	btfss	3,2
  2428     0395  2B97               	goto	u471
  2429     0396  2B98               	goto	u470
  2430     0397                     u471:
  2431     0397  2B8C               	goto	l132
  2432     0398                     u470:
  2433     0398                     l135:
  2434     0398  0008               	return
  2435     0399                     __end_of_i2c_wait_for_idle:
  2436                           
  2437                           	psect	text16
  2438     0487                     __ptext16:	
  2439 ;; *************** function ___lwmod *****************
  2440 ;; Defined at:
  2441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  divisor         2    7[COMMON] unsigned int 
  2444 ;;  dividend        2    9[COMMON] unsigned int 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  counter         1   11[COMMON] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    7[COMMON] unsigned int 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         4       0       0       0       0
  2457 ;;      Locals:         1       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0
  2459 ;;      Totals:         5       0       0       0       0
  2460 ;;Total ram usage:        5 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_eeprom_test
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470     0487                     ___lwmod:	
  2471                           ;psect for function ___lwmod
  2472                           
  2473     0487                     l1050:	
  2474                           ;incstack = 0
  2475                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2476                           
  2477     0487  0877               	movf	___lwmod@divisor,w
  2478     0488  0478               	iorwf	___lwmod@divisor+1,w
  2479     0489  1903               	btfsc	3,2
  2480     048A  2C8C               	goto	u651
  2481     048B  2C8D               	goto	u650
  2482     048C                     u651:
  2483     048C  2CBA               	goto	l1068
  2484     048D                     u650:
  2485     048D                     l1052:
  2486     048D  3001               	movlw	1
  2487     048E  00FB               	movwf	___lwmod@counter
  2488     048F  2C99               	goto	l1058
  2489     0490                     l1054:
  2490     0490  3001               	movlw	1
  2491     0491                     u665:
  2492     0491  1003               	clrc
  2493     0492  0DF7               	rlf	___lwmod@divisor,f
  2494     0493  0DF8               	rlf	___lwmod@divisor+1,f
  2495     0494  3EFF               	addlw	-1
  2496     0495  1D03               	skipz
  2497     0496  2C91               	goto	u665
  2498     0497                     l1056:
  2499     0497  3001               	movlw	1
  2500     0498  07FB               	addwf	___lwmod@counter,f
  2501     0499                     l1058:
  2502     0499  1FF8               	btfss	___lwmod@divisor+1,7
  2503     049A  2C9C               	goto	u671
  2504     049B  2C9D               	goto	u670
  2505     049C                     u671:
  2506     049C  2C90               	goto	l1054
  2507     049D                     u670:
  2508     049D                     l1060:
  2509     049D  0878               	movf	___lwmod@divisor+1,w
  2510     049E  027A               	subwf	___lwmod@dividend+1,w
  2511     049F  1D03               	skipz
  2512     04A0  2CA3               	goto	u685
  2513     04A1  0877               	movf	___lwmod@divisor,w
  2514     04A2  0279               	subwf	___lwmod@dividend,w
  2515     04A3                     u685:
  2516     04A3  1C03               	skipc
  2517     04A4  2CA6               	goto	u681
  2518     04A5  2CA7               	goto	u680
  2519     04A6                     u681:
  2520     04A6  2CAD               	goto	l1064
  2521     04A7                     u680:
  2522     04A7                     l1062:
  2523     04A7  0877               	movf	___lwmod@divisor,w
  2524     04A8  02F9               	subwf	___lwmod@dividend,f
  2525     04A9  0878               	movf	___lwmod@divisor+1,w
  2526     04AA  1C03               	skipc
  2527     04AB  03FA               	decf	___lwmod@dividend+1,f
  2528     04AC  02FA               	subwf	___lwmod@dividend+1,f
  2529     04AD                     l1064:
  2530     04AD  3001               	movlw	1
  2531     04AE                     u695:
  2532     04AE  1003               	clrc
  2533     04AF  0CF8               	rrf	___lwmod@divisor+1,f
  2534     04B0  0CF7               	rrf	___lwmod@divisor,f
  2535     04B1  3EFF               	addlw	-1
  2536     04B2  1D03               	skipz
  2537     04B3  2CAE               	goto	u695
  2538     04B4                     l1066:
  2539     04B4  3001               	movlw	1
  2540     04B5  02FB               	subwf	___lwmod@counter,f
  2541     04B6  1D03               	btfss	3,2
  2542     04B7  2CB9               	goto	u701
  2543     04B8  2CBA               	goto	u700
  2544     04B9                     u701:
  2545     04B9  2C9D               	goto	l1060
  2546     04BA                     u700:
  2547     04BA                     l1068:
  2548     04BA  087A               	movf	___lwmod@dividend+1,w
  2549     04BB  00F8               	movwf	?___lwmod+1
  2550     04BC  0879               	movf	___lwmod@dividend,w
  2551     04BD  00F7               	movwf	?___lwmod
  2552     04BE                     l528:
  2553     04BE  0008               	return
  2554     04BF                     __end_of___lwmod:
  2555                           
  2556                           	psect	text17
  2557     04BF                     __ptext17:	
  2558 ;; *************** function ___lwdiv *****************
  2559 ;; Defined at:
  2560 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  divisor         2    0[COMMON] unsigned int 
  2563 ;;  dividend        2    2[COMMON] unsigned int 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  quotient        2    4[COMMON] unsigned int 
  2566 ;;  counter         1    6[COMMON] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2    0[COMMON] unsigned int 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         4       0       0       0       0
  2577 ;;      Locals:         3       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0
  2579 ;;      Totals:         7       0       0       0       0
  2580 ;;Total ram usage:        7 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_eeprom_test
  2586 ;;		_main
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590     04BF                     ___lwdiv:	
  2591                           ;psect for function ___lwdiv
  2592                           
  2593     04BF                     l1024:	
  2594                           ;incstack = 0
  2595                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2596                           
  2597     04BF  01F4               	clrf	___lwdiv@quotient
  2598     04C0  01F5               	clrf	___lwdiv@quotient+1
  2599     04C1                     l1026:
  2600     04C1  0870               	movf	___lwdiv@divisor,w
  2601     04C2  0471               	iorwf	___lwdiv@divisor+1,w
  2602     04C3  1903               	btfsc	3,2
  2603     04C4  2CC6               	goto	u581
  2604     04C5  2CC7               	goto	u580
  2605     04C6                     u581:
  2606     04C6  2CFC               	goto	l1046
  2607     04C7                     u580:
  2608     04C7                     l1028:
  2609     04C7  3001               	movlw	1
  2610     04C8  00F6               	movwf	___lwdiv@counter
  2611     04C9  2CD3               	goto	l1034
  2612     04CA                     l1030:
  2613     04CA  3001               	movlw	1
  2614     04CB                     u595:
  2615     04CB  1003               	clrc
  2616     04CC  0DF0               	rlf	___lwdiv@divisor,f
  2617     04CD  0DF1               	rlf	___lwdiv@divisor+1,f
  2618     04CE  3EFF               	addlw	-1
  2619     04CF  1D03               	skipz
  2620     04D0  2CCB               	goto	u595
  2621     04D1                     l1032:
  2622     04D1  3001               	movlw	1
  2623     04D2  07F6               	addwf	___lwdiv@counter,f
  2624     04D3                     l1034:
  2625     04D3  1FF1               	btfss	___lwdiv@divisor+1,7
  2626     04D4  2CD6               	goto	u601
  2627     04D5  2CD7               	goto	u600
  2628     04D6                     u601:
  2629     04D6  2CCA               	goto	l1030
  2630     04D7                     u600:
  2631     04D7                     l1036:
  2632     04D7  3001               	movlw	1
  2633     04D8                     u615:
  2634     04D8  1003               	clrc
  2635     04D9  0DF4               	rlf	___lwdiv@quotient,f
  2636     04DA  0DF5               	rlf	___lwdiv@quotient+1,f
  2637     04DB  3EFF               	addlw	-1
  2638     04DC  1D03               	skipz
  2639     04DD  2CD8               	goto	u615
  2640     04DE  0871               	movf	___lwdiv@divisor+1,w
  2641     04DF  0273               	subwf	___lwdiv@dividend+1,w
  2642     04E0  1D03               	skipz
  2643     04E1  2CE4               	goto	u625
  2644     04E2  0870               	movf	___lwdiv@divisor,w
  2645     04E3  0272               	subwf	___lwdiv@dividend,w
  2646     04E4                     u625:
  2647     04E4  1C03               	skipc
  2648     04E5  2CE7               	goto	u621
  2649     04E6  2CE8               	goto	u620
  2650     04E7                     u621:
  2651     04E7  2CEF               	goto	l1042
  2652     04E8                     u620:
  2653     04E8                     l1038:
  2654     04E8  0870               	movf	___lwdiv@divisor,w
  2655     04E9  02F2               	subwf	___lwdiv@dividend,f
  2656     04EA  0871               	movf	___lwdiv@divisor+1,w
  2657     04EB  1C03               	skipc
  2658     04EC  03F3               	decf	___lwdiv@dividend+1,f
  2659     04ED  02F3               	subwf	___lwdiv@dividend+1,f
  2660     04EE                     l1040:
  2661     04EE  1474               	bsf	___lwdiv@quotient,0
  2662     04EF                     l1042:
  2663     04EF  3001               	movlw	1
  2664     04F0                     u635:
  2665     04F0  1003               	clrc
  2666     04F1  0CF1               	rrf	___lwdiv@divisor+1,f
  2667     04F2  0CF0               	rrf	___lwdiv@divisor,f
  2668     04F3  3EFF               	addlw	-1
  2669     04F4  1D03               	skipz
  2670     04F5  2CF0               	goto	u635
  2671     04F6                     l1044:
  2672     04F6  3001               	movlw	1
  2673     04F7  02F6               	subwf	___lwdiv@counter,f
  2674     04F8  1D03               	btfss	3,2
  2675     04F9  2CFB               	goto	u641
  2676     04FA  2CFC               	goto	u640
  2677     04FB                     u641:
  2678     04FB  2CD7               	goto	l1036
  2679     04FC                     u640:
  2680     04FC                     l1046:
  2681     04FC  0875               	movf	___lwdiv@quotient+1,w
  2682     04FD  00F1               	movwf	?___lwdiv+1
  2683     04FE  0874               	movf	___lwdiv@quotient,w
  2684     04FF  00F0               	movwf	?___lwdiv
  2685     0500                     l518:
  2686     0500  0008               	return
  2687     0501                     __end_of___lwdiv:
  2688                           
  2689                           	psect	text18
  2690     0353                     __ptext18:	
  2691 ;; *************** function _display_ssd *****************
  2692 ;; Defined at:
  2693 ;;		line 31 in file "ssd.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  count           2    0[COMMON] unsigned int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		None
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2707 ;;      Params:         2       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0
  2710 ;;      Totals:         2       0       0       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720     0353                     _display_ssd:	
  2721                           ;psect for function _display_ssd
  2722                           
  2723     0353                     l100:	
  2724                           ;incstack = 0
  2725                           ; Regs used in _display_ssd: []
  2726                           
  2727     0353  0008               	return
  2728     0354                     __end_of_display_ssd:
  2729                           
  2730                           	psect	text19
  2731     0548                     __ptext19:	
  2732 ;; *************** function _display *****************
  2733 ;; Defined at:
  2734 ;;		line 19 in file "ssd.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  data            1    0[COMMON] PTR unsigned char 
  2737 ;;		 -> ssd(4), 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  wait            4    5[COMMON] unsigned long 
  2740 ;;  digit           1    9[COMMON] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         1       0       0       0       0
  2751 ;;      Locals:         5       0       0       0       0
  2752 ;;      Temps:          4       0       0       0       0
  2753 ;;      Totals:        10       0       0       0       0
  2754 ;;Total ram usage:       10 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763     0548                     _display:	
  2764                           ;psect for function _display
  2765                           
  2766     0548                     l1100:	
  2767                           ;incstack = 0
  2768                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  2769                           
  2770                           
  2771                           ;ssd.c: 20:     unsigned char digit;;ssd.c: 22:     for (digit = 0; digit < 4; digit++) 
      +                          {
  2772     0548  01F9               	clrf	display@digit
  2773     0549                     l1106:
  2774                           
  2775                           ;ssd.c: 23:         PORTD = data[digit];
  2776     0549  0879               	movf	display@digit,w
  2777     054A  0770               	addwf	display@data,w
  2778     054B  00F1               	movwf	??_display
  2779     054C  0871               	movf	??_display,w
  2780     054D  0084               	movwf	4
  2781     054E  1383               	bcf	3,7	;select IRP bank0
  2782     054F  0800               	movf	0,w
  2783     0550  1283               	bcf	3,5	;RP0=0, select bank0
  2784     0551  1303               	bcf	3,6	;RP1=0, select bank0
  2785     0552  0088               	movwf	8	;volatile
  2786     0553                     l1108:
  2787                           
  2788                           ;ssd.c: 25:         PORTA = (PORTA & 0x03) | (0x04 << digit);
  2789     0553  3004               	movlw	4
  2790     0554  00F1               	movwf	??_display
  2791     0555  0A79               	incf	display@digit,w
  2792     0556  2D59               	goto	u734
  2793     0557                     u735:
  2794     0557  1003               	clrc
  2795     0558  0DF1               	rlf	??_display,f
  2796     0559                     u734:
  2797     0559  3EFF               	addlw	-1
  2798     055A  1D03               	skipz
  2799     055B  2D57               	goto	u735
  2800     055C  0805               	movf	5,w	;volatile
  2801     055D  3903               	andlw	3
  2802     055E  0471               	iorwf	??_display,w
  2803     055F  0085               	movwf	5	;volatile
  2804     0560                     l1110:
  2805                           
  2806                           ;ssd.c: 27:         for (unsigned long int wait = 400; wait--;);
  2807     0560  3000               	movlw	0
  2808     0561  00F8               	movwf	display@wait+3
  2809     0562  3000               	movlw	0
  2810     0563  00F7               	movwf	display@wait+2
  2811     0564  3001               	movlw	1
  2812     0565  00F6               	movwf	display@wait+1
  2813     0566  3090               	movlw	144
  2814     0567  00F5               	movwf	display@wait
  2815     0568                     l1112:
  2816     0568  3001               	movlw	1
  2817     0569  00F1               	movwf	??_display
  2818     056A  3000               	movlw	0
  2819     056B  00F2               	movwf	??_display+1
  2820     056C  3000               	movlw	0
  2821     056D  00F3               	movwf	??_display+2
  2822     056E  3000               	movlw	0
  2823     056F  00F4               	movwf	??_display+3
  2824     0570  0871               	movf	??_display,w
  2825     0571  02F5               	subwf	display@wait,f
  2826     0572  0872               	movf	??_display+1,w
  2827     0573  1C03               	skipc
  2828     0574  0F72               	incfsz	??_display+1,w
  2829     0575  2D77               	goto	u745
  2830     0576  2D78               	goto	u746
  2831     0577                     u745:
  2832     0577  02F6               	subwf	display@wait+1,f
  2833     0578                     u746:
  2834     0578  0873               	movf	??_display+2,w
  2835     0579  1C03               	skipc
  2836     057A  0F73               	incfsz	??_display+2,w
  2837     057B  2D7D               	goto	u747
  2838     057C  2D7E               	goto	u748
  2839     057D                     u747:
  2840     057D  02F7               	subwf	display@wait+2,f
  2841     057E                     u748:
  2842     057E  0874               	movf	??_display+3,w
  2843     057F  1C03               	skipc
  2844     0580  0F74               	incfsz	??_display+3,w
  2845     0581  2D83               	goto	u749
  2846     0582  2D84               	goto	u740
  2847     0583                     u749:
  2848     0583  02F8               	subwf	display@wait+3,f
  2849     0584                     u740:
  2850     0584  0A75               	incf	display@wait,w
  2851     0585  1D03               	skipz
  2852     0586  2D91               	goto	u751
  2853     0587  0A76               	incf	display@wait+1,w
  2854     0588  1D03               	skipz
  2855     0589  2D91               	goto	u751
  2856     058A  0A77               	incf	display@wait+2,w
  2857     058B  1D03               	skipz
  2858     058C  2D91               	goto	u751
  2859     058D  0A78               	incf	display@wait+3,w
  2860     058E  1D03               	btfss	3,2
  2861     058F  2D91               	goto	u751
  2862     0590  2D92               	goto	u750
  2863     0591                     u751:
  2864     0591  2D68               	goto	l1112
  2865     0592                     u750:
  2866     0592                     l1114:
  2867                           
  2868                           ;ssd.c: 28:     }
  2869     0592  3001               	movlw	1
  2870     0593  07F9               	addwf	display@digit,f
  2871     0594                     l1116:
  2872     0594  3004               	movlw	4
  2873     0595  0279               	subwf	display@digit,w
  2874     0596  1C03               	skipc
  2875     0597  2D99               	goto	u761
  2876     0598  2D9A               	goto	u760
  2877     0599                     u761:
  2878     0599  2D49               	goto	l1106
  2879     059A                     u760:
  2880     059A                     l97:
  2881     059A  0008               	return
  2882     059B                     __end_of_display:
  2883                           
  2884                           	psect	text20
  2885     0405                     __ptext20:	
  2886 ;; *************** function ___wmul *****************
  2887 ;; Defined at:
  2888 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  multiplier      2    4[COMMON] unsigned int 
  2891 ;;  multiplicand    2    6[COMMON] unsigned int 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  product         2    8[COMMON] unsigned int 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    4[COMMON] unsigned int 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2903 ;;      Params:         4       0       0       0       0
  2904 ;;      Locals:         2       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0
  2906 ;;      Totals:         6       0       0       0       0
  2907 ;;Total ram usage:        6 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916     0405                     ___wmul:	
  2917                           ;psect for function ___wmul
  2918                           
  2919     0405                     l1118:	
  2920                           ;incstack = 0
  2921                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2922                           
  2923     0405  01F8               	clrf	___wmul@product
  2924     0406  01F9               	clrf	___wmul@product+1
  2925     0407                     l1120:
  2926     0407  1C74               	btfss	___wmul@multiplier,0
  2927     0408  2C0A               	goto	u771
  2928     0409  2C0B               	goto	u770
  2929     040A                     u771:
  2930     040A  2C11               	goto	l238
  2931     040B                     u770:
  2932     040B                     l1122:
  2933     040B  0876               	movf	___wmul@multiplicand,w
  2934     040C  07F8               	addwf	___wmul@product,f
  2935     040D  1803               	skipnc
  2936     040E  0AF9               	incf	___wmul@product+1,f
  2937     040F  0877               	movf	___wmul@multiplicand+1,w
  2938     0410  07F9               	addwf	___wmul@product+1,f
  2939     0411                     l238:
  2940     0411  3001               	movlw	1
  2941     0412                     u785:
  2942     0412  1003               	clrc
  2943     0413  0DF6               	rlf	___wmul@multiplicand,f
  2944     0414  0DF7               	rlf	___wmul@multiplicand+1,f
  2945     0415  3EFF               	addlw	-1
  2946     0416  1D03               	skipz
  2947     0417  2C12               	goto	u785
  2948     0418                     l1124:
  2949     0418  3001               	movlw	1
  2950     0419                     u795:
  2951     0419  1003               	clrc
  2952     041A  0CF5               	rrf	___wmul@multiplier+1,f
  2953     041B  0CF4               	rrf	___wmul@multiplier,f
  2954     041C  3EFF               	addlw	-1
  2955     041D  1D03               	skipz
  2956     041E  2C19               	goto	u795
  2957     041F                     l1126:
  2958     041F  0874               	movf	___wmul@multiplier,w
  2959     0420  0475               	iorwf	___wmul@multiplier+1,w
  2960     0421  1D03               	btfss	3,2
  2961     0422  2C24               	goto	u801
  2962     0423  2C25               	goto	u800
  2963     0424                     u801:
  2964     0424  2C07               	goto	l1120
  2965     0425                     u800:
  2966     0425                     l1128:
  2967     0425  0879               	movf	___wmul@product+1,w
  2968     0426  00F5               	movwf	?___wmul+1
  2969     0427  0878               	movf	___wmul@product,w
  2970     0428  00F4               	movwf	?___wmul
  2971     0429                     l240:
  2972     0429  0008               	return
  2973     042A                     __end_of___wmul:
  2974     0002                     ___latbits      equ	2
  2975     007E                     btemp           set	126	;btemp
  2976     007E                     wtemp0          set	126
  2977                           
  2978                           	psect	config
  2979                           
  2980                           ;Config register CONFIG @ 0x2007
  2981                           ;	Oscillator Selection bits
  2982                           ;	FOSC = 0x3, unprogrammed default
  2983                           ;	Watchdog Timer Enable bit
  2984                           ;	WDTE = OFF, WDT disabled
  2985                           ;	Power-up Timer Enable bit
  2986                           ;	PWRTE = 0x1, unprogrammed default
  2987                           ;	Brown-out Reset Enable bit
  2988                           ;	BOREN = 0x1, unprogrammed default
  2989                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2990                           ;	LVP = 0x1, unprogrammed default
  2991                           ;	Data EEPROM Memory Code Protection bit
  2992                           ;	CPD = 0x1, unprogrammed default
  2993                           ;	Flash Program Memory Write Enable bits
  2994                           ;	WRT = 0x3, unprogrammed default
  2995                           ;	In-Circuit Debugger Mode bit
  2996                           ;	DEBUG = 0x1, unprogrammed default
  2997                           ;	Flash Program Memory Code Protection bit
  2998                           ;	CP = 0x1, unprogrammed default
  2999     2007                     	org	8199
  3000     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _read_ext_eeprom->_i2c_read
    _init_i2c->___lldiv
    _eeprom_test->_write_ext_eeprom
    _write_ext_eeprom->___lwmod
    ___lwmod->___lwdiv
    ___wmul->_read_ext_eeprom

Critical Paths under _main in BANK0

    _init_config->_init_i2c
    _eeprom_test->_write_ext_eeprom

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    1578
                                              8 BANK0     15    15      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _display
                        _display_ssd
                        _eeprom_test
                        _init_config
                _read_digital_keypad
                    _read_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _read_ext_eeprom                                      2     2      0     133
                                              2 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_rep_start                                        0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             2     2      0      52
                                              0 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     187
                _init_digital_keypad
                           _init_i2c
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     187
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     164
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_test                                          2     0      2     542
                                              5 BANK0      2     0      2
                            ___lwdiv
                            ___lwmod
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_ext_eeprom                                     6     5      1     108
                                             12 COMMON     1     0      1
                                              0 BANK0      5     5      0
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      29
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     171
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     174
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _display_ssd                                          2     0      2       1
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display                                             10     9      1     136
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      98
                                              4 COMMON     6     2      4
                    _read_ext_eeprom (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   ___wmul
     _read_ext_eeprom (ARG)
       _i2c_read
         _i2c_wait_for_idle
       _i2c_rep_start
         _i2c_wait_for_idle
       _i2c_start
         _i2c_wait_for_idle
       _i2c_stop
         _i2c_wait_for_idle
       _i2c_write
         _i2c_wait_for_idle
   _display
   _display_ssd
   _eeprom_test
     ___lwdiv
     ___lwmod
     _write_ext_eeprom
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _i2c_start (ARG)
       _i2c_stop (ARG)
       _i2c_write (ARG)
   _init_config
     _init_digital_keypad
     _init_i2c
       ___lldiv
     _init_ssd
   _read_digital_keypad
   _read_ext_eeprom

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     23      41     51.2%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      55      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Dec 25 20:18:49 2024

                          pc 0002                           l22 03E3                           l19 067D  
                         l52 0359                           l55 03AF                           l56 03B6  
                         l75 0547                           l78 0454                           l97 059A  
                         l89 038B                 ?_display_ssd 0070                           fsr 0004  
        ___wmul@multiplicand 0076                          l100 0353                          l132 038C  
                        l141 0374                          l135 0398                          l240 0429  
                        l144 036B                          l152 037F                          l129 0486  
                        l138 0362                          l147 03FF                          l148 0402  
                        l149 0404                          l238 0411                          l274 05FE  
                        l518 0500                          l528 04BE                          l942 038C  
                        l950 0376                          l944 0392                          l960 0368  
                        l952 037B                          l946 035A                          l954 037F  
                        l970 05BD                          l962 059B                          l948 035F  
                        l980 05F0                          l972 05C6                          l964 05AB  
                        l958 0363                          l990 052C                          l974 05D8  
                        l966 05AE                          l982 05F6                          l976 05E6  
                        l968 05B9                          l992 0380                          l986 0504  
                        l978 05E7                          l994 0383                          l988 0522  
                        l996 0386                          l998 0354                          u500 05BD  
                        u501 05BC                          u600 04D7                          u520 05D8  
                        _PEN 048A                          u601 04D6                          u521 05D7  
                        u515 05BF                          u620 04E8                          u700 04BA  
                        u460 0392                          u540 05F6                          u621 04E7  
                        u701 04B9                          u461 0391                          u541 05F5  
                        u525 05D4                          u470 0398                          u550 0547  
                        u710 03AD                          u615 04D8                          u471 0397  
                        u551 0546                          u535 05E8                          u711 03AC  
                        u800 0425                          u640 04FC                          u480 05AB  
                        u560 0466                          u720 03B3                          u801 0424  
                        u641 04FB                          u625 04E4                          u481 05AA  
                        u721 03B2                          u650 048D                          u570 03FB  
                        u810 0692                          u635 04F0                          u651 048C  
                        u571 03FA                          u811 0691                          u740 0584  
                        u580 04C7                          u900 0766                          u820 071B  
                        _SEN 0488                          u581 04C6                          u565 0461  
                        u901 0765                          u821 071A                          u750 0592  
                        u734 0559                          u670 049D                          u830 0726  
                        u751 0591                          u735 0557                          u671 049C  
                        u495 05B0                          u831 0725                          u760 059A  
                        u680 04A7                          u840 072F                          u761 0599  
                        u745 0577                          u681 04A6                          u665 0491  
                        u841 072E                          u770 040B                          u746 0578  
                        u850 073A                          u771 040A                          u747 057D  
                        u595 04CB                          u851 0739                          u748 057E  
                        u860 0740                          u749 0583                          u685 04A3  
                        u861 073F                          u870 0749                          u695 04AE  
                        u871 0748                          u880 074F                          u785 0412  
                        u881 074E                          u890 0758                          u795 0419  
                        u891 0757                          _ssd 0041                          fsr0 0004  
                        indf 0000                         l1000 0455                         l1002 0458  
                       l1010 03E5                         l1100 0548                         l1004 0483  
                       l1020 0403                         l1012 03EA                         l1110 0560  
                       l1030 04CA                         l1014 03F2                         l1006 036C  
                       l1120 0407                         l1112 0568                         l1040 04EE  
                       l1032 04D1                         l1024 04BF                         l1016 03F6  
                       l1008 0371                         l1122 040B                         l1114 0592  
                       l1106 0549                         l1042 04EF                         l1034 04D3  
                       l1026 04C1                         l1050 0487                         l1018 03FB  
                       l1124 0418                         l1116 0594                         l1108 0553  
                       l1044 04F6                         l1036 04D7                         l1028 04C7  
                       l1060 049D                         l1052 048D                         l1140 0701  
                       l1132 067E                         l1126 041F                         l1118 0405  
                       l1038 04E8                         l1046 04FC                         l1062 04A7  
                       l1054 0490                         l1150 0721                         l1142 0705  
                       l1134 0682                         l1128 0425                         l1064 04AD  
                       l1056 0497                         l1072 05FF                         l1160 073A  
                       l1152 0726                         l1144 070E                         l1136 0687  
                       l1066 04B4                         l1058 0499                         l1074 03CA  
                       l1090 03B3                         l1082 03A7                         l1170 0758  
                       l1162 0740                         l1154 072F                         l1146 0716  
                       l1138 0692                         l1068 04BA                         l1084 03AD  
                       l1076 042B                         l1180 0786                         l1172 075E  
                       l1164 0744                         l1156 0731                         l1148 071B  
                       l1078 0453                         l1182 07A8                         l1166 0749  
                       l1174 0760                         l1158 0735                         l1096 03B5  
                       l1184 07CA                         l1176 0766                         l1168 074F  
      ??_read_digital_keypad 0070                         l1186 07DF                         l1178 076F  
                       _RCEN 048B                         _RSEN 0489                         _R_nW 04A2  
                display@data 0070                  display@wait 0075                         _main 067E  
                       btemp 007E                         start 0000                _i2c_rep_start 036C  
                      ?_main 0070                        _ACKEN 048C                        _ACKDT 048D  
            __end_of___lldiv 05FF                  i2c_read@ack 0070              __end_of___lwdiv 0501  
            __end_of___lwmod 04BF                 ?_init_config 0070                        _PORTA 0005  
                      _PORTB 0006                        _PORTD 0008                        _SSPM3 00A3  
                      _TRISA 0085                        _TRISB 0086                        _TRISD 0088  
                      _SSPEN 00A5                 display@digit 0079              __end_of_display 059B  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 07EA               ?_i2c_rep_start 0070                 __end_of_main 07EA  
           __end_of_i2c_read 0405             __end_of_i2c_stop 036C            ??_read_ext_eeprom 0072  
                     ??_main 0028         write_ext_eeprom@data 007C         write_ext_eeprom@wait 0020  
           _write_ext_eeprom 0501                 i2c_read@data 0071                       _SSPADD 0093  
                     _SSPBUF 0013  __end_of_init_digital_keypad 035A                       ___wmul 0405  
                  ??___lldiv 0078                       _digits 0037                    ??___lwdiv 0074  
                  ??___lwmod 007B             __end_of_init_i2c 0487             __end_of_init_ssd 038C  
                  ??_display 0071      __end_of__initialization 07FC              ??_i2c_rep_start 0070  
             __pcstackCOMMON 0070                 __pidataBANK0 0399            __end_of_i2c_start 0363  
          __end_of_i2c_write 0380            _i2c_wait_for_idle 038C      write_ext_eeprom@address 0024  
         ?_i2c_wait_for_idle 0070                   __pbssBANK0 0045                    ?_i2c_read 0070  
                  ?_i2c_stop 0070          ??_i2c_wait_for_idle 0070                   __pmaintext 067E  
                    ?___wmul 0074                      _ACKSTAT 048E  __end_of_read_digital_keypad 03B7  
  __end_of_i2c_wait_for_idle 0399                 init_i2c@baud 0020                      _SSPCON2 0091  
                 ??_i2c_read 0070                   ??_i2c_stop 0070                    ?_init_i2c 0020  
                  ?_init_ssd 0070              _read_ext_eeprom 042A                      ___lldiv 059B  
   __end_of_write_ext_eeprom 0548                      ___lwdiv 04BF                      ___lwmod 0487  
                    __ptext1 042A                      __ptext2 036C                      __ptext3 03E4  
                    __ptext4 03A7                      __ptext5 03CA                      __ptext6 0380  
                    __ptext7 0455                      __ptext8 059B                      __ptext9 0354  
                    _display 0548         main@key_pressed_time 0047                      main@key 0036  
       end_of_initialization 07FC                   ??_init_i2c 0024                   ??_init_ssd 0070  
            ___lldiv@divisor 0070              ___lldiv@counter 007D                i2c_write@data 0070  
    __end_of_read_ext_eeprom 0455                ??_eeprom_test 007D                ??_display_ssd 0072  
             __end_of___wmul 042A          start_initialization 07EA                    _i2c_start 035A  
                  _i2c_write 0375             eeprom_test@count 0025        __end_of_i2c_rep_start 0375  
                   ??___wmul 0078                   init_fetch0 03B7          __end_of_eeprom_test 067E  
                __pdataBANK0 0037                ??_init_config 007E          __end_of_display_ssd 0354  
                  ___latbits 0002                __pcstackBANK0 0020                   ?_i2c_start 0070  
                 ?_i2c_write 0070             ?_read_ext_eeprom 0070             ___lwdiv@dividend 0072  
                   ?___lldiv 0070                     ?___lwdiv 0070                     ?___lwmod 0077  
          ?_write_ext_eeprom 007C           ??_write_ext_eeprom 007D                     ?_display 0070  
           ___lwdiv@quotient 0074          __end_of_init_config 03E4               ___wmul@product 0078  
                _eeprom_test 05FF                  _display_ssd 0353            ___wmul@multiplier 0074  
                  main@count 0045                  ??_i2c_start 0070                  ??_i2c_write 0070  
        _init_digital_keypad 0354                     _i2c_read 03E4                     _i2c_stop 0363  
       ?_init_digital_keypad 0070       read_ext_eeprom@address 0072                  _init_config 03CA  
            ___lwdiv@divisor 0070              ___lwdiv@counter 0076                     __ptext10 05FF  
                   __ptext11 0501                     __ptext20 0405                     __ptext12 0375  
                   __ptext13 0363                     __ptext14 035A                     __ptext15 038C  
                   __ptext16 0487                     __ptext17 04BF                     __ptext18 0353  
                   __ptext19 0548                     _init_i2c 0455          read_ext_eeprom@data 0073  
                   _init_ssd 0380        ??_init_digital_keypad 0070                     main@once 0034  
           display_ssd@count 0070                     init_ram0 03BB             ___lwmod@dividend 0079  
           ___lldiv@dividend 0074          _read_digital_keypad 03A7             ___lldiv@quotient 0079  
            ___lwmod@divisor 0077              ___lwmod@counter 007B         ?_read_digital_keypad 0070  
               ?_eeprom_test 0025  
