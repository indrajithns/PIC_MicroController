

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Dec 07 19:22:31 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,space=0,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0004                     fsr             equ	4
    52     0004                     fsr0            equ	4
    53     0000                     indf            equ	0
    54     0000                     indf0           equ	0
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0000                     INDF            equ	0	;# 
    60     0001                     TMR0            equ	1	;# 
    61     0002                     PCL             equ	2	;# 
    62     0003                     STATUS          equ	3	;# 
    63     0004                     FSR             equ	4	;# 
    64     0005                     PORTA           equ	5	;# 
    65     0006                     PORTB           equ	6	;# 
    66     0007                     PORTC           equ	7	;# 
    67     0008                     PORTD           equ	8	;# 
    68     0009                     PORTE           equ	9	;# 
    69     000A                     PCLATH          equ	10	;# 
    70     000B                     INTCON          equ	11	;# 
    71     000C                     PIR1            equ	12	;# 
    72     000D                     PIR2            equ	13	;# 
    73     000E                     TMR1            equ	14	;# 
    74     000E                     TMR1L           equ	14	;# 
    75     000F                     TMR1H           equ	15	;# 
    76     0010                     T1CON           equ	16	;# 
    77     0011                     TMR2            equ	17	;# 
    78     0012                     T2CON           equ	18	;# 
    79     0013                     SSPBUF          equ	19	;# 
    80     0014                     SSPCON          equ	20	;# 
    81     0015                     CCPR1           equ	21	;# 
    82     0015                     CCPR1L          equ	21	;# 
    83     0016                     CCPR1H          equ	22	;# 
    84     0017                     CCP1CON         equ	23	;# 
    85     0018                     RCSTA           equ	24	;# 
    86     0019                     TXREG           equ	25	;# 
    87     001A                     RCREG           equ	26	;# 
    88     001B                     CCPR2           equ	27	;# 
    89     001B                     CCPR2L          equ	27	;# 
    90     001C                     CCPR2H          equ	28	;# 
    91     001D                     CCP2CON         equ	29	;# 
    92     001E                     ADRESH          equ	30	;# 
    93     001F                     ADCON0          equ	31	;# 
    94     0081                     OPTION_REG      equ	129	;# 
    95     0085                     TRISA           equ	133	;# 
    96     0086                     TRISB           equ	134	;# 
    97     0087                     TRISC           equ	135	;# 
    98     0088                     TRISD           equ	136	;# 
    99     0089                     TRISE           equ	137	;# 
   100     008C                     PIE1            equ	140	;# 
   101     008D                     PIE2            equ	141	;# 
   102     008E                     PCON            equ	142	;# 
   103     0091                     SSPCON2         equ	145	;# 
   104     0092                     PR2             equ	146	;# 
   105     0093                     SSPADD          equ	147	;# 
   106     0094                     SSPSTAT         equ	148	;# 
   107     0098                     TXSTA           equ	152	;# 
   108     0099                     SPBRG           equ	153	;# 
   109     009C                     CMCON           equ	156	;# 
   110     009D                     CVRCON          equ	157	;# 
   111     009E                     ADRESL          equ	158	;# 
   112     009F                     ADCON1          equ	159	;# 
   113     010C                     EEDATA          equ	268	;# 
   114     010D                     EEADR           equ	269	;# 
   115     010E                     EEDATH          equ	270	;# 
   116     010F                     EEADRH          equ	271	;# 
   117     018C                     EECON1          equ	396	;# 
   118     018D                     EECON2          equ	397	;# 
   119     0000                     INDF            equ	0	;# 
   120     0001                     TMR0            equ	1	;# 
   121     0002                     PCL             equ	2	;# 
   122     0003                     STATUS          equ	3	;# 
   123     0004                     FSR             equ	4	;# 
   124     0005                     PORTA           equ	5	;# 
   125     0006                     PORTB           equ	6	;# 
   126     0007                     PORTC           equ	7	;# 
   127     0008                     PORTD           equ	8	;# 
   128     0009                     PORTE           equ	9	;# 
   129     000A                     PCLATH          equ	10	;# 
   130     000B                     INTCON          equ	11	;# 
   131     000C                     PIR1            equ	12	;# 
   132     000D                     PIR2            equ	13	;# 
   133     000E                     TMR1            equ	14	;# 
   134     000E                     TMR1L           equ	14	;# 
   135     000F                     TMR1H           equ	15	;# 
   136     0010                     T1CON           equ	16	;# 
   137     0011                     TMR2            equ	17	;# 
   138     0012                     T2CON           equ	18	;# 
   139     0013                     SSPBUF          equ	19	;# 
   140     0014                     SSPCON          equ	20	;# 
   141     0015                     CCPR1           equ	21	;# 
   142     0015                     CCPR1L          equ	21	;# 
   143     0016                     CCPR1H          equ	22	;# 
   144     0017                     CCP1CON         equ	23	;# 
   145     0018                     RCSTA           equ	24	;# 
   146     0019                     TXREG           equ	25	;# 
   147     001A                     RCREG           equ	26	;# 
   148     001B                     CCPR2           equ	27	;# 
   149     001B                     CCPR2L          equ	27	;# 
   150     001C                     CCPR2H          equ	28	;# 
   151     001D                     CCP2CON         equ	29	;# 
   152     001E                     ADRESH          equ	30	;# 
   153     001F                     ADCON0          equ	31	;# 
   154     0081                     OPTION_REG      equ	129	;# 
   155     0085                     TRISA           equ	133	;# 
   156     0086                     TRISB           equ	134	;# 
   157     0087                     TRISC           equ	135	;# 
   158     0088                     TRISD           equ	136	;# 
   159     0089                     TRISE           equ	137	;# 
   160     008C                     PIE1            equ	140	;# 
   161     008D                     PIE2            equ	141	;# 
   162     008E                     PCON            equ	142	;# 
   163     0091                     SSPCON2         equ	145	;# 
   164     0092                     PR2             equ	146	;# 
   165     0093                     SSPADD          equ	147	;# 
   166     0094                     SSPSTAT         equ	148	;# 
   167     0098                     TXSTA           equ	152	;# 
   168     0099                     SPBRG           equ	153	;# 
   169     009C                     CMCON           equ	156	;# 
   170     009D                     CVRCON          equ	157	;# 
   171     009E                     ADRESL          equ	158	;# 
   172     009F                     ADCON1          equ	159	;# 
   173     010C                     EEDATA          equ	268	;# 
   174     010D                     EEADR           equ	269	;# 
   175     010E                     EEDATH          equ	270	;# 
   176     010F                     EEADRH          equ	271	;# 
   177     018C                     EECON1          equ	396	;# 
   178     018D                     EECON2          equ	397	;# 
   179     0000                     INDF            equ	0	;# 
   180     0001                     TMR0            equ	1	;# 
   181     0002                     PCL             equ	2	;# 
   182     0003                     STATUS          equ	3	;# 
   183     0004                     FSR             equ	4	;# 
   184     0005                     PORTA           equ	5	;# 
   185     0006                     PORTB           equ	6	;# 
   186     0007                     PORTC           equ	7	;# 
   187     0008                     PORTD           equ	8	;# 
   188     0009                     PORTE           equ	9	;# 
   189     000A                     PCLATH          equ	10	;# 
   190     000B                     INTCON          equ	11	;# 
   191     000C                     PIR1            equ	12	;# 
   192     000D                     PIR2            equ	13	;# 
   193     000E                     TMR1            equ	14	;# 
   194     000E                     TMR1L           equ	14	;# 
   195     000F                     TMR1H           equ	15	;# 
   196     0010                     T1CON           equ	16	;# 
   197     0011                     TMR2            equ	17	;# 
   198     0012                     T2CON           equ	18	;# 
   199     0013                     SSPBUF          equ	19	;# 
   200     0014                     SSPCON          equ	20	;# 
   201     0015                     CCPR1           equ	21	;# 
   202     0015                     CCPR1L          equ	21	;# 
   203     0016                     CCPR1H          equ	22	;# 
   204     0017                     CCP1CON         equ	23	;# 
   205     0018                     RCSTA           equ	24	;# 
   206     0019                     TXREG           equ	25	;# 
   207     001A                     RCREG           equ	26	;# 
   208     001B                     CCPR2           equ	27	;# 
   209     001B                     CCPR2L          equ	27	;# 
   210     001C                     CCPR2H          equ	28	;# 
   211     001D                     CCP2CON         equ	29	;# 
   212     001E                     ADRESH          equ	30	;# 
   213     001F                     ADCON0          equ	31	;# 
   214     0081                     OPTION_REG      equ	129	;# 
   215     0085                     TRISA           equ	133	;# 
   216     0086                     TRISB           equ	134	;# 
   217     0087                     TRISC           equ	135	;# 
   218     0088                     TRISD           equ	136	;# 
   219     0089                     TRISE           equ	137	;# 
   220     008C                     PIE1            equ	140	;# 
   221     008D                     PIE2            equ	141	;# 
   222     008E                     PCON            equ	142	;# 
   223     0091                     SSPCON2         equ	145	;# 
   224     0092                     PR2             equ	146	;# 
   225     0093                     SSPADD          equ	147	;# 
   226     0094                     SSPSTAT         equ	148	;# 
   227     0098                     TXSTA           equ	152	;# 
   228     0099                     SPBRG           equ	153	;# 
   229     009C                     CMCON           equ	156	;# 
   230     009D                     CVRCON          equ	157	;# 
   231     009E                     ADRESL          equ	158	;# 
   232     009F                     ADCON1          equ	159	;# 
   233     010C                     EEDATA          equ	268	;# 
   234     010D                     EEADR           equ	269	;# 
   235     010E                     EEDATH          equ	270	;# 
   236     010F                     EEADRH          equ	271	;# 
   237     018C                     EECON1          equ	396	;# 
   238     018D                     EECON2          equ	397	;# 
   239     0000                     INDF            equ	0	;# 
   240     0001                     TMR0            equ	1	;# 
   241     0002                     PCL             equ	2	;# 
   242     0003                     STATUS          equ	3	;# 
   243     0004                     FSR             equ	4	;# 
   244     0005                     PORTA           equ	5	;# 
   245     0006                     PORTB           equ	6	;# 
   246     0007                     PORTC           equ	7	;# 
   247     0008                     PORTD           equ	8	;# 
   248     0009                     PORTE           equ	9	;# 
   249     000A                     PCLATH          equ	10	;# 
   250     000B                     INTCON          equ	11	;# 
   251     000C                     PIR1            equ	12	;# 
   252     000D                     PIR2            equ	13	;# 
   253     000E                     TMR1            equ	14	;# 
   254     000E                     TMR1L           equ	14	;# 
   255     000F                     TMR1H           equ	15	;# 
   256     0010                     T1CON           equ	16	;# 
   257     0011                     TMR2            equ	17	;# 
   258     0012                     T2CON           equ	18	;# 
   259     0013                     SSPBUF          equ	19	;# 
   260     0014                     SSPCON          equ	20	;# 
   261     0015                     CCPR1           equ	21	;# 
   262     0015                     CCPR1L          equ	21	;# 
   263     0016                     CCPR1H          equ	22	;# 
   264     0017                     CCP1CON         equ	23	;# 
   265     0018                     RCSTA           equ	24	;# 
   266     0019                     TXREG           equ	25	;# 
   267     001A                     RCREG           equ	26	;# 
   268     001B                     CCPR2           equ	27	;# 
   269     001B                     CCPR2L          equ	27	;# 
   270     001C                     CCPR2H          equ	28	;# 
   271     001D                     CCP2CON         equ	29	;# 
   272     001E                     ADRESH          equ	30	;# 
   273     001F                     ADCON0          equ	31	;# 
   274     0081                     OPTION_REG      equ	129	;# 
   275     0085                     TRISA           equ	133	;# 
   276     0086                     TRISB           equ	134	;# 
   277     0087                     TRISC           equ	135	;# 
   278     0088                     TRISD           equ	136	;# 
   279     0089                     TRISE           equ	137	;# 
   280     008C                     PIE1            equ	140	;# 
   281     008D                     PIE2            equ	141	;# 
   282     008E                     PCON            equ	142	;# 
   283     0091                     SSPCON2         equ	145	;# 
   284     0092                     PR2             equ	146	;# 
   285     0093                     SSPADD          equ	147	;# 
   286     0094                     SSPSTAT         equ	148	;# 
   287     0098                     TXSTA           equ	152	;# 
   288     0099                     SPBRG           equ	153	;# 
   289     009C                     CMCON           equ	156	;# 
   290     009D                     CVRCON          equ	157	;# 
   291     009E                     ADRESL          equ	158	;# 
   292     009F                     ADCON1          equ	159	;# 
   293     010C                     EEDATA          equ	268	;# 
   294     010D                     EEADR           equ	269	;# 
   295     010E                     EEDATH          equ	270	;# 
   296     010F                     EEADRH          equ	271	;# 
   297     018C                     EECON1          equ	396	;# 
   298     018D                     EECON2          equ	397	;# 
   299     000E                     _TMR1           set	14
   300     0008                     _PORTD          set	8
   301     0001                     _TMR0           set	1
   302     0092                     _TMR2ON         set	146
   303     0080                     _TMR1ON         set	128
   304     005D                     _TMR0IE         set	93
   305     005F                     _GIE            set	95
   306     005E                     _PEIE           set	94
   307     0042                     _RD2            set	66
   308     0061                     _TMR2IF         set	97
   309     0041                     _RD1            set	65
   310     0060                     _TMR1IF         set	96
   311     0040                     _RD0            set	64
   312     005A                     _TMR0IF         set	90
   313     0092                     _PR2            set	146
   314     0088                     _TRISD          set	136
   315     0461                     _TMR2IE         set	1121
   316     0460                     _TMR1IE         set	1120
   317     040B                     _PSA            set	1035
   318     040D                     _T0CS           set	1037
   319                           
   320                           	psect	cinit
   321     000F                     start_initialization:	
   322                           ; #config settings
   323                           
   324     000F                     __initialization:
   325                           
   326                           ; Clear objects allocated to COMMON
   327     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   328     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   329     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   330     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   331     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   332     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   333     0015                     end_of_initialization:	
   334                           ;End of C runtime variable initialization code
   335                           
   336     0015                     __end_of__initialization:
   337     0015  0183               	clrf	3
   338     0016  120A  118A  28B6   	ljmp	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMMON
   341     0070                     __pbssCOMMON:
   342     0070                     isr@count3:
   343     0070                     	ds	2
   344     0072                     isr@count2:
   345     0072                     	ds	2
   346     0074                     isr@count1:
   347     0074                     	ds	2
   348                           
   349                           	psect	cstackCOMMON
   350     0076                     __pcstackCOMMON:
   351     0076                     ?_init_timer0:
   352     0076                     ?_init_timer1:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0076                     ?_init_timer2:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0076                     ?_isr:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0076                     ?_init_config:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0076                     ?_main:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0076                     ??_isr:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372     0076                     	ds	4
   373     007A                     ??_init_timer0:
   374     007A                     ??_init_timer1:	
   375                           ; 1 bytes @ 0x4
   376                           
   377     007A                     ??_init_timer2:	
   378                           ; 1 bytes @ 0x4
   379                           
   380     007A                     ??_init_config:	
   381                           ; 1 bytes @ 0x4
   382                           
   383     007A                     ??_main:	
   384                           ; 1 bytes @ 0x4
   385                           
   386                           
   387                           	psect	maintext
   388     00B6                     __pmaintext:	
   389                           ; 1 bytes @ 0x4
   390 ;;
   391 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   392 ;;
   393 ;; *************** function _main *****************
   394 ;; Defined at:
   395 ;;		line 34 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		status,2, status,0, pclath, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : B00/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels required when called: 3
   415 ;; This function calls:
   416 ;;		_init_config
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422     00B6                     _main:	
   423                           ;psect for function _main
   424                           
   425     00B6                     l685:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   428                           
   429     00B6  120A  118A  2079  120A  118A  	fcall	_init_config
   430     00BB                     l55:
   431     00BB                     l56:
   432     00BB  28BB               	goto	l55
   433     00BC  120A  118A  280C   	ljmp	start
   434     00BF                     __end_of_main:
   435                           
   436                           	psect	text1
   437     0079                     __ptext1:	
   438 ;; *************** function _init_config *****************
   439 ;; Defined at:
   440 ;;		line 14 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 2
   461 ;; This function calls:
   462 ;;		_init_timer0
   463 ;;		_init_timer1
   464 ;;		_init_timer2
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470     0079                     _init_config:	
   471                           ;psect for function _init_config
   472                           
   473     0079                     l643:	
   474                           ;incstack = 0
   475                           ; Regs used in _init_config: [status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;main.c: 16: 
   479     0079  170B               	bsf	11,6	;volatile
   480     007A                     l645:
   481                           
   482                           ;main.c: 18: }
   483     007A  1283               	bcf	3,5	;RP0=0, select bank0
   484     007B  1303               	bcf	3,6	;RP1=0, select bank0
   485     007C  0188               	clrf	8	;volatile
   486                           
   487                           ;main.c: 21:     init_config();
   488     007D  1683               	bsf	3,5	;RP0=1, select bank1
   489     007E  1303               	bcf	3,6	;RP1=0, select bank1
   490     007F  0188               	clrf	8	;volatile
   491     0080                     l647:
   492     0080  120A  118A  20AB  120A  118A  	fcall	_init_timer0
   493     0085                     l649:
   494     0085  120A  118A  209F  120A  118A  	fcall	_init_timer1
   495     008A                     l651:
   496     008A  120A  118A  2091  120A  118A  	fcall	_init_timer2
   497     008F                     l653:
   498     008F  178B               	bsf	11,7	;volatile
   499     0090                     l50:
   500     0090  0008               	return
   501     0091                     __end_of_init_config:
   502                           
   503                           	psect	text2
   504     0091                     __ptext2:	
   505 ;; *************** function _init_timer2 *****************
   506 ;; Defined at:
   507 ;;		line 43 in file "timer.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		None
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0
   524 ;;      Totals:         0       0       0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 1
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_init_config
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535     0091                     _init_timer2:	
   536                           ;psect for function _init_timer2
   537                           
   538     0091                     l641:	
   539                           ;incstack = 0
   540                           ; Regs used in _init_timer2: []
   541                           
   542                           
   543                           ;timer.c: 46:  TMR2ON = 1;
   544     0091  1283               	bcf	3,5	;RP0=0, select bank0
   545     0092  1303               	bcf	3,6	;RP1=0, select bank0
   546     0093  1512               	bsf	18,2	;volatile
   547                           
   548                           ;timer.c: 48:  PR2 = 249;
   549     0094  30F9               	movlw	249
   550     0095  1683               	bsf	3,5	;RP0=1, select bank1
   551     0096  1303               	bcf	3,6	;RP1=0, select bank1
   552     0097  0092               	movwf	18	;volatile
   553                           
   554                           ;timer.c: 51:  TMR2IF = 0;
   555     0098  1283               	bcf	3,5	;RP0=0, select bank0
   556     0099  1303               	bcf	3,6	;RP1=0, select bank0
   557     009A  108C               	bcf	12,1	;volatile
   558                           
   559                           ;timer.c: 54:  TMR2IE = 1;
   560     009B  1683               	bsf	3,5	;RP0=1, select bank1
   561     009C  1303               	bcf	3,6	;RP1=0, select bank1
   562     009D  148C               	bsf	12,1	;volatile
   563     009E                     l93:
   564     009E  0008               	return
   565     009F                     __end_of_init_timer2:
   566                           
   567                           	psect	text3
   568     009F                     __ptext3:	
   569 ;; *************** function _init_timer1 *****************
   570 ;; Defined at:
   571 ;;		line 30 in file "timer.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		None
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_init_config
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599     009F                     _init_timer1:	
   600                           ;psect for function _init_timer1
   601                           
   602     009F                     l639:	
   603                           ;incstack = 0
   604                           ; Regs used in _init_timer1: []
   605                           
   606                           
   607                           ;timer.c: 33:  TMR1ON = 1;
   608     009F  1283               	bcf	3,5	;RP0=0, select bank0
   609     00A0  1303               	bcf	3,6	;RP1=0, select bank0
   610     00A1  1410               	bsf	16,0	;volatile
   611                           
   612                           ;timer.c: 35:  TMR1 = 3036;
   613     00A2  300B               	movlw	11
   614     00A3  008F               	movwf	15	;volatile
   615     00A4  30DC               	movlw	220
   616     00A5  008E               	movwf	14	;volatile
   617                           
   618                           ;timer.c: 38:  TMR1IF = 0;
   619     00A6  100C               	bcf	12,0	;volatile
   620                           
   621                           ;timer.c: 41:  TMR1IE = 1;
   622     00A7  1683               	bsf	3,5	;RP0=1, select bank1
   623     00A8  1303               	bcf	3,6	;RP1=0, select bank1
   624     00A9  140C               	bsf	12,0	;volatile
   625     00AA                     l90:
   626     00AA  0008               	return
   627     00AB                     __end_of_init_timer1:
   628                           
   629                           	psect	text4
   630     00AB                     __ptext4:	
   631 ;; *************** function _init_timer0 *****************
   632 ;; Defined at:
   633 ;;		line 10 in file "timer.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		None
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_init_config
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661     00AB                     _init_timer0:	
   662                           ;psect for function _init_timer0
   663                           
   664     00AB                     l637:	
   665                           ;incstack = 0
   666                           ; Regs used in _init_timer0: []
   667                           
   668                           
   669                           ;timer.c: 17:  T0CS = 0;
   670     00AB  1683               	bsf	3,5	;RP0=1, select bank1
   671     00AC  1303               	bcf	3,6	;RP1=0, select bank1
   672     00AD  1281               	bcf	1,5	;volatile
   673                           
   674                           ;timer.c: 20:  PSA = 1;
   675     00AE  1581               	bsf	1,3	;volatile
   676                           
   677                           ;timer.c: 22:  TMR0 = 6;
   678     00AF  3006               	movlw	6
   679     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   680     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   681     00B2  0081               	movwf	1	;volatile
   682                           
   683                           ;timer.c: 25:  TMR0IF = 0;
   684     00B3  110B               	bcf	11,2	;volatile
   685                           
   686                           ;timer.c: 28:  TMR0IE = 1;
   687     00B4  168B               	bsf	11,5	;volatile
   688     00B5                     l87:
   689     00B5  0008               	return
   690     00B6                     __end_of_init_timer0:
   691                           
   692                           	psect	text5
   693     0019                     __ptext5:	
   694 ;; *************** function _isr *****************
   695 ;; Defined at:
   696 ;;		line 13 in file "isr.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          4       0       0       0       0
   713 ;;      Totals:         4       0       0       0       0
   714 ;;Total ram usage:        4 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		Interrupt level 1
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723     0019                     _isr:	
   724                           ;psect for function _isr
   725                           
   726     0019                     i1l655:
   727                           
   728                           ;isr.c: 15:  static unsigned short count1,count2,count3;;isr.c: 17:  if (TMR0IF)
   729     0019  1D0B               	btfss	11,2	;volatile
   730     001A  281C               	goto	u1_21
   731     001B  281D               	goto	u1_20
   732     001C                     u1_21:
   733     001C  2836               	goto	i1l665
   734     001D                     u1_20:
   735     001D                     i1l657:
   736                           
   737                           ;isr.c: 18:  {;isr.c: 19:   TMR0 = TMR0 + 8;
   738     001D  1283               	bcf	3,5	;RP0=0, select bank0
   739     001E  1303               	bcf	3,6	;RP1=0, select bank0
   740     001F  0801               	movf	1,w	;volatile
   741     0020  3E08               	addlw	8
   742     0021  0081               	movwf	1	;volatile
   743                           
   744                           ;isr.c: 21:   if (count1++ == 20000)
   745     0022  3001               	movlw	1
   746     0023  07F4               	addwf	isr@count1,f
   747     0024  1803               	skipnc
   748     0025  0AF5               	incf	isr@count1+1,f
   749     0026  3000               	movlw	0
   750     0027  07F5               	addwf	isr@count1+1,f
   751     0028  3021               	movlw	33
   752     0029  0674               	xorwf	isr@count1,w
   753     002A  304E               	movlw	78
   754     002B  1903               	skipnz
   755     002C  0675               	xorwf	isr@count1+1,w
   756     002D  1D03               	btfss	3,2
   757     002E  2830               	goto	u2_21
   758     002F  2831               	goto	u2_20
   759     0030                     u2_21:
   760     0030  2835               	goto	i1l663
   761     0031                     u2_20:
   762     0031                     i1l659:
   763                           
   764                           ;isr.c: 22:   {;isr.c: 23:    count1 = 0;
   765     0031  01F4               	clrf	isr@count1
   766     0032  01F5               	clrf	isr@count1+1
   767     0033                     i1l661:
   768                           
   769                           ;isr.c: 24:    RD0 = !RD0;
   770     0033  3001               	movlw	1
   771     0034  0688               	xorwf	8,f
   772     0035                     i1l663:
   773                           
   774                           ;isr.c: 26:   TMR0IF = 0;
   775     0035  110B               	bcf	11,2	;volatile
   776     0036                     i1l665:
   777                           
   778                           ;isr.c: 28:  if (TMR1IF)
   779     0036  1283               	bcf	3,5	;RP0=0, select bank0
   780     0037  1303               	bcf	3,6	;RP1=0, select bank0
   781     0038  1C0C               	btfss	12,0	;volatile
   782     0039  283B               	goto	u3_21
   783     003A  283C               	goto	u3_20
   784     003B                     u3_21:
   785     003B  285A               	goto	i1l675
   786     003C                     u3_20:
   787     003C                     i1l667:
   788                           
   789                           ;isr.c: 29:  {;isr.c: 30:   TMR1 = TMR1 + 3038;
   790     003C  080E               	movf	14,w	;volatile
   791     003D  3EDE               	addlw	222
   792     003E  00F6               	movwf	??_isr
   793     003F  080F               	movf	15,w	;volatile
   794     0040  1803               	skipnc
   795     0041  3E01               	addlw	1
   796     0042  3E0B               	addlw	11
   797     0043  00F7               	movwf	??_isr+1
   798     0044  0876               	movf	??_isr,w
   799     0045  008E               	movwf	14	;volatile
   800     0046  0877               	movf	??_isr+1,w
   801     0047  008F               	movwf	15	;volatile
   802                           
   803                           ;isr.c: 32:   if (count2++ == 80)
   804     0048  3001               	movlw	1
   805     0049  07F2               	addwf	isr@count2,f
   806     004A  1803               	skipnc
   807     004B  0AF3               	incf	isr@count2+1,f
   808     004C  3000               	movlw	0
   809     004D  07F3               	addwf	isr@count2+1,f
   810     004E  3051               	movlw	81
   811     004F  0672               	xorwf	isr@count2,w
   812     0050  0473               	iorwf	isr@count2+1,w
   813     0051  1D03               	btfss	3,2
   814     0052  2854               	goto	u4_21
   815     0053  2855               	goto	u4_20
   816     0054                     u4_21:
   817     0054  2859               	goto	i1l673
   818     0055                     u4_20:
   819     0055                     i1l669:
   820                           
   821                           ;isr.c: 33:   {;isr.c: 34:    count2 = 0;
   822     0055  01F2               	clrf	isr@count2
   823     0056  01F3               	clrf	isr@count2+1
   824     0057                     i1l671:
   825                           
   826                           ;isr.c: 35:    RD1 = !RD1;
   827     0057  3002               	movlw	2
   828     0058  0688               	xorwf	8,f
   829     0059                     i1l673:
   830                           
   831                           ;isr.c: 37:   TMR1IF = 0;
   832     0059  100C               	bcf	12,0	;volatile
   833     005A                     i1l675:
   834                           
   835                           ;isr.c: 39:     if (TMR2IF)
   836     005A  1C8C               	btfss	12,1	;volatile
   837     005B  285D               	goto	u5_21
   838     005C  285E               	goto	u5_20
   839     005D                     u5_21:
   840     005D  2872               	goto	i1l33
   841     005E                     u5_20:
   842     005E                     i1l677:
   843                           
   844                           ;isr.c: 40:  {;isr.c: 43:   if (count3++ == 20000)
   845     005E  3001               	movlw	1
   846     005F  07F0               	addwf	isr@count3,f
   847     0060  1803               	skipnc
   848     0061  0AF1               	incf	isr@count3+1,f
   849     0062  3000               	movlw	0
   850     0063  07F1               	addwf	isr@count3+1,f
   851     0064  3021               	movlw	33
   852     0065  0670               	xorwf	isr@count3,w
   853     0066  304E               	movlw	78
   854     0067  1903               	skipnz
   855     0068  0671               	xorwf	isr@count3+1,w
   856     0069  1D03               	btfss	3,2
   857     006A  286C               	goto	u6_21
   858     006B  286D               	goto	u6_20
   859     006C                     u6_21:
   860     006C  2871               	goto	i1l683
   861     006D                     u6_20:
   862     006D                     i1l679:
   863                           
   864                           ;isr.c: 44:   {;isr.c: 45:    count3 = 0;
   865     006D  01F0               	clrf	isr@count3
   866     006E  01F1               	clrf	isr@count3+1
   867     006F                     i1l681:
   868                           
   869                           ;isr.c: 46:    RD2 = !RD2;
   870     006F  3004               	movlw	4
   871     0070  0688               	xorwf	8,f
   872     0071                     i1l683:
   873                           
   874                           ;isr.c: 48:   TMR2IF = 0;
   875     0071  108C               	bcf	12,1	;volatile
   876     0072                     i1l33:
   877     0072  0879               	movf	??_isr+3,w
   878     0073  008A               	movwf	10
   879     0074  0E78               	swapf	??_isr+2,w
   880     0075  0083               	movwf	3
   881     0076  0EFE               	swapf	btemp,f
   882     0077  0E7E               	swapf	btemp,w
   883     0078  0009               	retfie
   884     0079                     __end_of_isr:
   885     0002                     ___latbits      equ	2
   886     007E                     btemp           set	126	;btemp
   887     007E                     wtemp0          set	126
   888                           
   889                           	psect	intentry
   890     0004                     __pintentry:	
   891                           ;incstack = 0
   892                           ; Regs used in _isr: [wreg+status,2+status,0]
   893                           
   894     0004                     interrupt_function:
   895     007E                     saved_w         set	btemp
   896     0004  00FE               	movwf	btemp
   897     0005  0E03               	swapf	3,w
   898     0006  00F8               	movwf	??_isr+2
   899     0007  080A               	movf	10,w
   900     0008  00F9               	movwf	??_isr+3
   901     0009  120A  118A  2819   	ljmp	_isr
   902                           
   903                           	psect	config
   904                           
   905                           ;Config register CONFIG @ 0x2007
   906                           ;	Oscillator Selection bits
   907                           ;	FOSC = 0x3, unprogrammed default
   908                           ;	Watchdog Timer Enable bit
   909                           ;	WDTE = OFF, WDT disabled
   910                           ;	Power-up Timer Enable bit
   911                           ;	PWRTE = 0x1, unprogrammed default
   912                           ;	Brown-out Reset Enable bit
   913                           ;	BOREN = 0x1, unprogrammed default
   914                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   915                           ;	LVP = 0x1, unprogrammed default
   916                           ;	Data EEPROM Memory Code Protection bit
   917                           ;	CPD = 0x1, unprogrammed default
   918                           ;	Flash Program Memory Write Enable bits
   919                           ;	WRT = 0x3, unprogrammed default
   920                           ;	In-Circuit Debugger Mode bit
   921                           ;	DEBUG = 0x1, unprogrammed default
   922                           ;	Flash Program Memory Code Protection bit
   923                           ;	CP = 0x1, unprogrammed default
   924     2007                     	org	8199
   925     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                        _init_timer0
                        _init_timer1
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_timer0
     _init_timer1
     _init_timer2

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4      10     71.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      10      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Dec 07 19:22:31 2024

                     l50 0090                       l55 00BB                       l56 00BB  
                     l90 00AA                       l93 009E                       l87 00B5  
                    l641 0091                      l651 008A                      l643 0079  
                    l637 00AB                      l653 008F                      l645 007A  
                    l639 009F                      l647 0080                      l649 0085  
                    l685 00B6                      _GIE 005F                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _PR2 0092  
                    _PSA 040B                      _isr 0019                     ?_isr 0076  
                   _T0CS 040D                     _PEIE 005E                     i1l33 0072  
                   _TMR0 0001                     _TMR1 000E                     u1_20 001D  
                   u1_21 001C                     u2_20 0031                     u2_21 0030  
                   u3_20 003C                     u3_21 003B                     u4_20 0055  
                   u4_21 0054                     u5_20 005E                     u5_21 005D  
                   u6_20 006D                     u6_21 006C                     _main 00B6  
                   btemp 007E                     start 000C                    ??_isr 0076  
                  ?_main 0076             ?_init_config 0076                    i1l661 0033  
                  i1l671 0057                    i1l663 0035                    i1l655 0019  
                  i1l681 006F                    i1l673 0059                    i1l657 001D  
                  i1l665 0036                    i1l683 0071                    i1l667 003C  
                  i1l675 005A                    i1l659 0031                    i1l677 005E  
                  i1l669 0055                    i1l679 006D                    _PORTD 0008  
                  _TRISD 0088             ?_init_timer0 0076             ?_init_timer1 0076  
           ?_init_timer2 0076                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00BF  
                 ??_main 007A                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR2IE 0461  
                 _TMR2IF 0061                   _TMR1ON 0080                   _TMR2ON 0092  
                 saved_w 007E  __end_of__initialization 0015           __pcstackCOMMON 0076  
             __pmaintext 00B6               __pintentry 0004                  __ptext1 0079  
                __ptext2 0091                  __ptext3 009F                  __ptext4 00AB  
                __ptext5 0019     end_of_initialization 0015      start_initialization 000F  
            __end_of_isr 0079            ??_init_config 007A            ??_init_timer0 007A  
          ??_init_timer1 007A            ??_init_timer2 007A              __pbssCOMMON 0070  
              ___latbits 0002      __end_of_init_config 0091      __end_of_init_timer0 00B6  
    __end_of_init_timer1 00AB      __end_of_init_timer2 009F        interrupt_function 0004  
              isr@count1 0074                isr@count2 0072                isr@count3 0070  
            _init_config 0079              _init_timer0 00AB              _init_timer1 009F  
            _init_timer2 0091                 intlevel1 0000  
