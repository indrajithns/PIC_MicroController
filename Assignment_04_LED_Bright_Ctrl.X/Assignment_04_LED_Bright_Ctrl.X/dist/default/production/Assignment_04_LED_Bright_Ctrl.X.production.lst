

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 08 19:30:10 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,space=0,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0004                     fsr             equ	4
    56     0004                     fsr0            equ	4
    57     0000                     indf            equ	0
    58     0000                     indf0           equ	0
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0000                     INDF            equ	0	;# 
    64     0001                     TMR0            equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR             equ	4	;# 
    68     0005                     PORTA           equ	5	;# 
    69     0006                     PORTB           equ	6	;# 
    70     0007                     PORTC           equ	7	;# 
    71     0008                     PORTD           equ	8	;# 
    72     0009                     PORTE           equ	9	;# 
    73     000A                     PCLATH          equ	10	;# 
    74     000B                     INTCON          equ	11	;# 
    75     000C                     PIR1            equ	12	;# 
    76     000D                     PIR2            equ	13	;# 
    77     000E                     TMR1            equ	14	;# 
    78     000E                     TMR1L           equ	14	;# 
    79     000F                     TMR1H           equ	15	;# 
    80     0010                     T1CON           equ	16	;# 
    81     0011                     TMR2            equ	17	;# 
    82     0012                     T2CON           equ	18	;# 
    83     0013                     SSPBUF          equ	19	;# 
    84     0014                     SSPCON          equ	20	;# 
    85     0015                     CCPR1           equ	21	;# 
    86     0015                     CCPR1L          equ	21	;# 
    87     0016                     CCPR1H          equ	22	;# 
    88     0017                     CCP1CON         equ	23	;# 
    89     0018                     RCSTA           equ	24	;# 
    90     0019                     TXREG           equ	25	;# 
    91     001A                     RCREG           equ	26	;# 
    92     001B                     CCPR2           equ	27	;# 
    93     001B                     CCPR2L          equ	27	;# 
    94     001C                     CCPR2H          equ	28	;# 
    95     001D                     CCP2CON         equ	29	;# 
    96     001E                     ADRESH          equ	30	;# 
    97     001F                     ADCON0          equ	31	;# 
    98     0081                     OPTION_REG      equ	129	;# 
    99     0085                     TRISA           equ	133	;# 
   100     0086                     TRISB           equ	134	;# 
   101     0087                     TRISC           equ	135	;# 
   102     0088                     TRISD           equ	136	;# 
   103     0089                     TRISE           equ	137	;# 
   104     008C                     PIE1            equ	140	;# 
   105     008D                     PIE2            equ	141	;# 
   106     008E                     PCON            equ	142	;# 
   107     0091                     SSPCON2         equ	145	;# 
   108     0092                     PR2             equ	146	;# 
   109     0093                     SSPADD          equ	147	;# 
   110     0094                     SSPSTAT         equ	148	;# 
   111     0098                     TXSTA           equ	152	;# 
   112     0099                     SPBRG           equ	153	;# 
   113     009C                     CMCON           equ	156	;# 
   114     009D                     CVRCON          equ	157	;# 
   115     009E                     ADRESL          equ	158	;# 
   116     009F                     ADCON1          equ	159	;# 
   117     010C                     EEDATA          equ	268	;# 
   118     010D                     EEADR           equ	269	;# 
   119     010E                     EEDATH          equ	270	;# 
   120     010F                     EEADRH          equ	271	;# 
   121     018C                     EECON1          equ	396	;# 
   122     018D                     EECON2          equ	397	;# 
   123     0000                     INDF            equ	0	;# 
   124     0001                     TMR0            equ	1	;# 
   125     0002                     PCL             equ	2	;# 
   126     0003                     STATUS          equ	3	;# 
   127     0004                     FSR             equ	4	;# 
   128     0005                     PORTA           equ	5	;# 
   129     0006                     PORTB           equ	6	;# 
   130     0007                     PORTC           equ	7	;# 
   131     0008                     PORTD           equ	8	;# 
   132     0009                     PORTE           equ	9	;# 
   133     000A                     PCLATH          equ	10	;# 
   134     000B                     INTCON          equ	11	;# 
   135     000C                     PIR1            equ	12	;# 
   136     000D                     PIR2            equ	13	;# 
   137     000E                     TMR1            equ	14	;# 
   138     000E                     TMR1L           equ	14	;# 
   139     000F                     TMR1H           equ	15	;# 
   140     0010                     T1CON           equ	16	;# 
   141     0011                     TMR2            equ	17	;# 
   142     0012                     T2CON           equ	18	;# 
   143     0013                     SSPBUF          equ	19	;# 
   144     0014                     SSPCON          equ	20	;# 
   145     0015                     CCPR1           equ	21	;# 
   146     0015                     CCPR1L          equ	21	;# 
   147     0016                     CCPR1H          equ	22	;# 
   148     0017                     CCP1CON         equ	23	;# 
   149     0018                     RCSTA           equ	24	;# 
   150     0019                     TXREG           equ	25	;# 
   151     001A                     RCREG           equ	26	;# 
   152     001B                     CCPR2           equ	27	;# 
   153     001B                     CCPR2L          equ	27	;# 
   154     001C                     CCPR2H          equ	28	;# 
   155     001D                     CCP2CON         equ	29	;# 
   156     001E                     ADRESH          equ	30	;# 
   157     001F                     ADCON0          equ	31	;# 
   158     0081                     OPTION_REG      equ	129	;# 
   159     0085                     TRISA           equ	133	;# 
   160     0086                     TRISB           equ	134	;# 
   161     0087                     TRISC           equ	135	;# 
   162     0088                     TRISD           equ	136	;# 
   163     0089                     TRISE           equ	137	;# 
   164     008C                     PIE1            equ	140	;# 
   165     008D                     PIE2            equ	141	;# 
   166     008E                     PCON            equ	142	;# 
   167     0091                     SSPCON2         equ	145	;# 
   168     0092                     PR2             equ	146	;# 
   169     0093                     SSPADD          equ	147	;# 
   170     0094                     SSPSTAT         equ	148	;# 
   171     0098                     TXSTA           equ	152	;# 
   172     0099                     SPBRG           equ	153	;# 
   173     009C                     CMCON           equ	156	;# 
   174     009D                     CVRCON          equ	157	;# 
   175     009E                     ADRESL          equ	158	;# 
   176     009F                     ADCON1          equ	159	;# 
   177     010C                     EEDATA          equ	268	;# 
   178     010D                     EEADR           equ	269	;# 
   179     010E                     EEDATH          equ	270	;# 
   180     010F                     EEADRH          equ	271	;# 
   181     018C                     EECON1          equ	396	;# 
   182     018D                     EECON2          equ	397	;# 
   183     0000                     INDF            equ	0	;# 
   184     0001                     TMR0            equ	1	;# 
   185     0002                     PCL             equ	2	;# 
   186     0003                     STATUS          equ	3	;# 
   187     0004                     FSR             equ	4	;# 
   188     0005                     PORTA           equ	5	;# 
   189     0006                     PORTB           equ	6	;# 
   190     0007                     PORTC           equ	7	;# 
   191     0008                     PORTD           equ	8	;# 
   192     0009                     PORTE           equ	9	;# 
   193     000A                     PCLATH          equ	10	;# 
   194     000B                     INTCON          equ	11	;# 
   195     000C                     PIR1            equ	12	;# 
   196     000D                     PIR2            equ	13	;# 
   197     000E                     TMR1            equ	14	;# 
   198     000E                     TMR1L           equ	14	;# 
   199     000F                     TMR1H           equ	15	;# 
   200     0010                     T1CON           equ	16	;# 
   201     0011                     TMR2            equ	17	;# 
   202     0012                     T2CON           equ	18	;# 
   203     0013                     SSPBUF          equ	19	;# 
   204     0014                     SSPCON          equ	20	;# 
   205     0015                     CCPR1           equ	21	;# 
   206     0015                     CCPR1L          equ	21	;# 
   207     0016                     CCPR1H          equ	22	;# 
   208     0017                     CCP1CON         equ	23	;# 
   209     0018                     RCSTA           equ	24	;# 
   210     0019                     TXREG           equ	25	;# 
   211     001A                     RCREG           equ	26	;# 
   212     001B                     CCPR2           equ	27	;# 
   213     001B                     CCPR2L          equ	27	;# 
   214     001C                     CCPR2H          equ	28	;# 
   215     001D                     CCP2CON         equ	29	;# 
   216     001E                     ADRESH          equ	30	;# 
   217     001F                     ADCON0          equ	31	;# 
   218     0081                     OPTION_REG      equ	129	;# 
   219     0085                     TRISA           equ	133	;# 
   220     0086                     TRISB           equ	134	;# 
   221     0087                     TRISC           equ	135	;# 
   222     0088                     TRISD           equ	136	;# 
   223     0089                     TRISE           equ	137	;# 
   224     008C                     PIE1            equ	140	;# 
   225     008D                     PIE2            equ	141	;# 
   226     008E                     PCON            equ	142	;# 
   227     0091                     SSPCON2         equ	145	;# 
   228     0092                     PR2             equ	146	;# 
   229     0093                     SSPADD          equ	147	;# 
   230     0094                     SSPSTAT         equ	148	;# 
   231     0098                     TXSTA           equ	152	;# 
   232     0099                     SPBRG           equ	153	;# 
   233     009C                     CMCON           equ	156	;# 
   234     009D                     CVRCON          equ	157	;# 
   235     009E                     ADRESL          equ	158	;# 
   236     009F                     ADCON1          equ	159	;# 
   237     010C                     EEDATA          equ	268	;# 
   238     010D                     EEADR           equ	269	;# 
   239     010E                     EEDATH          equ	270	;# 
   240     010F                     EEADRH          equ	271	;# 
   241     018C                     EECON1          equ	396	;# 
   242     018D                     EECON2          equ	397	;# 
   243     0000                     INDF            equ	0	;# 
   244     0001                     TMR0            equ	1	;# 
   245     0002                     PCL             equ	2	;# 
   246     0003                     STATUS          equ	3	;# 
   247     0004                     FSR             equ	4	;# 
   248     0005                     PORTA           equ	5	;# 
   249     0006                     PORTB           equ	6	;# 
   250     0007                     PORTC           equ	7	;# 
   251     0008                     PORTD           equ	8	;# 
   252     0009                     PORTE           equ	9	;# 
   253     000A                     PCLATH          equ	10	;# 
   254     000B                     INTCON          equ	11	;# 
   255     000C                     PIR1            equ	12	;# 
   256     000D                     PIR2            equ	13	;# 
   257     000E                     TMR1            equ	14	;# 
   258     000E                     TMR1L           equ	14	;# 
   259     000F                     TMR1H           equ	15	;# 
   260     0010                     T1CON           equ	16	;# 
   261     0011                     TMR2            equ	17	;# 
   262     0012                     T2CON           equ	18	;# 
   263     0013                     SSPBUF          equ	19	;# 
   264     0014                     SSPCON          equ	20	;# 
   265     0015                     CCPR1           equ	21	;# 
   266     0015                     CCPR1L          equ	21	;# 
   267     0016                     CCPR1H          equ	22	;# 
   268     0017                     CCP1CON         equ	23	;# 
   269     0018                     RCSTA           equ	24	;# 
   270     0019                     TXREG           equ	25	;# 
   271     001A                     RCREG           equ	26	;# 
   272     001B                     CCPR2           equ	27	;# 
   273     001B                     CCPR2L          equ	27	;# 
   274     001C                     CCPR2H          equ	28	;# 
   275     001D                     CCP2CON         equ	29	;# 
   276     001E                     ADRESH          equ	30	;# 
   277     001F                     ADCON0          equ	31	;# 
   278     0081                     OPTION_REG      equ	129	;# 
   279     0085                     TRISA           equ	133	;# 
   280     0086                     TRISB           equ	134	;# 
   281     0087                     TRISC           equ	135	;# 
   282     0088                     TRISD           equ	136	;# 
   283     0089                     TRISE           equ	137	;# 
   284     008C                     PIE1            equ	140	;# 
   285     008D                     PIE2            equ	141	;# 
   286     008E                     PCON            equ	142	;# 
   287     0091                     SSPCON2         equ	145	;# 
   288     0092                     PR2             equ	146	;# 
   289     0093                     SSPADD          equ	147	;# 
   290     0094                     SSPSTAT         equ	148	;# 
   291     0098                     TXSTA           equ	152	;# 
   292     0099                     SPBRG           equ	153	;# 
   293     009C                     CMCON           equ	156	;# 
   294     009D                     CVRCON          equ	157	;# 
   295     009E                     ADRESL          equ	158	;# 
   296     009F                     ADCON1          equ	159	;# 
   297     010C                     EEDATA          equ	268	;# 
   298     010D                     EEADR           equ	269	;# 
   299     010E                     EEDATH          equ	270	;# 
   300     010F                     EEADRH          equ	271	;# 
   301     018C                     EECON1          equ	396	;# 
   302     018D                     EECON2          equ	397	;# 
   303     0000                     INDF            equ	0	;# 
   304     0001                     TMR0            equ	1	;# 
   305     0002                     PCL             equ	2	;# 
   306     0003                     STATUS          equ	3	;# 
   307     0004                     FSR             equ	4	;# 
   308     0005                     PORTA           equ	5	;# 
   309     0006                     PORTB           equ	6	;# 
   310     0007                     PORTC           equ	7	;# 
   311     0008                     PORTD           equ	8	;# 
   312     0009                     PORTE           equ	9	;# 
   313     000A                     PCLATH          equ	10	;# 
   314     000B                     INTCON          equ	11	;# 
   315     000C                     PIR1            equ	12	;# 
   316     000D                     PIR2            equ	13	;# 
   317     000E                     TMR1            equ	14	;# 
   318     000E                     TMR1L           equ	14	;# 
   319     000F                     TMR1H           equ	15	;# 
   320     0010                     T1CON           equ	16	;# 
   321     0011                     TMR2            equ	17	;# 
   322     0012                     T2CON           equ	18	;# 
   323     0013                     SSPBUF          equ	19	;# 
   324     0014                     SSPCON          equ	20	;# 
   325     0015                     CCPR1           equ	21	;# 
   326     0015                     CCPR1L          equ	21	;# 
   327     0016                     CCPR1H          equ	22	;# 
   328     0017                     CCP1CON         equ	23	;# 
   329     0018                     RCSTA           equ	24	;# 
   330     0019                     TXREG           equ	25	;# 
   331     001A                     RCREG           equ	26	;# 
   332     001B                     CCPR2           equ	27	;# 
   333     001B                     CCPR2L          equ	27	;# 
   334     001C                     CCPR2H          equ	28	;# 
   335     001D                     CCP2CON         equ	29	;# 
   336     001E                     ADRESH          equ	30	;# 
   337     001F                     ADCON0          equ	31	;# 
   338     0081                     OPTION_REG      equ	129	;# 
   339     0085                     TRISA           equ	133	;# 
   340     0086                     TRISB           equ	134	;# 
   341     0087                     TRISC           equ	135	;# 
   342     0088                     TRISD           equ	136	;# 
   343     0089                     TRISE           equ	137	;# 
   344     008C                     PIE1            equ	140	;# 
   345     008D                     PIE2            equ	141	;# 
   346     008E                     PCON            equ	142	;# 
   347     0091                     SSPCON2         equ	145	;# 
   348     0092                     PR2             equ	146	;# 
   349     0093                     SSPADD          equ	147	;# 
   350     0094                     SSPSTAT         equ	148	;# 
   351     0098                     TXSTA           equ	152	;# 
   352     0099                     SPBRG           equ	153	;# 
   353     009C                     CMCON           equ	156	;# 
   354     009D                     CVRCON          equ	157	;# 
   355     009E                     ADRESL          equ	158	;# 
   356     009F                     ADCON1          equ	159	;# 
   357     010C                     EEDATA          equ	268	;# 
   358     010D                     EEADR           equ	269	;# 
   359     010E                     EEDATH          equ	270	;# 
   360     010F                     EEADRH          equ	271	;# 
   361     018C                     EECON1          equ	396	;# 
   362     018D                     EECON2          equ	397	;# 
   363                           
   364                           	psect	idataCOMMON
   365     015E                     __pidataCOMMON:
   366                           
   367                           ;initializer for _PERIOD
   368     015E  3464               	retlw	100
   369     015F  3400               	retlw	0
   370                           
   371                           ;initializer for _duty_cycle
   372     0160  3432               	retlw	50
   373     0161  3400               	retlw	0
   374                           
   375                           ;initializer for read_digital_keypad@once
   376     0162  3401               	retlw	1
   377     0008                     _PORTD          set	8
   378     0011                     _TMR2           set	17
   379     0006                     _PORTB          set	6
   380     0092                     _TMR2ON         set	146
   381     005E                     _PEIE           set	94
   382     005F                     _GIE            set	95
   383     0061                     _TMR2IF         set	97
   384     0040                     _RD0            set	64
   385     0092                     _PR2            set	146
   386     0088                     _TRISD          set	136
   387     0086                     _TRISB          set	134
   388     0461                     _TMR2IE         set	1121
   389                           
   390                           	psect	cinit
   391     000F                     start_initialization:	
   392                           ; #config settings
   393                           
   394     000F                     __initialization:
   395                           
   396                           ; Initialize objects allocated to COMMON
   397     000F  120A  118A  215E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   398     0014  00F0               	movwf	__pdataCOMMON& (0+127)
   399     0015  120A  118A  215F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   400     001A  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   401     001B  120A  118A  2160  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   402     0020  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   403     0021  120A  118A  2161  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   404     0026  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   405     0027  120A  118A  2162  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   406     002C  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   407                           
   408                           ; Clear objects allocated to BANK0
   409     002D  01A0               	clrf	__pbssBANK0& (0+127)
   410     002E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   411     002F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   412     0030  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   413     0031  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   414     0032  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   415     0033  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   416     0034  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   417     0035  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   418     0036  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   419                           
   420                           ; Clear objects allocated to COMMON
   421     0037  01FA               	clrf	__pbssCOMMON& (0+127)
   422     0038  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   423     0039                     end_of_initialization:	
   424                           ;End of C runtime variable initialization code
   425                           
   426     0039                     __end_of__initialization:
   427     0039  0183               	clrf	3
   428     003A  120A  118A  28DD   	ljmp	_main	;jump to C main() function
   429                           
   430                           	psect	bssCOMMON
   431     007A                     __pbssCOMMON:
   432     007A                     _flag:
   433     007A                     	ds	2
   434                           
   435                           	psect	dataCOMMON
   436     0070                     __pdataCOMMON:
   437     0070                     _PERIOD:
   438     0070                     	ds	2
   439     0072                     _duty_cycle:
   440     0072                     	ds	2
   441     0074                     read_digital_keypad@once:
   442     0074                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445     0020                     __pbssBANK0:
   446     0020                     _loop_counter:
   447     0020                     	ds	4
   448     0024                     _req_time:
   449     0024                     	ds	4
   450     0028                     isr@count:
   451     0028                     	ds	2
   452                           
   453                           	psect	cstackCOMMON
   454     0075                     __pcstackCOMMON:
   455     0075                     ?_init_timer2:
   456     0075                     ?_init_digital_keypad:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0075                     ?_read_digital_keypad:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0075                     ?_software_pwm:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0075                     ?_isr:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0075                     ?_init_config:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0075                     ?_main:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0075                     ??_isr:	
   475                           ; 1 bytes @ 0x0
   476                           
   477                           
   478                           ; 1 bytes @ 0x0
   479     0075                     	ds	2
   480     0077                     ??_init_timer2:
   481     0077                     ??_init_digital_keypad:	
   482                           ; 1 bytes @ 0x2
   483                           
   484     0077                     ??_read_digital_keypad:	
   485                           ; 1 bytes @ 0x2
   486                           
   487     0077                     ??_init_config:	
   488                           ; 1 bytes @ 0x2
   489                           
   490                           
   491                           ; 1 bytes @ 0x2
   492     0077                     	ds	1
   493     0078                     read_digital_keypad@mode:
   494                           
   495                           ; 1 bytes @ 0x3
   496     0078                     	ds	1
   497     0079                     main@key:
   498     0079                     ??_main:	
   499                           ; 1 bytes @ 0x4
   500                           
   501                           
   502                           ; 1 bytes @ 0x4
   503     0079                     	ds	1
   504                           
   505                           	psect	cstackBANK0
   506     002A                     __pcstackBANK0:
   507     002A                     ??_software_pwm:
   508                           
   509                           ; 1 bytes @ 0x0
   510     002A                     	ds	8
   511                           
   512                           	psect	maintext
   513     00DD                     __pmaintext:	
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 31 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  key             1    4[COMMON] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, pclath, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : B00/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         1       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0
   536 ;;      Totals:         1       0       0       0       0
   537 ;;Total ram usage:        1 bytes
   538 ;; Hardware stack levels required when called: 4
   539 ;; This function calls:
   540 ;;		_init_config
   541 ;;		_read_digital_keypad
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547     00DD                     _main:	
   548                           ;psect for function _main
   549                           
   550     00DD                     l786:	
   551                           ;incstack = 0
   552                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   553                           
   554                           
   555                           ;main.c: 32:     unsigned char key;;main.c: 33:     init_config();
   556     00DD  120A  118A  2134  120A  118A  	fcall	_init_config
   557     00E2                     l81:	
   558                           ;main.c: 35:     while (1) {
   559                           
   560                           
   561                           ;main.c: 37:         key = read_digital_keypad(1);
   562     00E2  3001               	movlw	1
   563     00E3  120A  118A  210A  120A  118A  	fcall	_read_digital_keypad
   564     00E8  00F9               	movwf	main@key
   565     00E9                     l788:
   566                           
   567                           ;main.c: 39:         if (flag == 1 || key == 0x3E) {
   568     00E9  037A               	decf	_flag,w
   569     00EA  047B               	iorwf	_flag+1,w
   570     00EB  1903               	btfsc	3,2
   571     00EC  28EE               	goto	u201
   572     00ED  28EF               	goto	u200
   573     00EE                     u201:
   574     00EE  28F5               	goto	l792
   575     00EF                     u200:
   576     00EF                     l790:
   577     00EF  303E               	movlw	62
   578     00F0  0679               	xorwf	main@key,w
   579     00F1  1D03               	btfss	3,2
   580     00F2  28F4               	goto	u211
   581     00F3  28F5               	goto	u210
   582     00F4                     u211:
   583     00F4  28E2               	goto	l81
   584     00F5                     u210:
   585     00F5                     l792:
   586                           
   587                           ;main.c: 40:             if (key == 0x3E)
   588     00F5  303E               	movlw	62
   589     00F6  0679               	xorwf	main@key,w
   590     00F7  1D03               	btfss	3,2
   591     00F8  28FA               	goto	u221
   592     00F9  28FB               	goto	u220
   593     00FA                     u221:
   594     00FA  2900               	goto	l796
   595     00FB                     u220:
   596     00FB                     l794:
   597                           
   598                           ;main.c: 41:             {;main.c: 42:                 duty_cycle = PERIOD;
   599     00FB  0871               	movf	_PERIOD+1,w
   600     00FC  00F3               	movwf	_duty_cycle+1
   601     00FD  0870               	movf	_PERIOD,w
   602     00FE  00F2               	movwf	_duty_cycle
   603                           
   604                           ;main.c: 43:             } else {
   605     00FF  2904               	goto	l798
   606     0100                     l796:
   607                           
   608                           ;main.c: 44:                 duty_cycle = 10;
   609     0100  300A               	movlw	10
   610     0101  00F2               	movwf	_duty_cycle
   611     0102  3000               	movlw	0
   612     0103  00F3               	movwf	_duty_cycle+1
   613     0104                     l798:
   614                           
   615                           ;main.c: 46:             flag = 0;
   616     0104  01FA               	clrf	_flag
   617     0105  01FB               	clrf	_flag+1
   618     0106  28E2               	goto	l81
   619     0107  120A  118A  280C   	ljmp	start
   620     010A                     __end_of_main:
   621                           
   622                           	psect	text1
   623     010A                     __ptext1:	
   624 ;; *************** function _read_digital_keypad *****************
   625 ;; Defined at:
   626 ;;		line 15 in file "digital_keypad.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  mode            1    wreg     unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  mode            1    3[COMMON] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      unsigned char 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0
   642 ;;      Temps:          1       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 2
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654     010A                     _read_digital_keypad:	
   655                           ;psect for function _read_digital_keypad
   656                           
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
   660                           ;read_digital_keypad@mode stored from wreg
   661     010A  00F8               	movwf	read_digital_keypad@mode
   662     010B                     l724:
   663                           
   664                           ;digital_keypad.c: 15: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 16: {;digital_keypad.c: 17:     static unsigned char once = 1;;digital_keypad.c: 
      +                          19:     if (mode == 0)
   665     010B  0878               	movf	read_digital_keypad@mode,w
   666     010C  1D03               	btfss	3,2
   667     010D  290F               	goto	u111
   668     010E  2910               	goto	u110
   669     010F                     u111:
   670     010F  2915               	goto	l732
   671     0110                     u110:
   672     0110                     l726:
   673                           
   674                           ;digital_keypad.c: 20:     {;digital_keypad.c: 21:         return PORTB & 0x3F;
   675     0110  1283               	bcf	3,5	;RP0=0, select bank0
   676     0111  1303               	bcf	3,6	;RP1=0, select bank0
   677     0112  0806               	movf	6,w	;volatile
   678     0113  393F               	andlw	63
   679     0114  2933               	goto	l13
   680     0115                     l732:
   681                           
   682                           ;digital_keypad.c: 24:     {;digital_keypad.c: 25:         if (((PORTB & 0x3F) != 0x3F) 
      +                          && once)
   683     0115  303F               	movlw	63
   684     0116  1283               	bcf	3,5	;RP0=0, select bank0
   685     0117  1303               	bcf	3,6	;RP1=0, select bank0
   686     0118  0506               	andwf	6,w	;volatile
   687     0119  00F7               	movwf	??_read_digital_keypad
   688     011A  303F               	movlw	63
   689     011B  0677               	xorwf	??_read_digital_keypad,w
   690     011C  1903               	btfsc	3,2
   691     011D  291F               	goto	u121
   692     011E  2920               	goto	u120
   693     011F                     u121:
   694     011F  2927               	goto	l744
   695     0120                     u120:
   696     0120                     l734:
   697     0120  0874               	movf	read_digital_keypad@once,w
   698     0121  1903               	btfsc	3,2
   699     0122  2924               	goto	u131
   700     0123  2925               	goto	u130
   701     0124                     u131:
   702     0124  2927               	goto	l744
   703     0125                     u130:
   704     0125                     l736:
   705                           
   706                           ;digital_keypad.c: 26:         {;digital_keypad.c: 27:             once = 0;
   707     0125  01F4               	clrf	read_digital_keypad@once
   708     0126  2910               	goto	l726
   709     0127                     l744:
   710     0127  303F               	movlw	63
   711     0128  0506               	andwf	6,w	;volatile
   712     0129  00F7               	movwf	??_read_digital_keypad
   713     012A  303F               	movlw	63
   714     012B  0677               	xorwf	??_read_digital_keypad,w
   715     012C  1D03               	btfss	3,2
   716     012D  292F               	goto	u141
   717     012E  2930               	goto	u140
   718     012F                     u141:
   719     012F  2932               	goto	l748
   720     0130                     u140:
   721     0130                     l746:
   722                           
   723                           ;digital_keypad.c: 32:         {;digital_keypad.c: 33:             once = 1;
   724     0130  3001               	movlw	1
   725     0131  00F4               	movwf	read_digital_keypad@once
   726     0132                     l748:
   727                           
   728                           ;digital_keypad.c: 37:     return 0x3F;
   729     0132  303F               	movlw	63
   730     0133                     l13:
   731     0133  0008               	return
   732     0134                     __end_of_read_digital_keypad:
   733                           
   734                           	psect	text2
   735     0134                     __ptext2:	
   736 ;; *************** function _init_config *****************
   737 ;; Defined at:
   738 ;;		line 20 in file "main.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0
   755 ;;      Totals:         0       0       0       0       0
   756 ;;Total ram usage:        0 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 3
   759 ;; This function calls:
   760 ;;		_init_digital_keypad
   761 ;;		_init_timer2
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     0134                     _init_config:	
   768                           ;psect for function _init_config
   769                           
   770     0134                     l760:	
   771                           ;incstack = 0
   772                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   773                           
   774                           
   775                           ;main.c: 22:     PORTD = 0x00;
   776     0134  1283               	bcf	3,5	;RP0=0, select bank0
   777     0135  1303               	bcf	3,6	;RP1=0, select bank0
   778     0136  0188               	clrf	8	;volatile
   779                           
   780                           ;main.c: 23:     TRISD = 0x00;
   781     0137  1683               	bsf	3,5	;RP0=1, select bank1
   782     0138  1303               	bcf	3,6	;RP1=0, select bank1
   783     0139  0188               	clrf	8	;volatile
   784     013A                     l762:
   785                           
   786                           ;main.c: 24:     init_digital_keypad();
   787     013A  120A  118A  2158  120A  118A  	fcall	_init_digital_keypad
   788     013F                     l764:
   789                           
   790                           ;main.c: 25:     init_timer2();
   791     013F  120A  118A  214A  120A  118A  	fcall	_init_timer2
   792     0144                     l766:
   793                           
   794                           ;main.c: 26:     TMR2IF = 0;
   795     0144  1283               	bcf	3,5	;RP0=0, select bank0
   796     0145  1303               	bcf	3,6	;RP1=0, select bank0
   797     0146  108C               	bcf	12,1	;volatile
   798     0147                     l768:
   799                           
   800                           ;main.c: 27:     GIE = 1;
   801     0147  178B               	bsf	11,7	;volatile
   802     0148                     l770:
   803                           
   804                           ;main.c: 28:     PEIE = 1;
   805     0148  170B               	bsf	11,6	;volatile
   806     0149                     l76:
   807     0149  0008               	return
   808     014A                     __end_of_init_config:
   809                           
   810                           	psect	text3
   811     014A                     __ptext3:	
   812 ;; *************** function _init_timer2 *****************
   813 ;; Defined at:
   814 ;;		line 9 in file "timer.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		None
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_init_config
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842     014A                     _init_timer2:	
   843                           ;psect for function _init_timer2
   844                           
   845     014A                     l722:	
   846                           ;incstack = 0
   847                           ; Regs used in _init_timer2: []
   848                           
   849                           
   850                           ;timer.c: 11:  PR2 = 250;
   851     014A  30FA               	movlw	250
   852     014B  1683               	bsf	3,5	;RP0=1, select bank1
   853     014C  1303               	bcf	3,6	;RP1=0, select bank1
   854     014D  0092               	movwf	18	;volatile
   855                           
   856                           ;timer.c: 12:     TMR2ON = 1;
   857     014E  1283               	bcf	3,5	;RP0=0, select bank0
   858     014F  1303               	bcf	3,6	;RP1=0, select bank0
   859     0150  1512               	bsf	18,2	;volatile
   860                           
   861                           ;timer.c: 13:     TMR2IE = 1;
   862     0151  1683               	bsf	3,5	;RP0=1, select bank1
   863     0152  1303               	bcf	3,6	;RP1=0, select bank1
   864     0153  148C               	bsf	12,1	;volatile
   865                           
   866                           ;timer.c: 14:     TMR2IF = 0;
   867     0154  1283               	bcf	3,5	;RP0=0, select bank0
   868     0155  1303               	bcf	3,6	;RP1=0, select bank0
   869     0156  108C               	bcf	12,1	;volatile
   870     0157                     l100:
   871     0157  0008               	return
   872     0158                     __end_of_init_timer2:
   873                           
   874                           	psect	text4
   875     0158                     __ptext4:	
   876 ;; *************** function _init_digital_keypad *****************
   877 ;; Defined at:
   878 ;;		line 9 in file "digital_keypad.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 2
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_init_config
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906     0158                     _init_digital_keypad:	
   907                           ;psect for function _init_digital_keypad
   908                           
   909     0158                     l720:	
   910                           ;incstack = 0
   911                           ; Regs used in _init_digital_keypad: [wreg+status,2]
   912                           
   913                           
   914                           ;digital_keypad.c: 12:     TRISB = TRISB | 0x3F;
   915     0158  1683               	bsf	3,5	;RP0=1, select bank1
   916     0159  1303               	bcf	3,6	;RP1=0, select bank1
   917     015A  0806               	movf	6,w	;volatile
   918     015B  383F               	iorlw	63
   919     015C  0086               	movwf	6	;volatile
   920     015D                     l7:
   921     015D  0008               	return
   922     015E                     __end_of_init_digital_keypad:
   923                           
   924                           	psect	text5
   925     003D                     __ptext5:	
   926 ;; *************** function _isr *****************
   927 ;; Defined at:
   928 ;;		line 30 in file "isr.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0
   944 ;;      Temps:          2       0       0       0       0
   945 ;;      Totals:         2       0       0       0       0
   946 ;;Total ram usage:        2 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 1
   949 ;; This function calls:
   950 ;;		_software_pwm
   951 ;; This function is called by:
   952 ;;		Interrupt level 1
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956     003D                     _isr:	
   957                           ;psect for function _isr
   958                           
   959     003D                     i1l808:
   960                           
   961                           ;isr.c: 31:     static unsigned int count = 0;;isr.c: 32:     software_pwm();
   962     003D  120A  118A  208D  120A  118A  	fcall	_software_pwm
   963     0042                     i1l810:
   964                           
   965                           ;isr.c: 34:     if (TMR2IF == 1) {
   966     0042  1283               	bcf	3,5	;RP0=0, select bank0
   967     0043  1303               	bcf	3,6	;RP1=0, select bank0
   968     0044  1C8C               	btfss	12,1	;volatile
   969     0045  2847               	goto	u25_21
   970     0046  2848               	goto	u25_20
   971     0047                     u25_21:
   972     0047  2886               	goto	i1l49
   973     0048                     u25_20:
   974     0048                     i1l812:
   975                           
   976                           ;isr.c: 35:         TMR2 = TMR2 + 2 + 6;
   977     0048  0811               	movf	17,w	;volatile
   978     0049  3E08               	addlw	8
   979     004A  0091               	movwf	17	;volatile
   980                           
   981                           ;isr.c: 37:         if (count++ == 20000) {
   982     004B  3001               	movlw	1
   983     004C  07A8               	addwf	isr@count,f
   984     004D  1803               	skipnc
   985     004E  0AA9               	incf	isr@count+1,f
   986     004F  3000               	movlw	0
   987     0050  07A9               	addwf	isr@count+1,f
   988     0051  3021               	movlw	33
   989     0052  0628               	xorwf	isr@count,w
   990     0053  304E               	movlw	78
   991     0054  1903               	skipnz
   992     0055  0629               	xorwf	isr@count+1,w
   993     0056  1D03               	btfss	3,2
   994     0057  2859               	goto	u26_21
   995     0058  285A               	goto	u26_20
   996     0059                     u26_21:
   997     0059  2885               	goto	i1l820
   998     005A                     u26_20:
   999     005A                     i1l814:
  1000                           
  1001                           ;isr.c: 38:             if (req_time++ == 500)
  1002     005A  3001               	movlw	1
  1003     005B  07A4               	addwf	_req_time,f
  1004     005C  3000               	movlw	0
  1005     005D  1803               	skipnc
  1006     005E  3001               	movlw	1
  1007     005F  07A5               	addwf	_req_time+1,f
  1008     0060  3000               	movlw	0
  1009     0061  1803               	skipnc
  1010     0062  3001               	movlw	1
  1011     0063  07A6               	addwf	_req_time+2,f
  1012     0064  3000               	movlw	0
  1013     0065  1803               	skipnc
  1014     0066  3001               	movlw	1
  1015     0067  07A7               	addwf	_req_time+3,f
  1016     0068  30F5               	movlw	245
  1017     0069  0624               	xorwf	_req_time,w
  1018     006A  1D03               	skipz
  1019     006B  2872               	goto	u27_21
  1020     006C  0325               	decf	_req_time+1,w
  1021     006D  0426               	iorwf	_req_time+2,w
  1022     006E  0427               	iorwf	_req_time+3,w
  1023     006F  1D03               	btfss	3,2
  1024     0070  2872               	goto	u27_21
  1025     0071  2873               	goto	u27_20
  1026     0072                     u27_21:
  1027     0072  2881               	goto	i1l818
  1028     0073                     u27_20:
  1029     0073                     i1l816:
  1030                           
  1031                           ;isr.c: 39:             {;isr.c: 40:                 req_time = 0;
  1032     0073  3000               	movlw	0
  1033     0074  1283               	bcf	3,5	;RP0=0, select bank0
  1034     0075  1303               	bcf	3,6	;RP1=0, select bank0
  1035     0076  00A7               	movwf	_req_time+3
  1036     0077  3000               	movlw	0
  1037     0078  00A6               	movwf	_req_time+2
  1038     0079  3000               	movlw	0
  1039     007A  00A5               	movwf	_req_time+1
  1040     007B  3000               	movlw	0
  1041     007C  00A4               	movwf	_req_time
  1042                           
  1043                           ;isr.c: 41:                 flag = 1;
  1044     007D  3001               	movlw	1
  1045     007E  00FA               	movwf	_flag
  1046     007F  3000               	movlw	0
  1047     0080  00FB               	movwf	_flag+1
  1048     0081                     i1l818:
  1049                           
  1050                           ;isr.c: 43:             count = 0;
  1051     0081  1283               	bcf	3,5	;RP0=0, select bank0
  1052     0082  1303               	bcf	3,6	;RP1=0, select bank0
  1053     0083  01A8               	clrf	isr@count
  1054     0084  01A9               	clrf	isr@count+1
  1055     0085                     i1l820:
  1056                           
  1057                           ;isr.c: 45:         TMR2IF = 0;
  1058     0085  108C               	bcf	12,1	;volatile
  1059     0086                     i1l49:
  1060     0086  0876               	movf	??_isr+1,w
  1061     0087  008A               	movwf	10
  1062     0088  0E75               	swapf	??_isr,w
  1063     0089  0083               	movwf	3
  1064     008A  0EFE               	swapf	btemp,f
  1065     008B  0E7E               	swapf	btemp,w
  1066     008C  0009               	retfie
  1067     008D                     __end_of_isr:
  1068                           
  1069                           	psect	intentry
  1070     0004                     __pintentry:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1073                           
  1074     0004                     interrupt_function:
  1075     007E                     saved_w         set	btemp
  1076     0004  00FE               	movwf	btemp
  1077     0005  0E03               	swapf	3,w
  1078     0006  00F5               	movwf	??_isr
  1079     0007  080A               	movf	10,w
  1080     0008  00F6               	movwf	??_isr+1
  1081     0009  120A  118A  283D   	ljmp	_isr
  1082                           
  1083                           	psect	text6
  1084     008D                     __ptext6:	
  1085 ;; *************** function _software_pwm *****************
  1086 ;; Defined at:
  1087 ;;		line 15 in file "isr.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0
  1103 ;;      Temps:          0       8       0       0       0
  1104 ;;      Totals:         0       8       0       0       0
  1105 ;;Total ram usage:        8 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_isr
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114     008D                     _software_pwm:	
  1115                           ;psect for function _software_pwm
  1116                           
  1117     008D                     i1l800:	
  1118                           ;incstack = 0
  1119                           ; Regs used in _software_pwm: [wreg]
  1120                           
  1121                           
  1122                           ;isr.c: 17:     if (loop_counter++ < duty_cycle) {
  1123     008D  0872               	movf	_duty_cycle,w
  1124     008E  1283               	bcf	3,5	;RP0=0, select bank0
  1125     008F  1303               	bcf	3,6	;RP1=0, select bank0
  1126     0090  00AA               	movwf	??_software_pwm
  1127     0091  0873               	movf	_duty_cycle+1,w
  1128     0092  00AB               	movwf	??_software_pwm+1
  1129     0093  01AC               	clrf	??_software_pwm+2
  1130     0094  01AD               	clrf	??_software_pwm+3
  1131     0095  0823               	movf	_loop_counter+3,w
  1132     0096  00B1               	movwf	??_software_pwm+7
  1133     0097  0822               	movf	_loop_counter+2,w
  1134     0098  00B0               	movwf	??_software_pwm+6
  1135     0099  0821               	movf	_loop_counter+1,w
  1136     009A  00AF               	movwf	??_software_pwm+5
  1137     009B  0820               	movf	_loop_counter,w
  1138     009C  00AE               	movwf	??_software_pwm+4
  1139     009D  3001               	movlw	1
  1140     009E  07A0               	addwf	_loop_counter,f
  1141     009F  3000               	movlw	0
  1142     00A0  07A1               	addwf	_loop_counter+1,f
  1143     00A1  1803               	skipnc
  1144     00A2  0AA2               	incf	_loop_counter+2,f
  1145     00A3  07A2               	addwf	_loop_counter+2,f
  1146     00A4  1803               	skipnc
  1147     00A5  0AA3               	incf	_loop_counter+3,f
  1148     00A6  07A3               	addwf	_loop_counter+3,f
  1149     00A7  082D               	movf	??_software_pwm+3,w
  1150     00A8  0231               	subwf	??_software_pwm+7,w
  1151     00A9  1D03               	skipz
  1152     00AA  28B5               	goto	u23_25
  1153     00AB  082C               	movf	??_software_pwm+2,w
  1154     00AC  0230               	subwf	??_software_pwm+6,w
  1155     00AD  1D03               	skipz
  1156     00AE  28B5               	goto	u23_25
  1157     00AF  082B               	movf	??_software_pwm+1,w
  1158     00B0  022F               	subwf	??_software_pwm+5,w
  1159     00B1  1D03               	skipz
  1160     00B2  28B5               	goto	u23_25
  1161     00B3  082A               	movf	??_software_pwm,w
  1162     00B4  022E               	subwf	??_software_pwm+4,w
  1163     00B5                     u23_25:
  1164     00B5  1803               	skipnc
  1165     00B6  28B8               	goto	u23_21
  1166     00B7  28B9               	goto	u23_20
  1167     00B8                     u23_21:
  1168     00B8  28BB               	goto	i1l36
  1169     00B9                     u23_20:
  1170     00B9                     i1l802:
  1171                           
  1172                           ;isr.c: 18:         RD0 = 1;
  1173     00B9  1408               	bsf	8,0	;volatile
  1174                           
  1175                           ;isr.c: 19:     }
  1176     00BA  28BC               	goto	i1l804
  1177     00BB                     i1l36:	
  1178                           ;isr.c: 21:     else {
  1179                           
  1180                           
  1181                           ;isr.c: 22:         RD0 = 0;
  1182     00BB  1008               	bcf	8,0	;volatile
  1183     00BC                     i1l804:
  1184                           
  1185                           ;isr.c: 25:     if (loop_counter >= PERIOD) {
  1186     00BC  0870               	movf	_PERIOD,w
  1187     00BD  00AA               	movwf	??_software_pwm
  1188     00BE  0871               	movf	_PERIOD+1,w
  1189     00BF  00AB               	movwf	??_software_pwm+1
  1190     00C0  01AC               	clrf	??_software_pwm+2
  1191     00C1  01AD               	clrf	??_software_pwm+3
  1192     00C2  082D               	movf	??_software_pwm+3,w
  1193     00C3  0223               	subwf	_loop_counter+3,w
  1194     00C4  1D03               	skipz
  1195     00C5  28D0               	goto	u24_25
  1196     00C6  082C               	movf	??_software_pwm+2,w
  1197     00C7  0222               	subwf	_loop_counter+2,w
  1198     00C8  1D03               	skipz
  1199     00C9  28D0               	goto	u24_25
  1200     00CA  082B               	movf	??_software_pwm+1,w
  1201     00CB  0221               	subwf	_loop_counter+1,w
  1202     00CC  1D03               	skipz
  1203     00CD  28D0               	goto	u24_25
  1204     00CE  082A               	movf	??_software_pwm,w
  1205     00CF  0220               	subwf	_loop_counter,w
  1206     00D0                     u24_25:
  1207     00D0  1C03               	skipc
  1208     00D1  28D3               	goto	u24_21
  1209     00D2  28D4               	goto	u24_20
  1210     00D3                     u24_21:
  1211     00D3  28DC               	goto	i1l39
  1212     00D4                     u24_20:
  1213     00D4                     i1l806:
  1214                           
  1215                           ;isr.c: 26:         loop_counter = 0;
  1216     00D4  3000               	movlw	0
  1217     00D5  00A3               	movwf	_loop_counter+3
  1218     00D6  3000               	movlw	0
  1219     00D7  00A2               	movwf	_loop_counter+2
  1220     00D8  3000               	movlw	0
  1221     00D9  00A1               	movwf	_loop_counter+1
  1222     00DA  3000               	movlw	0
  1223     00DB  00A0               	movwf	_loop_counter
  1224     00DC                     i1l39:
  1225     00DC  0008               	return
  1226     00DD                     __end_of_software_pwm:
  1227     0002                     ___latbits      equ	2
  1228     007E                     btemp           set	126	;btemp
  1229     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      8      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_digital_keypad

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_software_pwm

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      74
                                              4 COMMON     1     1      0
                        _init_config
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      29
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                       _software_pwm
 ---------------------------------------------------------------------------------
 (4) _software_pwm                                         8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_digital_keypad
     _init_timer2
   _read_digital_keypad

 _isr (ROOT)
   _software_pwm

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      8      18     22.5%
BITBANK0            80      0       0      0.0%
COMMON              14      5      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      24      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 08 19:30:10 2024

                          l7 015D                           l13 0133                           l81 00E2  
                         l76 0149                          l100 0157                          l720 0158  
                        l722 014A                          l732 0115                          l724 010B  
                        l734 0120                          l726 0110                          l760 0134  
                        l736 0125                          l744 0127                          l770 0148  
                        l762 013A                          l746 0130                          l764 013F  
                        l748 0132                          l766 0144                          l790 00EF  
                        l768 0147                          l792 00F5                          l794 00FB  
                        l786 00DD                          l796 0100                          l788 00E9  
                        l798 0104                          _GIE 005F                          _RD0 0040  
                        u110 0110                          u111 010F                          u120 0120  
                        u200 00EF                          u121 011F                          u201 00EE  
                        u130 0125                          u210 00F5                          u131 0124  
                        u211 00F4                          u140 0130                          u220 00FB  
                        u141 012F                          u221 00FA                          _PR2 0092  
                        _isr 003D                 _software_pwm 008D        ??_read_digital_keypad 0077  
                       ?_isr 0075                         _PEIE 005E                         i1l36 00BB  
                       i1l39 00DC                         i1l49 0086                         _TMR2 0011  
                       _flag 007A                         _main 00DD                         btemp 007E  
                       start 000C                        ??_isr 0075                        ?_main 0075  
                      i1l800 008D                        i1l802 00B9                        i1l810 0042  
               ?_init_config 0075                        i1l804 00BC                        i1l820 0085  
                      i1l812 0048                        i1l806 00D4                        i1l814 005A  
                      i1l816 0073                        i1l808 003D                        i1l818 0081  
                      u23_20 00B9                        u23_21 00B8                        u23_25 00B5  
                      u24_20 00D4                        u24_21 00D3                        u24_25 00D0  
                      u25_20 0048                        u25_21 0047                        u26_20 005A  
                      u26_21 0059                        u27_20 0073                        u27_21 0072  
                      _PORTB 0006                        _PORTD 0008                        _TRISB 0086  
                      _TRISD 0088                 ?_init_timer2 0075                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 000F  
               __end_of_main 010A                       ??_main 0079                       _PERIOD 0070  
                     _TMR2IE 0461                       _TMR2IF 0061                       _TMR2ON 0092  
__end_of_init_digital_keypad 015E                 __pdataCOMMON 0070                       saved_w 007E  
    __end_of__initialization 0039               __pcstackCOMMON 0075                   __pbssBANK0 0020  
                 __pmaintext 00DD                   __pintentry 0004  __end_of_read_digital_keypad 0134  
                    __ptext1 010A                      __ptext2 0134                      __ptext3 014A  
                    __ptext4 0158                      __ptext5 003D                      __ptext6 008D  
                 _duty_cycle 0072                      main@key 0079         end_of_initialization 0039  
              __pidataCOMMON 015E                ?_software_pwm 0075          start_initialization 000F  
                __end_of_isr 008D                ??_init_config 0077               ??_software_pwm 002A  
              ??_init_timer2 0077                  __pbssCOMMON 007A                    ___latbits 0002  
              __pcstackBANK0 002A          __end_of_init_config 014A          __end_of_init_timer2 0158  
          interrupt_function 0004          _init_digital_keypad 0158         __end_of_software_pwm 00DD  
               _loop_counter 0020         ?_init_digital_keypad 0075                  _init_config 0134  
                _init_timer2 014A      read_digital_keypad@mode 0078      read_digital_keypad@once 0074  
                   _req_time 0024        ??_init_digital_keypad 0077                     isr@count 0028  
                   intlevel1 0000          _read_digital_keypad 010A         ?_read_digital_keypad 0075  
