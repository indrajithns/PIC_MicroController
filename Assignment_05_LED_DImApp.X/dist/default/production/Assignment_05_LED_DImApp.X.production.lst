

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 08 19:40:10 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,space=0,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0004                     fsr             equ	4
    58     0004                     fsr0            equ	4
    59     0000                     indf            equ	0
    60     0000                     indf0           equ	0
    61     0002                     pc              equ	2
    62     0002                     pcl             equ	2
    63     000A                     pclath          equ	10
    64     0003                     status          equ	3
    65     0000                     INDF            equ	0	;# 
    66     0001                     TMR0            equ	1	;# 
    67     0002                     PCL             equ	2	;# 
    68     0003                     STATUS          equ	3	;# 
    69     0004                     FSR             equ	4	;# 
    70     0005                     PORTA           equ	5	;# 
    71     0006                     PORTB           equ	6	;# 
    72     0007                     PORTC           equ	7	;# 
    73     0008                     PORTD           equ	8	;# 
    74     0009                     PORTE           equ	9	;# 
    75     000A                     PCLATH          equ	10	;# 
    76     000B                     INTCON          equ	11	;# 
    77     000C                     PIR1            equ	12	;# 
    78     000D                     PIR2            equ	13	;# 
    79     000E                     TMR1            equ	14	;# 
    80     000E                     TMR1L           equ	14	;# 
    81     000F                     TMR1H           equ	15	;# 
    82     0010                     T1CON           equ	16	;# 
    83     0011                     TMR2            equ	17	;# 
    84     0012                     T2CON           equ	18	;# 
    85     0013                     SSPBUF          equ	19	;# 
    86     0014                     SSPCON          equ	20	;# 
    87     0015                     CCPR1           equ	21	;# 
    88     0015                     CCPR1L          equ	21	;# 
    89     0016                     CCPR1H          equ	22	;# 
    90     0017                     CCP1CON         equ	23	;# 
    91     0018                     RCSTA           equ	24	;# 
    92     0019                     TXREG           equ	25	;# 
    93     001A                     RCREG           equ	26	;# 
    94     001B                     CCPR2           equ	27	;# 
    95     001B                     CCPR2L          equ	27	;# 
    96     001C                     CCPR2H          equ	28	;# 
    97     001D                     CCP2CON         equ	29	;# 
    98     001E                     ADRESH          equ	30	;# 
    99     001F                     ADCON0          equ	31	;# 
   100     0081                     OPTION_REG      equ	129	;# 
   101     0085                     TRISA           equ	133	;# 
   102     0086                     TRISB           equ	134	;# 
   103     0087                     TRISC           equ	135	;# 
   104     0088                     TRISD           equ	136	;# 
   105     0089                     TRISE           equ	137	;# 
   106     008C                     PIE1            equ	140	;# 
   107     008D                     PIE2            equ	141	;# 
   108     008E                     PCON            equ	142	;# 
   109     0091                     SSPCON2         equ	145	;# 
   110     0092                     PR2             equ	146	;# 
   111     0093                     SSPADD          equ	147	;# 
   112     0094                     SSPSTAT         equ	148	;# 
   113     0098                     TXSTA           equ	152	;# 
   114     0099                     SPBRG           equ	153	;# 
   115     009C                     CMCON           equ	156	;# 
   116     009D                     CVRCON          equ	157	;# 
   117     009E                     ADRESL          equ	158	;# 
   118     009F                     ADCON1          equ	159	;# 
   119     010C                     EEDATA          equ	268	;# 
   120     010D                     EEADR           equ	269	;# 
   121     010E                     EEDATH          equ	270	;# 
   122     010F                     EEADRH          equ	271	;# 
   123     018C                     EECON1          equ	396	;# 
   124     018D                     EECON2          equ	397	;# 
   125     0000                     INDF            equ	0	;# 
   126     0001                     TMR0            equ	1	;# 
   127     0002                     PCL             equ	2	;# 
   128     0003                     STATUS          equ	3	;# 
   129     0004                     FSR             equ	4	;# 
   130     0005                     PORTA           equ	5	;# 
   131     0006                     PORTB           equ	6	;# 
   132     0007                     PORTC           equ	7	;# 
   133     0008                     PORTD           equ	8	;# 
   134     0009                     PORTE           equ	9	;# 
   135     000A                     PCLATH          equ	10	;# 
   136     000B                     INTCON          equ	11	;# 
   137     000C                     PIR1            equ	12	;# 
   138     000D                     PIR2            equ	13	;# 
   139     000E                     TMR1            equ	14	;# 
   140     000E                     TMR1L           equ	14	;# 
   141     000F                     TMR1H           equ	15	;# 
   142     0010                     T1CON           equ	16	;# 
   143     0011                     TMR2            equ	17	;# 
   144     0012                     T2CON           equ	18	;# 
   145     0013                     SSPBUF          equ	19	;# 
   146     0014                     SSPCON          equ	20	;# 
   147     0015                     CCPR1           equ	21	;# 
   148     0015                     CCPR1L          equ	21	;# 
   149     0016                     CCPR1H          equ	22	;# 
   150     0017                     CCP1CON         equ	23	;# 
   151     0018                     RCSTA           equ	24	;# 
   152     0019                     TXREG           equ	25	;# 
   153     001A                     RCREG           equ	26	;# 
   154     001B                     CCPR2           equ	27	;# 
   155     001B                     CCPR2L          equ	27	;# 
   156     001C                     CCPR2H          equ	28	;# 
   157     001D                     CCP2CON         equ	29	;# 
   158     001E                     ADRESH          equ	30	;# 
   159     001F                     ADCON0          equ	31	;# 
   160     0081                     OPTION_REG      equ	129	;# 
   161     0085                     TRISA           equ	133	;# 
   162     0086                     TRISB           equ	134	;# 
   163     0087                     TRISC           equ	135	;# 
   164     0088                     TRISD           equ	136	;# 
   165     0089                     TRISE           equ	137	;# 
   166     008C                     PIE1            equ	140	;# 
   167     008D                     PIE2            equ	141	;# 
   168     008E                     PCON            equ	142	;# 
   169     0091                     SSPCON2         equ	145	;# 
   170     0092                     PR2             equ	146	;# 
   171     0093                     SSPADD          equ	147	;# 
   172     0094                     SSPSTAT         equ	148	;# 
   173     0098                     TXSTA           equ	152	;# 
   174     0099                     SPBRG           equ	153	;# 
   175     009C                     CMCON           equ	156	;# 
   176     009D                     CVRCON          equ	157	;# 
   177     009E                     ADRESL          equ	158	;# 
   178     009F                     ADCON1          equ	159	;# 
   179     010C                     EEDATA          equ	268	;# 
   180     010D                     EEADR           equ	269	;# 
   181     010E                     EEDATH          equ	270	;# 
   182     010F                     EEADRH          equ	271	;# 
   183     018C                     EECON1          equ	396	;# 
   184     018D                     EECON2          equ	397	;# 
   185     0000                     INDF            equ	0	;# 
   186     0001                     TMR0            equ	1	;# 
   187     0002                     PCL             equ	2	;# 
   188     0003                     STATUS          equ	3	;# 
   189     0004                     FSR             equ	4	;# 
   190     0005                     PORTA           equ	5	;# 
   191     0006                     PORTB           equ	6	;# 
   192     0007                     PORTC           equ	7	;# 
   193     0008                     PORTD           equ	8	;# 
   194     0009                     PORTE           equ	9	;# 
   195     000A                     PCLATH          equ	10	;# 
   196     000B                     INTCON          equ	11	;# 
   197     000C                     PIR1            equ	12	;# 
   198     000D                     PIR2            equ	13	;# 
   199     000E                     TMR1            equ	14	;# 
   200     000E                     TMR1L           equ	14	;# 
   201     000F                     TMR1H           equ	15	;# 
   202     0010                     T1CON           equ	16	;# 
   203     0011                     TMR2            equ	17	;# 
   204     0012                     T2CON           equ	18	;# 
   205     0013                     SSPBUF          equ	19	;# 
   206     0014                     SSPCON          equ	20	;# 
   207     0015                     CCPR1           equ	21	;# 
   208     0015                     CCPR1L          equ	21	;# 
   209     0016                     CCPR1H          equ	22	;# 
   210     0017                     CCP1CON         equ	23	;# 
   211     0018                     RCSTA           equ	24	;# 
   212     0019                     TXREG           equ	25	;# 
   213     001A                     RCREG           equ	26	;# 
   214     001B                     CCPR2           equ	27	;# 
   215     001B                     CCPR2L          equ	27	;# 
   216     001C                     CCPR2H          equ	28	;# 
   217     001D                     CCP2CON         equ	29	;# 
   218     001E                     ADRESH          equ	30	;# 
   219     001F                     ADCON0          equ	31	;# 
   220     0081                     OPTION_REG      equ	129	;# 
   221     0085                     TRISA           equ	133	;# 
   222     0086                     TRISB           equ	134	;# 
   223     0087                     TRISC           equ	135	;# 
   224     0088                     TRISD           equ	136	;# 
   225     0089                     TRISE           equ	137	;# 
   226     008C                     PIE1            equ	140	;# 
   227     008D                     PIE2            equ	141	;# 
   228     008E                     PCON            equ	142	;# 
   229     0091                     SSPCON2         equ	145	;# 
   230     0092                     PR2             equ	146	;# 
   231     0093                     SSPADD          equ	147	;# 
   232     0094                     SSPSTAT         equ	148	;# 
   233     0098                     TXSTA           equ	152	;# 
   234     0099                     SPBRG           equ	153	;# 
   235     009C                     CMCON           equ	156	;# 
   236     009D                     CVRCON          equ	157	;# 
   237     009E                     ADRESL          equ	158	;# 
   238     009F                     ADCON1          equ	159	;# 
   239     010C                     EEDATA          equ	268	;# 
   240     010D                     EEADR           equ	269	;# 
   241     010E                     EEDATH          equ	270	;# 
   242     010F                     EEADRH          equ	271	;# 
   243     018C                     EECON1          equ	396	;# 
   244     018D                     EECON2          equ	397	;# 
   245     0000                     INDF            equ	0	;# 
   246     0001                     TMR0            equ	1	;# 
   247     0002                     PCL             equ	2	;# 
   248     0003                     STATUS          equ	3	;# 
   249     0004                     FSR             equ	4	;# 
   250     0005                     PORTA           equ	5	;# 
   251     0006                     PORTB           equ	6	;# 
   252     0007                     PORTC           equ	7	;# 
   253     0008                     PORTD           equ	8	;# 
   254     0009                     PORTE           equ	9	;# 
   255     000A                     PCLATH          equ	10	;# 
   256     000B                     INTCON          equ	11	;# 
   257     000C                     PIR1            equ	12	;# 
   258     000D                     PIR2            equ	13	;# 
   259     000E                     TMR1            equ	14	;# 
   260     000E                     TMR1L           equ	14	;# 
   261     000F                     TMR1H           equ	15	;# 
   262     0010                     T1CON           equ	16	;# 
   263     0011                     TMR2            equ	17	;# 
   264     0012                     T2CON           equ	18	;# 
   265     0013                     SSPBUF          equ	19	;# 
   266     0014                     SSPCON          equ	20	;# 
   267     0015                     CCPR1           equ	21	;# 
   268     0015                     CCPR1L          equ	21	;# 
   269     0016                     CCPR1H          equ	22	;# 
   270     0017                     CCP1CON         equ	23	;# 
   271     0018                     RCSTA           equ	24	;# 
   272     0019                     TXREG           equ	25	;# 
   273     001A                     RCREG           equ	26	;# 
   274     001B                     CCPR2           equ	27	;# 
   275     001B                     CCPR2L          equ	27	;# 
   276     001C                     CCPR2H          equ	28	;# 
   277     001D                     CCP2CON         equ	29	;# 
   278     001E                     ADRESH          equ	30	;# 
   279     001F                     ADCON0          equ	31	;# 
   280     0081                     OPTION_REG      equ	129	;# 
   281     0085                     TRISA           equ	133	;# 
   282     0086                     TRISB           equ	134	;# 
   283     0087                     TRISC           equ	135	;# 
   284     0088                     TRISD           equ	136	;# 
   285     0089                     TRISE           equ	137	;# 
   286     008C                     PIE1            equ	140	;# 
   287     008D                     PIE2            equ	141	;# 
   288     008E                     PCON            equ	142	;# 
   289     0091                     SSPCON2         equ	145	;# 
   290     0092                     PR2             equ	146	;# 
   291     0093                     SSPADD          equ	147	;# 
   292     0094                     SSPSTAT         equ	148	;# 
   293     0098                     TXSTA           equ	152	;# 
   294     0099                     SPBRG           equ	153	;# 
   295     009C                     CMCON           equ	156	;# 
   296     009D                     CVRCON          equ	157	;# 
   297     009E                     ADRESL          equ	158	;# 
   298     009F                     ADCON1          equ	159	;# 
   299     010C                     EEDATA          equ	268	;# 
   300     010D                     EEADR           equ	269	;# 
   301     010E                     EEDATH          equ	270	;# 
   302     010F                     EEADRH          equ	271	;# 
   303     018C                     EECON1          equ	396	;# 
   304     018D                     EECON2          equ	397	;# 
   305     0000                     INDF            equ	0	;# 
   306     0001                     TMR0            equ	1	;# 
   307     0002                     PCL             equ	2	;# 
   308     0003                     STATUS          equ	3	;# 
   309     0004                     FSR             equ	4	;# 
   310     0005                     PORTA           equ	5	;# 
   311     0006                     PORTB           equ	6	;# 
   312     0007                     PORTC           equ	7	;# 
   313     0008                     PORTD           equ	8	;# 
   314     0009                     PORTE           equ	9	;# 
   315     000A                     PCLATH          equ	10	;# 
   316     000B                     INTCON          equ	11	;# 
   317     000C                     PIR1            equ	12	;# 
   318     000D                     PIR2            equ	13	;# 
   319     000E                     TMR1            equ	14	;# 
   320     000E                     TMR1L           equ	14	;# 
   321     000F                     TMR1H           equ	15	;# 
   322     0010                     T1CON           equ	16	;# 
   323     0011                     TMR2            equ	17	;# 
   324     0012                     T2CON           equ	18	;# 
   325     0013                     SSPBUF          equ	19	;# 
   326     0014                     SSPCON          equ	20	;# 
   327     0015                     CCPR1           equ	21	;# 
   328     0015                     CCPR1L          equ	21	;# 
   329     0016                     CCPR1H          equ	22	;# 
   330     0017                     CCP1CON         equ	23	;# 
   331     0018                     RCSTA           equ	24	;# 
   332     0019                     TXREG           equ	25	;# 
   333     001A                     RCREG           equ	26	;# 
   334     001B                     CCPR2           equ	27	;# 
   335     001B                     CCPR2L          equ	27	;# 
   336     001C                     CCPR2H          equ	28	;# 
   337     001D                     CCP2CON         equ	29	;# 
   338     001E                     ADRESH          equ	30	;# 
   339     001F                     ADCON0          equ	31	;# 
   340     0081                     OPTION_REG      equ	129	;# 
   341     0085                     TRISA           equ	133	;# 
   342     0086                     TRISB           equ	134	;# 
   343     0087                     TRISC           equ	135	;# 
   344     0088                     TRISD           equ	136	;# 
   345     0089                     TRISE           equ	137	;# 
   346     008C                     PIE1            equ	140	;# 
   347     008D                     PIE2            equ	141	;# 
   348     008E                     PCON            equ	142	;# 
   349     0091                     SSPCON2         equ	145	;# 
   350     0092                     PR2             equ	146	;# 
   351     0093                     SSPADD          equ	147	;# 
   352     0094                     SSPSTAT         equ	148	;# 
   353     0098                     TXSTA           equ	152	;# 
   354     0099                     SPBRG           equ	153	;# 
   355     009C                     CMCON           equ	156	;# 
   356     009D                     CVRCON          equ	157	;# 
   357     009E                     ADRESL          equ	158	;# 
   358     009F                     ADCON1          equ	159	;# 
   359     010C                     EEDATA          equ	268	;# 
   360     010D                     EEADR           equ	269	;# 
   361     010E                     EEDATH          equ	270	;# 
   362     010F                     EEADRH          equ	271	;# 
   363     018C                     EECON1          equ	396	;# 
   364     018D                     EECON2          equ	397	;# 
   365                           
   366                           	psect	idataCOMMON
   367     0193                     __pidataCOMMON:
   368                           
   369                           ;initializer for read_digital_keypad@once
   370     0193  3401               	retlw	1
   371                           
   372                           	psect	idataBANK0
   373     0176                     __pidataBANK0:
   374                           
   375                           ;initializer for _wait
   376     0176  34FA               	retlw	250
   377     0177  3400               	retlw	0
   378     0178  3400               	retlw	0
   379     0179  3400               	retlw	0
   380                           
   381                           ;initializer for _period
   382     017A  3464               	retlw	100
   383     017B  3400               	retlw	0
   384     017C  3400               	retlw	0
   385     017D  3400               	retlw	0
   386                           
   387                           ;initializer for _duty_cycle
   388     017E  3432               	retlw	50
   389     017F  3400               	retlw	0
   390     0180  3400               	retlw	0
   391     0181  3400               	retlw	0
   392     0008                     _PORTD          set	8
   393     0006                     _PORTB          set	6
   394     0092                     _TMR2ON         set	146
   395     005E                     _PEIE           set	94
   396     005F                     _GIE            set	95
   397     0061                     _TMR2IF         set	97
   398     0040                     _RD0            set	64
   399     0092                     _PR2            set	146
   400     0088                     _TRISD          set	136
   401     0086                     _TRISB          set	134
   402     0461                     _TMR2IE         set	1121
   403                           
   404                           	psect	cinit
   405     000F                     start_initialization:	
   406                           ; #config settings
   407                           
   408     000F                     __initialization:
   409                           
   410                           ; Initialize objects allocated to BANK0
   411     000F  1383               	bcf	3,7	;select IRP bank0
   412     0010  302C               	movlw	low (__pdataBANK0+12)
   413     0011  00FD               	movwf	btemp+-1
   414     0012  3001               	movlw	high __pidataBANK0
   415     0013  00FE               	movwf	btemp
   416     0014  3076               	movlw	low __pidataBANK0
   417     0015  00FF               	movwf	btemp+1
   418     0016  3020               	movlw	low __pdataBANK0
   419     0017  0084               	movwf	4
   420     0018  120A  118A  214B  120A  118A  	fcall	init_ram0
   421                           
   422                           ; Initialize objects allocated to COMMON
   423     001D  120A  118A  2193  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   424     0022  00F9               	movwf	__pdataCOMMON& (0+127)
   425                           
   426                           ; Clear objects allocated to BANK0
   427     0023  01AC               	clrf	__pbssBANK0& (0+127)
   428     0024  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   429     0025  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   430     0026  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   431     0027                     end_of_initialization:	
   432                           ;End of C runtime variable initialization code
   433                           
   434     0027                     __end_of__initialization:
   435     0027  0183               	clrf	3
   436     0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   437                           
   438                           	psect	dataCOMMON
   439     0079                     __pdataCOMMON:
   440     0079                     read_digital_keypad@once:
   441     0079                     	ds	1
   442                           
   443                           	psect	bssBANK0
   444     002C                     __pbssBANK0:
   445     002C                     _loop_counter:
   446     002C                     	ds	4
   447                           
   448                           	psect	dataBANK0
   449     0020                     __pdataBANK0:
   450     0020                     _wait:
   451     0020                     	ds	4
   452     0024                     _period:
   453     0024                     	ds	4
   454     0028                     _duty_cycle:
   455     0028                     	ds	4
   456                           
   457                           	psect	inittext
   458     0147                     init_fetch0:	
   459                           ;	Called with low address in FSR and high address in W
   460                           
   461     0147  087E               	movf	btemp,w
   462     0148  008A               	movwf	10
   463     0149  087F               	movf	btemp+1,w
   464     014A  0082               	movwf	2
   465     014B                     init_ram0:	
   466                           ;Called with:
   467                           ;	high address of idata address in btemp 
   468                           ;	low address of idata address in btemp+1 
   469                           ;	low address of data in FSR
   470                           ;	high address + 1 of data in btemp-1
   471                           
   472     014B  120A  118A  2147  120A  118A  	fcall	init_fetch0
   473     0150  0080               	movwf	0
   474     0151  0A84               	incf	4,f
   475     0152  0804               	movf	4,w
   476     0153  067D               	xorwf	btemp+-1,w
   477     0154  1903               	btfsc	3,2
   478     0155  3400               	retlw	0
   479     0156  0AFF               	incf	btemp+1,f
   480     0157  1903               	btfsc	3,2
   481     0158  0AFE               	incf	btemp,f
   482     0159  294B               	goto	init_ram0
   483                           
   484                           	psect	cstackCOMMON
   485     0070                     __pcstackCOMMON:
   486     0070                     ?_init_timer:
   487     0070                     ?_init_digital_keypad:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_read_digital_keypad:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_software_pwm:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_isr:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_init_config:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_main:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ??_isr:	
   506                           ; 1 bytes @ 0x0
   507                           
   508                           
   509                           ; 1 bytes @ 0x0
   510     0070                     	ds	2
   511     0072                     ??_init_timer:
   512     0072                     ??_init_digital_keypad:	
   513                           ; 1 bytes @ 0x2
   514                           
   515     0072                     ??_read_digital_keypad:	
   516                           ; 1 bytes @ 0x2
   517                           
   518     0072                     ??_software_pwm:	
   519                           ; 1 bytes @ 0x2
   520                           
   521     0072                     ??_init_config:	
   522                           ; 1 bytes @ 0x2
   523                           
   524                           
   525                           ; 1 bytes @ 0x2
   526     0072                     	ds	1
   527     0073                     read_digital_keypad@mode:
   528                           
   529                           ; 1 bytes @ 0x3
   530     0073                     	ds	1
   531     0074                     ??_main:
   532                           
   533                           ; 1 bytes @ 0x4
   534     0074                     	ds	4
   535     0078                     main@key:
   536                           
   537                           ; 1 bytes @ 0x8
   538     0078                     	ds	1
   539                           
   540                           	psect	maintext
   541     002B                     __pmaintext:	
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 31 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  key             1    8[COMMON] unsigned char 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : B00/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         1       0       0       0       0
   563 ;;      Temps:          4       0       0       0       0
   564 ;;      Totals:         5       0       0       0       0
   565 ;;Total ram usage:        5 bytes
   566 ;; Hardware stack levels required when called: 3
   567 ;; This function calls:
   568 ;;		_init_config
   569 ;;		_init_digital_keypad
   570 ;;		_read_digital_keypad
   571 ;;		_software_pwm
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577     002B                     _main:	
   578                           ;psect for function _main
   579                           
   580     002B                     l762:	
   581                           ;incstack = 0
   582                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   583                           
   584     002B  120A  118A  215A  120A  118A  	fcall	_init_config
   585     0030                     l764:
   586     0030  120A  118A  218D  120A  118A  	fcall	_init_digital_keypad
   587     0035                     l766:
   588     0035  3000               	movlw	0
   589     0036  120A  118A  211D  120A  118A  	fcall	_read_digital_keypad
   590     003B  00F8               	movwf	main@key
   591     003C                     l768:
   592     003C  3001               	movlw	1
   593     003D  00F4               	movwf	??_main
   594     003E  3000               	movlw	0
   595     003F  00F5               	movwf	??_main+1
   596     0040  3000               	movlw	0
   597     0041  00F6               	movwf	??_main+2
   598     0042  3000               	movlw	0
   599     0043  00F7               	movwf	??_main+3
   600     0044  0874               	movf	??_main,w
   601     0045  1283               	bcf	3,5	;RP0=0, select bank0
   602     0046  1303               	bcf	3,6	;RP1=0, select bank0
   603     0047  02A0               	subwf	_wait,f
   604     0048  0875               	movf	??_main+1,w
   605     0049  1C03               	skipc
   606     004A  0F75               	incfsz	??_main+1,w
   607     004B  284D               	goto	u175
   608     004C  284E               	goto	u176
   609     004D                     u175:
   610     004D  02A1               	subwf	_wait+1,f
   611     004E                     u176:
   612     004E  0876               	movf	??_main+2,w
   613     004F  1C03               	skipc
   614     0050  0F76               	incfsz	??_main+2,w
   615     0051  2853               	goto	u177
   616     0052  2854               	goto	u178
   617     0053                     u177:
   618     0053  02A2               	subwf	_wait+2,f
   619     0054                     u178:
   620     0054  0877               	movf	??_main+3,w
   621     0055  1C03               	skipc
   622     0056  0F77               	incfsz	??_main+3,w
   623     0057  2859               	goto	u179
   624     0058  285A               	goto	u170
   625     0059                     u179:
   626     0059  02A3               	subwf	_wait+3,f
   627     005A                     u170:
   628     005A  0A20               	incf	_wait,w
   629     005B  1D03               	skipz
   630     005C  2867               	goto	u181
   631     005D  0A21               	incf	_wait+1,w
   632     005E  1D03               	skipz
   633     005F  2867               	goto	u181
   634     0060  0A22               	incf	_wait+2,w
   635     0061  1D03               	skipz
   636     0062  2867               	goto	u181
   637     0063  0A23               	incf	_wait+3,w
   638     0064  1D03               	btfss	3,2
   639     0065  2867               	goto	u181
   640     0066  2868               	goto	u180
   641     0067                     u181:
   642     0067  28C6               	goto	l784
   643     0068                     u180:
   644     0068                     l770:
   645     0068  3000               	movlw	0
   646     0069  1283               	bcf	3,5	;RP0=0, select bank0
   647     006A  1303               	bcf	3,6	;RP1=0, select bank0
   648     006B  00A3               	movwf	_wait+3
   649     006C  3000               	movlw	0
   650     006D  00A2               	movwf	_wait+2
   651     006E  3000               	movlw	0
   652     006F  00A1               	movwf	_wait+1
   653     0070  30FA               	movlw	250
   654     0071  00A0               	movwf	_wait
   655     0072                     l772:
   656     0072  303E               	movlw	62
   657     0073  0678               	xorwf	main@key,w
   658     0074  1D03               	btfss	3,2
   659     0075  2877               	goto	u191
   660     0076  2878               	goto	u190
   661     0077                     u191:
   662     0077  289A               	goto	l778
   663     0078                     u190:
   664     0078                     l774:
   665     0078  082B               	movf	_duty_cycle+3,w
   666     0079  1D03               	btfss	3,2
   667     007A  2888               	goto	u201
   668     007B  082A               	movf	_duty_cycle+2,w
   669     007C  1D03               	btfss	3,2
   670     007D  2888               	goto	u201
   671     007E  0829               	movf	_duty_cycle+1,w
   672     007F  1D03               	btfss	3,2
   673     0080  2888               	goto	u201
   674     0081  3064               	movlw	100
   675     0082  0228               	subwf	_duty_cycle,w
   676     0083  1D03               	skipz
   677     0084  2885               	goto	u203
   678     0085                     u203:
   679     0085  1803               	btfsc	3,0
   680     0086  2888               	goto	u201
   681     0087  2889               	goto	u200
   682     0088                     u201:
   683     0088  289A               	goto	l778
   684     0089                     u200:
   685     0089                     l776:
   686     0089  3001               	movlw	1
   687     008A  1283               	bcf	3,5	;RP0=0, select bank0
   688     008B  1303               	bcf	3,6	;RP1=0, select bank0
   689     008C  07A8               	addwf	_duty_cycle,f
   690     008D  3000               	movlw	0
   691     008E  1803               	skipnc
   692     008F  3001               	movlw	1
   693     0090  07A9               	addwf	_duty_cycle+1,f
   694     0091  3000               	movlw	0
   695     0092  1803               	skipnc
   696     0093  3001               	movlw	1
   697     0094  07AA               	addwf	_duty_cycle+2,f
   698     0095  3000               	movlw	0
   699     0096  1803               	skipnc
   700     0097  3001               	movlw	1
   701     0098  07AB               	addwf	_duty_cycle+3,f
   702     0099  28C6               	goto	l784
   703     009A                     l778:
   704     009A  303D               	movlw	61
   705     009B  0678               	xorwf	main@key,w
   706     009C  1D03               	btfss	3,2
   707     009D  289F               	goto	u211
   708     009E  28A0               	goto	u210
   709     009F                     u211:
   710     009F  28C6               	goto	l784
   711     00A0                     u210:
   712     00A0                     l780:
   713     00A0  1283               	bcf	3,5	;RP0=0, select bank0
   714     00A1  1303               	bcf	3,6	;RP1=0, select bank0
   715     00A2  082B               	movf	_duty_cycle+3,w
   716     00A3  042A               	iorwf	_duty_cycle+2,w
   717     00A4  0429               	iorwf	_duty_cycle+1,w
   718     00A5  0428               	iorwf	_duty_cycle,w
   719     00A6  1903               	skipnz
   720     00A7  28A9               	goto	u221
   721     00A8  28AA               	goto	u220
   722     00A9                     u221:
   723     00A9  28C6               	goto	l784
   724     00AA                     u220:
   725     00AA                     l782:
   726     00AA  3001               	movlw	1
   727     00AB  00F4               	movwf	??_main
   728     00AC  3000               	movlw	0
   729     00AD  00F5               	movwf	??_main+1
   730     00AE  3000               	movlw	0
   731     00AF  00F6               	movwf	??_main+2
   732     00B0  3000               	movlw	0
   733     00B1  00F7               	movwf	??_main+3
   734     00B2  0874               	movf	??_main,w
   735     00B3  02A8               	subwf	_duty_cycle,f
   736     00B4  0875               	movf	??_main+1,w
   737     00B5  1C03               	skipc
   738     00B6  0F75               	incfsz	??_main+1,w
   739     00B7  28B9               	goto	u235
   740     00B8  28BA               	goto	u236
   741     00B9                     u235:
   742     00B9  02A9               	subwf	_duty_cycle+1,f
   743     00BA                     u236:
   744     00BA  0876               	movf	??_main+2,w
   745     00BB  1C03               	skipc
   746     00BC  0F76               	incfsz	??_main+2,w
   747     00BD  28BF               	goto	u237
   748     00BE  28C0               	goto	u238
   749     00BF                     u237:
   750     00BF  02AA               	subwf	_duty_cycle+2,f
   751     00C0                     u238:
   752     00C0  0877               	movf	??_main+3,w
   753     00C1  1C03               	skipc
   754     00C2  0F77               	incfsz	??_main+3,w
   755     00C3  28C5               	goto	u239
   756     00C4  28C6               	goto	u230
   757     00C5                     u239:
   758     00C5  02AB               	subwf	_duty_cycle+3,f
   759     00C6                     u230:
   760     00C6                     l784:
   761     00C6  120A  118A  20CF  120A  118A  	fcall	_software_pwm
   762     00CB  2835               	goto	l766
   763     00CC  120A  118A  280C   	ljmp	start
   764     00CF                     __end_of_main:
   765                           
   766                           	psect	text1
   767     00CF                     __ptext1:	
   768 ;; *************** function _software_pwm *****************
   769 ;; Defined at:
   770 ;;		line 13 in file "isr.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         0       0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; Hardware stack levels required when called: 1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798     00CF                     _software_pwm:	
   799                           ;psect for function _software_pwm
   800                           
   801     00CF                     l742:	
   802                           ;incstack = 0
   803                           ; Regs used in _software_pwm: [wreg+status,2+status,0]
   804                           
   805                           
   806                           ;isr.c: 15:     if (loop_counter < duty_cycle) {
   807     00CF  1283               	bcf	3,5	;RP0=0, select bank0
   808     00D0  1303               	bcf	3,6	;RP1=0, select bank0
   809     00D1  082B               	movf	_duty_cycle+3,w
   810     00D2  022F               	subwf	_loop_counter+3,w
   811     00D3  1D03               	skipz
   812     00D4  28DF               	goto	u145
   813     00D5  082A               	movf	_duty_cycle+2,w
   814     00D6  022E               	subwf	_loop_counter+2,w
   815     00D7  1D03               	skipz
   816     00D8  28DF               	goto	u145
   817     00D9  0829               	movf	_duty_cycle+1,w
   818     00DA  022D               	subwf	_loop_counter+1,w
   819     00DB  1D03               	skipz
   820     00DC  28DF               	goto	u145
   821     00DD  0828               	movf	_duty_cycle,w
   822     00DE  022C               	subwf	_loop_counter,w
   823     00DF                     u145:
   824     00DF  1803               	skipnc
   825     00E0  28E2               	goto	u141
   826     00E1  28E3               	goto	u140
   827     00E2                     u141:
   828     00E2  28E5               	goto	l746
   829     00E3                     u140:
   830     00E3                     l744:
   831                           
   832                           ;isr.c: 16:         RD0 = 1;
   833     00E3  1408               	bsf	8,0	;volatile
   834                           
   835                           ;isr.c: 18:     } else if (loop_counter < period) {
   836     00E4  28F9               	goto	l750
   837     00E5                     l746:
   838     00E5  082F               	movf	_loop_counter+3,w
   839     00E6  1D03               	btfss	3,2
   840     00E7  28F5               	goto	u151
   841     00E8  082E               	movf	_loop_counter+2,w
   842     00E9  1D03               	btfss	3,2
   843     00EA  28F5               	goto	u151
   844     00EB  082D               	movf	_loop_counter+1,w
   845     00EC  1D03               	btfss	3,2
   846     00ED  28F5               	goto	u151
   847     00EE  3064               	movlw	100
   848     00EF  022C               	subwf	_loop_counter,w
   849     00F0  1D03               	skipz
   850     00F1  28F2               	goto	u153
   851     00F2                     u153:
   852     00F2  1803               	btfsc	3,0
   853     00F3  28F5               	goto	u151
   854     00F4  28F6               	goto	u150
   855     00F5                     u151:
   856     00F5  28F9               	goto	l750
   857     00F6                     u150:
   858     00F6                     l748:
   859                           
   860                           ;isr.c: 19:         RD0 = 0;
   861     00F6  1283               	bcf	3,5	;RP0=0, select bank0
   862     00F7  1303               	bcf	3,6	;RP1=0, select bank0
   863     00F8  1008               	bcf	8,0	;volatile
   864     00F9                     l750:
   865     00F9  3001               	movlw	1
   866     00FA  1283               	bcf	3,5	;RP0=0, select bank0
   867     00FB  1303               	bcf	3,6	;RP1=0, select bank0
   868     00FC  07AC               	addwf	_loop_counter,f
   869     00FD  3000               	movlw	0
   870     00FE  1803               	skipnc
   871     00FF  3001               	movlw	1
   872     0100  07AD               	addwf	_loop_counter+1,f
   873     0101  3000               	movlw	0
   874     0102  1803               	skipnc
   875     0103  3001               	movlw	1
   876     0104  07AE               	addwf	_loop_counter+2,f
   877     0105  3000               	movlw	0
   878     0106  1803               	skipnc
   879     0107  3001               	movlw	1
   880     0108  07AF               	addwf	_loop_counter+3,f
   881     0109  3065               	movlw	101
   882     010A  062C               	xorwf	_loop_counter,w
   883     010B  042D               	iorwf	_loop_counter+1,w
   884     010C  042E               	iorwf	_loop_counter+2,w
   885     010D  042F               	iorwf	_loop_counter+3,w
   886     010E  1D03               	btfss	3,2
   887     010F  2911               	goto	u161
   888     0110  2912               	goto	u160
   889     0111                     u161:
   890     0111  291C               	goto	l34
   891     0112                     u160:
   892     0112                     l752:
   893                           
   894                           ;isr.c: 23:         loop_counter = 0;
   895     0112  3000               	movlw	0
   896     0113  1283               	bcf	3,5	;RP0=0, select bank0
   897     0114  1303               	bcf	3,6	;RP1=0, select bank0
   898     0115  00AF               	movwf	_loop_counter+3
   899     0116  3000               	movlw	0
   900     0117  00AE               	movwf	_loop_counter+2
   901     0118  3000               	movlw	0
   902     0119  00AD               	movwf	_loop_counter+1
   903     011A  3000               	movlw	0
   904     011B  00AC               	movwf	_loop_counter
   905     011C                     l34:
   906     011C  0008               	return
   907     011D                     __end_of_software_pwm:
   908                           
   909                           	psect	text2
   910     011D                     __ptext2:	
   911 ;; *************** function _read_digital_keypad *****************
   912 ;; Defined at:
   913 ;;		line 15 in file "digital_keypad.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  mode            1    wreg     unsigned char 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  mode            1    3[COMMON] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      unsigned char 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         0       0       0       0       0
   928 ;;      Locals:         1       0       0       0       0
   929 ;;      Temps:          1       0       0       0       0
   930 ;;      Totals:         2       0       0       0       0
   931 ;;Total ram usage:        2 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; Hardware stack levels required when called: 1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941     011D                     _read_digital_keypad:	
   942                           ;psect for function _read_digital_keypad
   943                           
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
   947                           ;read_digital_keypad@mode stored from wreg
   948     011D  00F3               	movwf	read_digital_keypad@mode
   949     011E                     l714:
   950                           
   951                           ;digital_keypad.c: 15: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 16: {;digital_keypad.c: 17:     static unsigned char once = 1;;digital_keypad.c: 
      +                          19:     if (mode == 0)
   952     011E  0873               	movf	read_digital_keypad@mode,w
   953     011F  1D03               	btfss	3,2
   954     0120  2922               	goto	u101
   955     0121  2923               	goto	u100
   956     0122                     u101:
   957     0122  2928               	goto	l722
   958     0123                     u100:
   959     0123                     l716:
   960                           
   961                           ;digital_keypad.c: 20:     {;digital_keypad.c: 21:         return PORTB & 0x3F;
   962     0123  1283               	bcf	3,5	;RP0=0, select bank0
   963     0124  1303               	bcf	3,6	;RP1=0, select bank0
   964     0125  0806               	movf	6,w	;volatile
   965     0126  393F               	andlw	63
   966     0127  2946               	goto	l13
   967     0128                     l722:
   968                           
   969                           ;digital_keypad.c: 24:     {;digital_keypad.c: 25:         if (((PORTB & 0x3F) != 0x3F) 
      +                          && once)
   970     0128  303F               	movlw	63
   971     0129  1283               	bcf	3,5	;RP0=0, select bank0
   972     012A  1303               	bcf	3,6	;RP1=0, select bank0
   973     012B  0506               	andwf	6,w	;volatile
   974     012C  00F2               	movwf	??_read_digital_keypad
   975     012D  303F               	movlw	63
   976     012E  0672               	xorwf	??_read_digital_keypad,w
   977     012F  1903               	btfsc	3,2
   978     0130  2932               	goto	u111
   979     0131  2933               	goto	u110
   980     0132                     u111:
   981     0132  293A               	goto	l734
   982     0133                     u110:
   983     0133                     l724:
   984     0133  0879               	movf	read_digital_keypad@once,w
   985     0134  1903               	btfsc	3,2
   986     0135  2937               	goto	u121
   987     0136  2938               	goto	u120
   988     0137                     u121:
   989     0137  293A               	goto	l734
   990     0138                     u120:
   991     0138                     l726:
   992                           
   993                           ;digital_keypad.c: 26:         {;digital_keypad.c: 27:             once = 0;
   994     0138  01F9               	clrf	read_digital_keypad@once
   995     0139  2923               	goto	l716
   996     013A                     l734:
   997     013A  303F               	movlw	63
   998     013B  0506               	andwf	6,w	;volatile
   999     013C  00F2               	movwf	??_read_digital_keypad
  1000     013D  303F               	movlw	63
  1001     013E  0672               	xorwf	??_read_digital_keypad,w
  1002     013F  1D03               	btfss	3,2
  1003     0140  2942               	goto	u131
  1004     0141  2943               	goto	u130
  1005     0142                     u131:
  1006     0142  2945               	goto	l738
  1007     0143                     u130:
  1008     0143                     l736:
  1009                           
  1010                           ;digital_keypad.c: 32:         {;digital_keypad.c: 33:             once = 1;
  1011     0143  3001               	movlw	1
  1012     0144  00F9               	movwf	read_digital_keypad@once
  1013     0145                     l738:
  1014                           
  1015                           ;digital_keypad.c: 37:     return 0x3F;
  1016     0145  303F               	movlw	63
  1017     0146                     l13:
  1018     0146  0008               	return
  1019     0147                     __end_of_read_digital_keypad:
  1020                           
  1021                           	psect	text3
  1022     018D                     __ptext3:	
  1023 ;; *************** function _init_digital_keypad *****************
  1024 ;; Defined at:
  1025 ;;		line 9 in file "digital_keypad.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053     018D                     _init_digital_keypad:	
  1054                           ;psect for function _init_digital_keypad
  1055                           
  1056     018D                     l712:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1059                           
  1060                           
  1061                           ;digital_keypad.c: 12:     TRISB = TRISB | 0x3F;
  1062     018D  1683               	bsf	3,5	;RP0=1, select bank1
  1063     018E  1303               	bcf	3,6	;RP1=0, select bank1
  1064     018F  0806               	movf	6,w	;volatile
  1065     0190  383F               	iorlw	63
  1066     0191  0086               	movwf	6	;volatile
  1067     0192                     l7:
  1068     0192  0008               	return
  1069     0193                     __end_of_init_digital_keypad:
  1070                           
  1071                           	psect	text4
  1072     015A                     __ptext4:	
  1073 ;; *************** function _init_config *****************
  1074 ;; Defined at:
  1075 ;;		line 21 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		status,2, status,0, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 2
  1096 ;; This function calls:
  1097 ;;		_init_timer
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103     015A                     _init_config:	
  1104                           ;psect for function _init_config
  1105                           
  1106     015A                     l754:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _init_config: [status,2+status,0+pclath+cstack]
  1109                           
  1110                           
  1111                           ;main.c: 23:             } else if (key == 0x3D && duty_cycle > 0) {
  1112     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1113     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1114     015C  0188               	clrf	8	;volatile
  1115                           
  1116                           ;main.c: 24:                 duty_cycle--;
  1117     015D  1683               	bsf	3,5	;RP0=1, select bank1
  1118     015E  1303               	bcf	3,6	;RP1=0, select bank1
  1119     015F  0188               	clrf	8	;volatile
  1120     0160                     l756:
  1121                           
  1122                           ;main.c: 25:             }
  1123     0160  120A  118A  2182  120A  118A  	fcall	_init_timer
  1124     0165                     l758:
  1125                           
  1126                           ;main.c: 26:         }
  1127     0165  178B               	bsf	11,7	;volatile
  1128     0166                     l760:
  1129                           
  1130                           ;main.c: 27: 
  1131     0166  170B               	bsf	11,6	;volatile
  1132     0167                     l69:
  1133     0167  0008               	return
  1134     0168                     __end_of_init_config:
  1135                           
  1136                           	psect	text5
  1137     0182                     __ptext5:	
  1138 ;; *************** function _init_timer *****************
  1139 ;; Defined at:
  1140 ;;		line 9 in file "timer.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		None
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; Hardware stack levels required when called: 1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_init_config
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168     0182                     _init_timer:	
  1169                           ;psect for function _init_timer
  1170                           
  1171     0182                     l710:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _init_timer: []
  1174                           
  1175                           
  1176                           ;timer.c: 11:     TMR2ON = 1;
  1177     0182  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0183  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0184  1512               	bsf	18,2	;volatile
  1180                           
  1181                           ;timer.c: 12:     PR2 = 250;
  1182     0185  30FA               	movlw	250
  1183     0186  1683               	bsf	3,5	;RP0=1, select bank1
  1184     0187  1303               	bcf	3,6	;RP1=0, select bank1
  1185     0188  0092               	movwf	18	;volatile
  1186                           
  1187                           ;timer.c: 13:     TMR2IF = 0;
  1188     0189  1283               	bcf	3,5	;RP0=0, select bank0
  1189     018A  1303               	bcf	3,6	;RP1=0, select bank0
  1190     018B  108C               	bcf	12,1	;volatile
  1191     018C                     l90:
  1192     018C  0008               	return
  1193     018D                     __end_of_init_timer:
  1194                           
  1195                           	psect	text6
  1196     0168                     __ptext6:	
  1197 ;; *************** function _isr *****************
  1198 ;; Defined at:
  1199 ;;		line 27 in file "isr.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		None
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          2       0       0       0       0
  1216 ;;      Totals:         2       0       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		Interrupt level 1
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     0168                     _isr:	
  1227                           ;psect for function _isr
  1228                           
  1229     0168                     i1l682:
  1230                           
  1231                           ;isr.c: 28:     if (TMR2IF)
  1232     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1233     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1234     016A  1C8C               	btfss	12,1	;volatile
  1235     016B  296D               	goto	u5_21
  1236     016C  296E               	goto	u5_20
  1237     016D                     u5_21:
  1238     016D  296F               	goto	i1l40
  1239     016E                     u5_20:
  1240     016E                     i1l684:
  1241                           
  1242                           ;isr.c: 29:     {;isr.c: 30:         TMR2IF = 0;
  1243     016E  108C               	bcf	12,1	;volatile
  1244     016F                     i1l40:
  1245     016F  0871               	movf	??_isr+1,w
  1246     0170  008A               	movwf	10
  1247     0171  0E70               	swapf	??_isr,w
  1248     0172  0083               	movwf	3
  1249     0173  0EFE               	swapf	btemp,f
  1250     0174  0E7E               	swapf	btemp,w
  1251     0175  0009               	retfie
  1252     0176                     __end_of_isr:
  1253     0002                     ___latbits      equ	2
  1254     007E                     btemp           set	126	;btemp
  1255     007E                     wtemp0          set	126
  1256                           
  1257                           	psect	intentry
  1258     0004                     __pintentry:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _isr: []
  1261                           
  1262     0004                     interrupt_function:
  1263     007E                     saved_w         set	btemp
  1264     0004  00FE               	movwf	btemp
  1265     0005  0E03               	swapf	3,w
  1266     0006  00F0               	movwf	??_isr
  1267     0007  080A               	movf	10,w
  1268     0008  00F1               	movwf	??_isr+1
  1269     0009  120A  118A  2968   	ljmp	_isr
  1270                           
  1271                           	psect	config
  1272                           
  1273                           ;Config register CONFIG @ 0x2007
  1274                           ;	Oscillator Selection bits
  1275                           ;	FOSC = 0x3, unprogrammed default
  1276                           ;	Watchdog Timer Enable bit
  1277                           ;	WDTE = OFF, WDT disabled
  1278                           ;	Power-up Timer Enable bit
  1279                           ;	PWRTE = 0x1, unprogrammed default
  1280                           ;	Brown-out Reset Enable bit
  1281                           ;	BOREN = 0x1, unprogrammed default
  1282                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1283                           ;	LVP = 0x1, unprogrammed default
  1284                           ;	Data EEPROM Memory Code Protection bit
  1285                           ;	CPD = 0x1, unprogrammed default
  1286                           ;	Flash Program Memory Write Enable bits
  1287                           ;	WRT = 0x3, unprogrammed default
  1288                           ;	In-Circuit Debugger Mode bit
  1289                           ;	DEBUG = 0x1, unprogrammed default
  1290                           ;	Flash Program Memory Code Protection bit
  1291                           ;	CP = 0x1, unprogrammed default
  1292     2007                     	org	8199
  1293     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_digital_keypad

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      74
                                              4 COMMON     5     5      0
                        _init_config
                _init_digital_keypad
                _read_digital_keypad
                       _software_pwm
 ---------------------------------------------------------------------------------
 (1) _software_pwm                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      29
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                         _init_timer
 ---------------------------------------------------------------------------------
 (2) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_timer
   _init_digital_keypad
   _read_digital_keypad
   _software_pwm

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      16     20.0%
BITBANK0            80      0       0      0.0%
COMMON              14      9      10     71.4%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      28      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 08 19:40:10 2024

                          l7 0192                            pc 0002                           l13 0146  
                         l34 011C                           l90 018C                           l69 0167  
                         fsr 0004                          l710 0182                          l712 018D  
                        l722 0128                          l714 011E                          l724 0133  
                        l716 0123                          l726 0138                          l734 013A  
                        l750 00F9                          l742 00CF                          l760 0166  
                        l736 0143                          l752 0112                          l744 00E3  
                        l754 015A                          l738 0145                          l746 00E5  
                        l770 0068                          l762 002B                          l756 0160  
                        l748 00F6                          l780 00A0                          l772 0072  
                        l764 0030                          l758 0165                          l782 00AA  
                        l774 0078                          l766 0035                          l776 0089  
                        l784 00C6                          l768 003C                          l778 009A  
                        _GIE 005F                          _RD0 0040                          u100 0123  
                        u101 0122                          u110 0133                          u111 0132  
                        u120 0138                          u200 0089                          u121 0137  
                        u201 0088                          u130 0143                          u210 00A0  
                        u131 0142                          u211 009F                          u203 0085  
                        u140 00E3                          u220 00AA                          u141 00E2  
                        u221 00A9                          u150 00F6                          u230 00C6  
                        u151 00F5                          u160 0112                          u161 0111  
                        u153 00F2                          u145 00DF                          u170 005A  
                        u235 00B9                          u236 00BA                          u180 0068  
                        u237 00BF                          u181 0067                          u238 00C0  
                        u190 0078                          _PR2 0092                          u239 00C5  
                        u191 0077                          u175 004D                          u176 004E  
                        u177 0053                          u178 0054                          u179 0059  
                        _isr 0168                 _software_pwm 00CF                          indf 0000  
      ??_read_digital_keypad 0072                         ?_isr 0070                         _PEIE 005E  
                       i1l40 016F                         u5_20 016E                         u5_21 016D  
                       _main 002B                         _wait 0020                         btemp 007E  
                       start 000C                        ??_isr 0070                        ?_main 0070  
               ?_init_config 0070                        i1l682 0168                        i1l684 016E  
                      _PORTB 0006                        _PORTD 0008                        _TRISB 0086  
                      _TRISD 0088                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000F                 __end_of_main 00CF  
                     ??_main 0074                       _TMR2IE 0461                       _TMR2IF 0061  
                     _TMR2ON 0092  __end_of_init_digital_keypad 0193                       _period 0024  
               __pdataCOMMON 0079                       saved_w 007E      __end_of__initialization 0027  
             __pcstackCOMMON 0070                 __pidataBANK0 0176                   __pbssBANK0 002C  
                 __pmaintext 002B                   __pintentry 0004  __end_of_read_digital_keypad 0147  
                 _init_timer 0182                      __ptext1 00CF                      __ptext2 011D  
                    __ptext3 018D                      __ptext4 015A                      __ptext5 0182  
                    __ptext6 0168                   _duty_cycle 0028                      main@key 0078  
       end_of_initialization 0027                __pidataCOMMON 0193                  ?_init_timer 0070  
              ?_software_pwm 0070          start_initialization 000F                  __end_of_isr 0176  
                 init_fetch0 0147                  __pdataBANK0 0020                ??_init_config 0072  
             ??_software_pwm 0072                    ___latbits 0002          __end_of_init_config 0168  
          interrupt_function 0004          _init_digital_keypad 018D         __end_of_software_pwm 011D  
               _loop_counter 002C         ?_init_digital_keypad 0070                 ??_init_timer 0072  
                _init_config 015A      read_digital_keypad@mode 0073      read_digital_keypad@once 0079  
         __end_of_init_timer 018D        ??_init_digital_keypad 0072                     init_ram0 014B  
                   intlevel1 0000          _read_digital_keypad 011D         ?_read_digital_keypad 0070  
